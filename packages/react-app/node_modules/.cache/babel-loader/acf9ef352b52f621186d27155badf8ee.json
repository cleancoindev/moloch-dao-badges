{"ast":null,"code":"var _jsxFileName = \"/home/dekan/Projects/raid-guild/dao-badges-web/packages/react-app/src/App.js\";\nimport React from \"react\";\nimport logo from \"./ethereumLogo.png\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { gql } from \"apollo-boost\";\nimport { ethers } from \"ethers\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport \"./App.css\";\nimport { Web3SignIn } from \"./components/account/Web3SignIn\";\nimport { CurrentUserContext } from \"./contexts/Store\";\nimport Box from '3box';\nconst GET_TRANSFERS = gql`\nquery ($addr: String!){\n  badges(where: {memberAddress: $addr}) {\n    memberAddress\n    voteCount\n  }\n}\n`;\n\nfunction App() {\n  const [currentUser, setCurrentUser] = React.useContext(CurrentUserContext);\n  const [badges, setBadges] = React.useState([]);\n  const [user3BoxDetail, setUser3BoxDetail] = useState();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TRANSFERS, {\n    variables: {\n      addr: `${currentUser && currentUser.username ? currentUser.username : '0xbaf6e57a3940898fd21076b139d4ab231dcbbc5f'}`\n    }\n  });\n  console.log(loading, error, data);\n  React.useEffect(() => {\n    if (!loading && !error && data) {\n      console.log({\n        data: data\n      });\n      setBadges(data.badges);\n    }\n  }, [loading, error, data]);\n  useEffect(() => {\n    const get3BoxProfile = async () => {\n      const profile = await Box.getProfile(currentUser.username);\n      console.log(profile);\n      setUser3BoxDetail(profile);\n    };\n\n    if (currentUser && currentUser.ethAddress) {\n      get3BoxProfile();\n    }\n  }, [currentUser]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"react-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Votes: \", badges.length && badges[0].voteCount), currentUser && currentUser.username ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 49\n    }\n  }, currentUser.username) : /*#__PURE__*/React.createElement(Web3SignIn, {\n    setCurrentUser: setCurrentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 83\n    }\n  }), user3BoxDetail && /*#__PURE__*/React.createElement(\"a\", {\n    href: currentWeb3User && `https://3box.io/${currentUser.username}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    width: \"40\",\n    height: \"40\",\n    style: {\n      backgroundColor: '#b5b5b5'\n    },\n    src: user3BoxDetail.image ? `https://ipfs.infura.io/ipfs/${user3BoxDetail.image[0].contentUrl['/']}` : null,\n    roundedCircle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }), \" \", user3BoxDetail.name, \" \", user3BoxDetail.emoji))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/packages/react-app/src/App.js"],"names":["React","logo","addresses","abis","gql","ethers","useQuery","Web3SignIn","CurrentUserContext","Box","GET_TRANSFERS","App","currentUser","setCurrentUser","useContext","badges","setBadges","useState","user3BoxDetail","setUser3BoxDetail","loading","error","data","variables","addr","username","console","log","useEffect","get3BoxProfile","profile","getProfile","ethAddress","length","voteCount","currentWeb3User","backgroundColor","image","contentUrl","name","emoji"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from \"./ethereumLogo.png\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { gql } from \"apollo-boost\";\nimport { ethers } from \"ethers\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport \"./App.css\";\nimport { Web3SignIn } from \"./components/account/Web3SignIn\";\nimport { CurrentUserContext } from \"./contexts/Store\";\nimport Box from '3box';\n\nconst GET_TRANSFERS = gql`\nquery ($addr: String!){\n  badges(where: {memberAddress: $addr}) {\n    memberAddress\n    voteCount\n  }\n}\n`;\n\n\nfunction App() {\n  const [currentUser, setCurrentUser] = React.useContext(CurrentUserContext);\n  const [badges, setBadges] = React.useState([]);\n  const [user3BoxDetail, setUser3BoxDetail] = useState();\n  const { loading, error, data } = useQuery(GET_TRANSFERS, {\n    variables: {\n      addr: `${currentUser && currentUser.username ? currentUser.username : '0xbaf6e57a3940898fd21076b139d4ab231dcbbc5f' }`,\n    }});\n    console.log(loading, error, data);\n    \n  React.useEffect(() => {\n    if (!loading && !error && data ) {\n      console.log({ data: data });\n      setBadges(data.badges)\n    }\n  }, [loading, error, data]);\n\n  useEffect(() => {\n    const get3BoxProfile = async () => {\n      const profile = await Box.getProfile(currentUser.username);\n      console.log(profile);\n\n      setUser3BoxDetail(profile);\n    };\n    if (currentUser && currentUser.ethAddress) {\n      get3BoxProfile();\n    }\n  }, [currentUser]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"react-logo\" />\n\n        <p>Votes: {badges.length && badges[0].voteCount}</p>\n        {currentUser && currentUser.username ? (<p>{currentUser.username}</p>) : (<Web3SignIn setCurrentUser={setCurrentUser} />)}\n        {user3BoxDetail &&\n              <a href={\n                currentWeb3User &&\n                  `https://3box.io/${currentUser.username}/edit`}>\n                <p>\n                  <Image width=\"40\" height=\"40\" style={{ backgroundColor: '#b5b5b5' }}\n                    src={\n                      user3BoxDetail.image\n                        ? `https://ipfs.infura.io/ipfs/${user3BoxDetail.image[0].contentUrl['/']}`\n                        : null} roundedCircle />\n                  {\" \"}{user3BoxDetail.name} {user3BoxDetail.emoji}</p>\n              </a>}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
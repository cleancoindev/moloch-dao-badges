{"ast":null,"code":"'use strict';\n\nconst PeerId = require('peer-id');\n\nconst dht = require('ipfs-http-client/src/dht');\n\nconst defaultConfig = require('ipfs-http-client/src/utils/default-config');\n\nconst {\n  default: PQueue\n} = require('p-queue');\n\nconst debug = require('debug');\n\nconst log = debug('libp2p-delegated-peer-routing');\nlog.error = debug('libp2p-delegated-peer-routing:error');\nconst DEFAULT_MAX_TIMEOUT = 30e3; // 30 second default\n\nconst DEFAULT_IPFS_API = {\n  protocol: 'https',\n  port: 443,\n  host: 'node0.delegate.ipfs.io'\n};\nconst CONCURRENT_HTTP_REQUESTS = 4;\n\nclass DelegatedPeerRouting {\n  constructor(api) {\n    this.api = Object.assign({}, defaultConfig(), DEFAULT_IPFS_API, api);\n    this.dht = dht(this.api); // limit concurrency to avoid request flood in web browser\n    // https://github.com/libp2p/js-libp2p-delegated-content-routing/issues/12\n\n    this._httpQueue = new PQueue({\n      concurrency: CONCURRENT_HTTP_REQUESTS\n    });\n    log(`enabled DelegatedPeerRouting via ${this.api.protocol}://${this.api.host}:${this.api.port}`);\n  }\n  /**\n   * Attempts to find the given peer\n   *\n   * @param {PeerID} id\n   * @param {object} options\n   * @param {number} options.maxTimeout How long the query can take. Defaults to 30 seconds\n   * @returns {Promise<PeerInfo>}\n   */\n\n\n  async findPeer(id, options = {}) {\n    if (PeerId.isPeerId(id)) {\n      id = id.toB58String();\n    }\n\n    log('findPeer starts: ' + id);\n    options.maxTimeout = options.maxTimeout || DEFAULT_MAX_TIMEOUT;\n\n    try {\n      return await this._httpQueue.add(() => this.dht.findPeer(id, {\n        timeout: `${options.maxTimeout}ms` // The api requires specification of the time unit (s/ms)\n\n      }));\n    } catch (err) {\n      if (err.message.includes('not found')) {\n        return undefined;\n      }\n\n      throw err;\n    } finally {\n      log('findPeer finished: ' + id);\n    }\n  }\n\n}\n\nmodule.exports = DelegatedPeerRouting;","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/node_modules/libp2p-delegated-peer-routing/src/index.js"],"names":["PeerId","require","dht","defaultConfig","default","PQueue","debug","log","error","DEFAULT_MAX_TIMEOUT","DEFAULT_IPFS_API","protocol","port","host","CONCURRENT_HTTP_REQUESTS","DelegatedPeerRouting","constructor","api","Object","assign","_httpQueue","concurrency","findPeer","id","options","isPeerId","toB58String","maxTimeout","add","timeout","err","message","includes","undefined","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,0BAAD,CAAnB;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,2CAAD,CAA7B;;AACA,MAAM;AAAEG,EAAAA,OAAO,EAAEC;AAAX,IAAsBJ,OAAO,CAAC,SAAD,CAAnC;;AACA,MAAMK,KAAK,GAAGL,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMM,GAAG,GAAGD,KAAK,CAAC,+BAAD,CAAjB;AACAC,GAAG,CAACC,KAAJ,GAAYF,KAAK,CAAC,qCAAD,CAAjB;AAEA,MAAMG,mBAAmB,GAAG,IAA5B,C,CAAiC;;AACjC,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAE,OADa;AAEvBC,EAAAA,IAAI,EAAE,GAFiB;AAGvBC,EAAAA,IAAI,EAAE;AAHiB,CAAzB;AAKA,MAAMC,wBAAwB,GAAG,CAAjC;;AAEA,MAAMC,oBAAN,CAA2B;AACzBC,EAAAA,WAAW,CAAEC,GAAF,EAAO;AAChB,SAAKA,GAAL,GAAWC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,aAAa,EAA/B,EAAmCO,gBAAnC,EAAqDO,GAArD,CAAX;AACA,SAAKf,GAAL,GAAWA,GAAG,CAAC,KAAKe,GAAN,CAAd,CAFgB,CAIhB;AACA;;AACA,SAAKG,UAAL,GAAkB,IAAIf,MAAJ,CAAW;AAC3BgB,MAAAA,WAAW,EAAEP;AADc,KAAX,CAAlB;AAGAP,IAAAA,GAAG,CAAE,oCAAmC,KAAKU,GAAL,CAASN,QAAS,MAAK,KAAKM,GAAL,CAASJ,IAAK,IAAG,KAAKI,GAAL,CAASL,IAAK,EAA3F,CAAH;AACD;AAED;;;;;;;;;;AAQA,QAAMU,QAAN,CAAgBC,EAAhB,EAAoBC,OAAO,GAAG,EAA9B,EAAkC;AAChC,QAAIxB,MAAM,CAACyB,QAAP,CAAgBF,EAAhB,CAAJ,EAAyB;AACvBA,MAAAA,EAAE,GAAGA,EAAE,CAACG,WAAH,EAAL;AACD;;AACDnB,IAAAA,GAAG,CAAC,sBAAsBgB,EAAvB,CAAH;AAEAC,IAAAA,OAAO,CAACG,UAAR,GAAqBH,OAAO,CAACG,UAAR,IAAsBlB,mBAA3C;;AAEA,QAAI;AACF,aAAO,MAAM,KAAKW,UAAL,CAAgBQ,GAAhB,CAAoB,MAAM,KAAK1B,GAAL,CAASoB,QAAT,CAAkBC,EAAlB,EAAsB;AAC3DM,QAAAA,OAAO,EAAG,GAAEL,OAAO,CAACG,UAAW,IAD4B,CACzB;;AADyB,OAAtB,CAA1B,CAAb;AAGD,KAJD,CAIE,OAAOG,GAAP,EAAY;AACZ,UAAIA,GAAG,CAACC,OAAJ,CAAYC,QAAZ,CAAqB,WAArB,CAAJ,EAAuC;AACrC,eAAOC,SAAP;AACD;;AAED,YAAMH,GAAN;AACD,KAVD,SAUU;AACRvB,MAAAA,GAAG,CAAC,wBAAwBgB,EAAzB,CAAH;AACD;AACF;;AA1CwB;;AA6C3BW,MAAM,CAACC,OAAP,GAAiBpB,oBAAjB","sourcesContent":["'use strict'\n\nconst PeerId = require('peer-id')\nconst dht = require('ipfs-http-client/src/dht')\nconst defaultConfig = require('ipfs-http-client/src/utils/default-config')\nconst { default: PQueue } = require('p-queue')\nconst debug = require('debug')\n\nconst log = debug('libp2p-delegated-peer-routing')\nlog.error = debug('libp2p-delegated-peer-routing:error')\n\nconst DEFAULT_MAX_TIMEOUT = 30e3 // 30 second default\nconst DEFAULT_IPFS_API = {\n  protocol: 'https',\n  port: 443,\n  host: 'node0.delegate.ipfs.io'\n}\nconst CONCURRENT_HTTP_REQUESTS = 4\n\nclass DelegatedPeerRouting {\n  constructor (api) {\n    this.api = Object.assign({}, defaultConfig(), DEFAULT_IPFS_API, api)\n    this.dht = dht(this.api)\n\n    // limit concurrency to avoid request flood in web browser\n    // https://github.com/libp2p/js-libp2p-delegated-content-routing/issues/12\n    this._httpQueue = new PQueue({\n      concurrency: CONCURRENT_HTTP_REQUESTS\n    })\n    log(`enabled DelegatedPeerRouting via ${this.api.protocol}://${this.api.host}:${this.api.port}`)\n  }\n\n  /**\n   * Attempts to find the given peer\n   *\n   * @param {PeerID} id\n   * @param {object} options\n   * @param {number} options.maxTimeout How long the query can take. Defaults to 30 seconds\n   * @returns {Promise<PeerInfo>}\n   */\n  async findPeer (id, options = {}) {\n    if (PeerId.isPeerId(id)) {\n      id = id.toB58String()\n    }\n    log('findPeer starts: ' + id)\n\n    options.maxTimeout = options.maxTimeout || DEFAULT_MAX_TIMEOUT\n\n    try {\n      return await this._httpQueue.add(() => this.dht.findPeer(id, {\n        timeout: `${options.maxTimeout}ms`// The api requires specification of the time unit (s/ms)\n      }))\n    } catch (err) {\n      if (err.message.includes('not found')) {\n        return undefined\n      }\n\n      throw err\n    } finally {\n      log('findPeer finished: ' + id)\n    }\n  }\n}\n\nmodule.exports = DelegatedPeerRouting\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nconst errCode = require('err-code');\n\nconst resolvers = {\n  'dag-pb': require('./unixfs-v1'),\n  raw: require('./raw'),\n  'dag-cbor': require('./dag-cbor')\n};\n\nconst resolve = (cid, name, path, toResolve, depth, ipld) => {\n  const resolver = resolvers[cid.codec];\n\n  if (!resolver) {\n    throw errCode(new Error(`No resolver for codec ${cid.codec}`), 'ERR_NO_RESOLVER');\n  }\n\n  return resolver(cid, name, path, toResolve, resolve, depth, ipld);\n};\n\nmodule.exports = resolve;","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/node_modules/ipfs-unixfs-exporter/src/resolvers/index.js"],"names":["errCode","require","resolvers","raw","resolve","cid","name","path","toResolve","depth","ipld","resolver","codec","Error","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AAEA,MAAMC,SAAS,GAAG;AAChB,YAAUD,OAAO,CAAC,aAAD,CADD;AAEhBE,EAAAA,GAAG,EAAEF,OAAO,CAAC,OAAD,CAFI;AAGhB,cAAYA,OAAO,CAAC,YAAD;AAHH,CAAlB;;AAMA,MAAMG,OAAO,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAkBC,SAAlB,EAA6BC,KAA7B,EAAoCC,IAApC,KAA6C;AAC3D,QAAMC,QAAQ,GAAGT,SAAS,CAACG,GAAG,CAACO,KAAL,CAA1B;;AAEA,MAAI,CAACD,QAAL,EAAe;AACb,UAAMX,OAAO,CAAC,IAAIa,KAAJ,CAAW,yBAAwBR,GAAG,CAACO,KAAM,EAA7C,CAAD,EAAkD,iBAAlD,CAAb;AACD;;AAED,SAAOD,QAAQ,CAACN,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAkBC,SAAlB,EAA6BJ,OAA7B,EAAsCK,KAAtC,EAA6CC,IAA7C,CAAf;AACD,CARD;;AAUAI,MAAM,CAACC,OAAP,GAAiBX,OAAjB","sourcesContent":["'use strict'\n\nconst errCode = require('err-code')\n\nconst resolvers = {\n  'dag-pb': require('./unixfs-v1'),\n  raw: require('./raw'),\n  'dag-cbor': require('./dag-cbor')\n}\n\nconst resolve = (cid, name, path, toResolve, depth, ipld) => {\n  const resolver = resolvers[cid.codec]\n\n  if (!resolver) {\n    throw errCode(new Error(`No resolver for codec ${cid.codec}`), 'ERR_NO_RESOLVER')\n  }\n\n  return resolver(cid, name, path, toResolve, resolve, depth, ipld)\n}\n\nmodule.exports = resolve\n"]},"metadata":{},"sourceType":"script"}
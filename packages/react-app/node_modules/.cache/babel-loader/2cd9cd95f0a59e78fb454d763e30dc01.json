{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sha256 = sha256;\nexports.keccak = keccak;\nexports.toEthereumAddress = toEthereumAddress;\n\nvar _jsSha = require(\"js-sha256\");\n\nvar _jsSha2 = require(\"js-sha3\");\n\nvar _buffer = require(\"buffer\"); // eslint-disable-line\n\n\nfunction sha256(payload) {\n  return _buffer.Buffer.from(_jsSha.sha256.arrayBuffer(payload));\n}\n\nfunction keccak(data) {\n  return _buffer.Buffer.from(_jsSha2.keccak_256.buffer(data));\n}\n\nfunction toEthereumAddress(hexPublicKey) {\n  return \"0x\".concat(keccak(_buffer.Buffer.from(hexPublicKey.slice(2), 'hex')).slice(-20).toString('hex'));\n}","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/did-jwt/lib/Digest.js"],"names":["Object","defineProperty","exports","value","sha256","keccak","toEthereumAddress","_jsSha","require","_jsSha2","_buffer","payload","Buffer","from","arrayBuffer","data","keccak_256","buffer","hexPublicKey","concat","slice","toString"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,MAAR,GAAiBA,MAAjB;AACAF,OAAO,CAACG,MAAR,GAAiBA,MAAjB;AACAH,OAAO,CAACI,iBAAR,GAA4BA,iBAA5B;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAIE,OAAO,GAAGF,OAAO,CAAC,QAAD,CAArB,C,CAEA;;;AACA,SAASJ,MAAT,CAAgBO,OAAhB,EAAyB;AACvB,SAAOD,OAAO,CAACE,MAAR,CAAeC,IAAf,CAAoBN,MAAM,CAACH,MAAP,CAAcU,WAAd,CAA0BH,OAA1B,CAApB,CAAP;AACD;;AAED,SAASN,MAAT,CAAgBU,IAAhB,EAAsB;AACpB,SAAOL,OAAO,CAACE,MAAR,CAAeC,IAAf,CAAoBJ,OAAO,CAACO,UAAR,CAAmBC,MAAnB,CAA0BF,IAA1B,CAApB,CAAP;AACD;;AAED,SAAST,iBAAT,CAA2BY,YAA3B,EAAyC;AACvC,SAAO,KAAKC,MAAL,CAAYd,MAAM,CAACK,OAAO,CAACE,MAAR,CAAeC,IAAf,CAAoBK,YAAY,CAACE,KAAb,CAAmB,CAAnB,CAApB,EAA2C,KAA3C,CAAD,CAAN,CAA0DA,KAA1D,CAAgE,CAAC,EAAjE,EAAqEC,QAArE,CAA8E,KAA9E,CAAZ,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sha256 = sha256;\nexports.keccak = keccak;\nexports.toEthereumAddress = toEthereumAddress;\n\nvar _jsSha = require(\"js-sha256\");\n\nvar _jsSha2 = require(\"js-sha3\");\n\nvar _buffer = require(\"buffer\");\n\n// eslint-disable-line\nfunction sha256(payload) {\n  return _buffer.Buffer.from(_jsSha.sha256.arrayBuffer(payload));\n}\n\nfunction keccak(data) {\n  return _buffer.Buffer.from(_jsSha2.keccak_256.buffer(data));\n}\n\nfunction toEthereumAddress(hexPublicKey) {\n  return \"0x\".concat(keccak(_buffer.Buffer.from(hexPublicKey.slice(2), 'hex')).slice(-20).toString('hex'));\n}"]},"metadata":{},"sourceType":"script"}
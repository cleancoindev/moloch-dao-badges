{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar globalObject;\nvar REGISTRY;\n\nif (typeof window === 'object') {\n  globalObject = window;\n} else if (typeof global === 'object') {\n  globalObject = global;\n} else {\n  globalObject = {\n    DID_REGISTRY: {}\n  };\n}\n\nif (globalObject.DID_REGISTRY) {\n  REGISTRY = globalObject.DID_REGISTRY;\n} else {\n  REGISTRY = globalObject.DID_REGISTRY = {};\n}\n\nfunction registerMethod(method, resolver) {\n  REGISTRY[method] = resolver;\n}\n\nexports.registerMethod = registerMethod;\n\nfunction parse(did) {\n  if (did === '') throw new Error('Missing DID');\n  var sections = did.match(/^did:([a-zA-Z0-9_]+):([[a-zA-Z0-9_.-]+)(\\/[^#]*)?(#.*)?$/);\n\n  if (sections) {\n    var parts = {\n      did: sections[0],\n      method: sections[1],\n      id: sections[2]\n    };\n    if (sections[3]) parts.path = sections[3];\n    if (sections[4]) parts.fragment = sections[4].slice(1);\n    return parts;\n  }\n\n  throw new Error(\"Invalid DID \" + did);\n}\n\nexports.parse = parse;\n\nfunction resolve(did) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsed, resolver;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          parsed = parse(did);\n          resolver = REGISTRY[parsed.method];\n          if (!resolver) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , resolver(did, parsed)];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent()];\n\n        case 2:\n          throw new Error(\"Unsupported DID method: '\" + parsed.method + \"'\");\n      }\n    });\n  });\n}\n\nexports.default = resolve;","map":{"version":3,"sources":["../src/resolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,IAAI,YAAJ;AAIA,IAAI,QAAJ;;AAEA,IAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,EAAA,YAAY,GAAG,MAAf;AACD,CAFD,MAEO,IAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC;AACrC,EAAA,YAAY,GAAG,MAAf;AACD,CAFM,MAEA;AACL,EAAA,YAAY,GAAG;AACb,IAAA,YAAY,EAAE;AADD,GAAf;AAGD;;AAED,IAAI,YAAY,CAAC,YAAjB,EAA+B;AAC7B,EAAA,QAAQ,GAAG,YAAY,CAAC,YAAxB;AACD,CAFD,MAEO;AACL,EAAA,QAAQ,GAAG,YAAY,CAAC,YAAb,GAA4B,EAAvC;AACD;;AAED,SAAgB,cAAhB,CAAgC,MAAhC,EAAgD,QAAhD,EAAqE;AACnE,EAAA,QAAQ,CAAC,MAAD,CAAR,GAAmB,QAAnB;AACD;;AAFD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAIA,SAAgB,KAAhB,CAAuB,GAAvB,EAAkC;AAChC,MAAI,GAAG,KAAK,EAAZ,EAAgB,MAAM,IAAI,KAAJ,CAAU,aAAV,CAAN;AAChB,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAJ,CAAU,0DAAV,CAAjB;;AACA,MAAI,QAAJ,EAAc;AACZ,QAAM,KAAK,GAAe;AAAC,MAAA,GAAG,EAAE,QAAQ,CAAC,CAAD,CAAd;AAAmB,MAAA,MAAM,EAAE,QAAQ,CAAC,CAAD,CAAnC;AAAwC,MAAA,EAAE,EAAE,QAAQ,CAAC,CAAD;AAApD,KAA1B;AACA,QAAI,QAAQ,CAAC,CAAD,CAAZ,EAAiB,KAAK,CAAC,IAAN,GAAa,QAAQ,CAAC,CAAD,CAArB;AACjB,QAAI,QAAQ,CAAC,CAAD,CAAZ,EAAiB,KAAK,CAAC,QAAN,GAAiB,QAAQ,CAAC,CAAD,CAAR,CAAY,KAAZ,CAAkB,CAAlB,CAAjB;AACjB,WAAO,KAAP;AACD;;AACD,QAAM,IAAI,KAAJ,CAAU,iBAAe,GAAzB,CAAN;AACD;;AAVD,OAAA,CAAA,KAAA,GAAA,KAAA;;AAYA,SAA8B,OAA9B,CAAuC,GAAvC,EAAkD;;;;;;AAC1C,UAAA,MAAM,GAAG,KAAK,CAAC,GAAD,CAAd;AACA,UAAA,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAR,CAAnB;eACF,Q,EAAA,OAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;AACK,iBAAA,CAAA;AAAA;AAAA,YAAM,QAAQ,CAAC,GAAD,EAAM,MAAN,CAAd,CAAA;;;AAAP,iBAAA,CAAA;AAAA;AAAA,YAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;AAEF,gBAAM,IAAI,KAAJ,CAAU,8BAA4B,MAAM,CAAC,MAAnC,GAAyC,GAAnD,CAAN;;;;AACD;;AAPD,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globalObject;\nvar REGISTRY;\nif (typeof window === 'object') {\n    globalObject = window;\n}\nelse if (typeof global === 'object') {\n    globalObject = global;\n}\nelse {\n    globalObject = {\n        DID_REGISTRY: {}\n    };\n}\nif (globalObject.DID_REGISTRY) {\n    REGISTRY = globalObject.DID_REGISTRY;\n}\nelse {\n    REGISTRY = globalObject.DID_REGISTRY = {};\n}\nfunction registerMethod(method, resolver) {\n    REGISTRY[method] = resolver;\n}\nexports.registerMethod = registerMethod;\nfunction parse(did) {\n    if (did === '')\n        throw new Error('Missing DID');\n    var sections = did.match(/^did:([a-zA-Z0-9_]+):([[a-zA-Z0-9_.-]+)(\\/[^#]*)?(#.*)?$/);\n    if (sections) {\n        var parts = { did: sections[0], method: sections[1], id: sections[2] };\n        if (sections[3])\n            parts.path = sections[3];\n        if (sections[4])\n            parts.fragment = sections[4].slice(1);\n        return parts;\n    }\n    throw new Error(\"Invalid DID \" + did);\n}\nexports.parse = parse;\nfunction resolve(did) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsed, resolver;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    parsed = parse(did);\n                    resolver = REGISTRY[parsed.method];\n                    if (!resolver) return [3 /*break*/, 2];\n                    return [4 /*yield*/, resolver(did, parsed)];\n                case 1: return [2 /*return*/, _a.sent()];\n                case 2: throw new Error(\"Unsupported DID method: '\" + parsed.method + \"'\");\n            }\n        });\n    });\n}\nexports.default = resolve;\n//# sourceMappingURL=resolver.js.map"]},"metadata":{},"sourceType":"script"}
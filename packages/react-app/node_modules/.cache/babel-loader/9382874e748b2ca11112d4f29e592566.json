{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar verifier = require('./utils/verifier');\n\nvar Verified = /*#__PURE__*/function () {\n  /**\n   * Please use **box.verified** to get the instance of this class\n   */\n  function Verified(box) {\n    (0, _classCallCheck2[\"default\"])(this, Verified);\n    this._box = box;\n  }\n\n  (0, _createClass2[\"default\"])(Verified, [{\n    key: \"_addVerifiedPublicAccount\",\n    value: function () {\n      var _addVerifiedPublicAccount2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(key, proof, verificationFunction) {\n        var account;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return verificationFunction(this._box.DID, proof);\n\n              case 2:\n                account = _context.sent;\n                _context.next = 5;\n                return this._box[\"public\"].set('proof_' + key, proof);\n\n              case 5:\n                return _context.abrupt(\"return\", account);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _addVerifiedPublicAccount(_x, _x2, _x3) {\n        return _addVerifiedPublicAccount2.apply(this, arguments);\n      }\n\n      return _addVerifiedPublicAccount;\n    }()\n  }, {\n    key: \"_getVerifiedPublicAccount\",\n    value: function () {\n      var _getVerifiedPublicAccount2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(key, verificationFunction) {\n        var proof;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._box[\"public\"].get('proof_' + key);\n\n              case 2:\n                proof = _context2.sent;\n                return _context2.abrupt(\"return\", verificationFunction(this._box.DID, proof));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _getVerifiedPublicAccount(_x4, _x5) {\n        return _getVerifiedPublicAccount2.apply(this, arguments);\n      }\n\n      return _getVerifiedPublicAccount;\n    }()\n  }, {\n    key: \"_addVerifiedPrivateAccount\",\n    value: function () {\n      var _addVerifiedPrivateAccount2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(key, proof, verificationFunction) {\n        var account;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return verificationFunction(this._box.DID, proof);\n\n              case 2:\n                account = _context3.sent;\n                _context3.next = 5;\n                return this._box[\"private\"].set('proof_' + key, proof);\n\n              case 5:\n                return _context3.abrupt(\"return\", account);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _addVerifiedPrivateAccount(_x6, _x7, _x8) {\n        return _addVerifiedPrivateAccount2.apply(this, arguments);\n      }\n\n      return _addVerifiedPrivateAccount;\n    }()\n  }, {\n    key: \"_getVerifiedPrivateAccount\",\n    value: function () {\n      var _getVerifiedPrivateAccount2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(key, verificationFunction) {\n        var proof;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._box[\"private\"].get('proof_' + key);\n\n              case 2:\n                proof = _context4.sent;\n                return _context4.abrupt(\"return\", verificationFunction(this._box.DID, proof));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function _getVerifiedPrivateAccount(_x9, _x10) {\n        return _getVerifiedPrivateAccount2.apply(this, arguments);\n      }\n\n      return _getVerifiedPrivateAccount;\n    }()\n    /**\n     * Returns the verified DID of the user\n     *\n     * @return    {String}                            The DID of the user\n     */\n\n  }, {\n    key: \"DID\",\n    value: function () {\n      var _DID = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", this._box.DID);\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function DID() {\n        return _DID.apply(this, arguments);\n      }\n\n      return DID;\n    }()\n    /**\n     * Verifies that the user has a valid github account\n     * Throws an error otherwise.\n     *\n     * @return    {Object}                            Object containing username, and proof\n     */\n\n  }, {\n    key: \"github\",\n    value: function () {\n      var _github = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6() {\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this._getVerifiedPublicAccount('github', verifier.verifyGithub));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function github() {\n        return _github.apply(this, arguments);\n      }\n\n      return github;\n    }()\n    /**\n     * Adds a github verification to the users profile\n     * Throws an error if the verification fails.\n     *\n     * @param     {Object}            gistUrl         URL of the proof\n     * @return    {Object}                            Object containing username, and proof\n     */\n\n  }, {\n    key: \"addGithub\",\n    value: function () {\n      var _addGithub = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(gistUrl) {\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", this._addVerifiedPublicAccount('github', gistUrl, verifier.verifyGithub));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function addGithub(_x11) {\n        return _addGithub.apply(this, arguments);\n      }\n\n      return addGithub;\n    }()\n    /**\n     * Verifies that the user has a valid twitter account\n     * Throws an error otherwise.\n     *\n     * @return    {Object}                            Object containing username, proof, and the verifier\n     */\n\n  }, {\n    key: \"twitter\",\n    value: function () {\n      var _twitter = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8() {\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                return _context8.abrupt(\"return\", this._getVerifiedPublicAccount('twitter', verifier.verifyTwitter));\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function twitter() {\n        return _twitter.apply(this, arguments);\n      }\n\n      return twitter;\n    }()\n    /**\n     * Adds a twitter verification to the users profile\n     * Throws an error if the verification fails.\n     *\n     * @param     {String}            claim           A did-JWT claim ownership of a twitter username\n     * @return    {Object}                            Object containing username, proof, and the verifier\n     */\n\n  }, {\n    key: \"addTwitter\",\n    value: function () {\n      var _addTwitter = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(claim) {\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt(\"return\", this._addVerifiedPublicAccount('twitter', claim, verifier.verifyTwitter));\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function addTwitter(_x12) {\n        return _addTwitter.apply(this, arguments);\n      }\n\n      return addTwitter;\n    }()\n    /**\n    * Verifies that the user has a verified email account\n    * Throws an error otherwise.\n    *\n    * @return    {Object}                            Object containing username, proof, and the verifier\n    */\n\n  }, {\n    key: \"email\",\n    value: function () {\n      var _email = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10() {\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt(\"return\", this._getVerifiedPrivateAccount('email', verifier.verifyEmail));\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function email() {\n        return _email.apply(this, arguments);\n      }\n\n      return email;\n    }()\n    /**\n     * Adds an email verification to the users profile\n     * Throws an error if the verification fails.\n     *\n     * @param     {String}            claim           A did-JWT claim ownership of an email username\n     * @return    {Object}                            Object containing username, proof, and the verifier\n     */\n\n  }, {\n    key: \"addEmail\",\n    value: function () {\n      var _addEmail = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(claim) {\n        return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt(\"return\", this._addVerifiedPrivateAccount('email', claim, verifier.verifyEmail));\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function addEmail(_x13) {\n        return _addEmail.apply(this, arguments);\n      }\n\n      return addEmail;\n    }()\n  }]);\n  return Verified;\n}();\n\nmodule.exports = Verified;","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/3box/lib/verified.js"],"names":["_interopRequireDefault","require","_regenerator","_asyncToGenerator2","_classCallCheck2","_createClass2","verifier","Verified","box","_box","key","value","_addVerifiedPublicAccount2","mark","_callee","proof","verificationFunction","account","wrap","_callee$","_context","prev","next","DID","sent","set","abrupt","stop","_addVerifiedPublicAccount","_x","_x2","_x3","apply","arguments","_getVerifiedPublicAccount2","_callee2","_callee2$","_context2","get","_getVerifiedPublicAccount","_x4","_x5","_addVerifiedPrivateAccount2","_callee3","_callee3$","_context3","_addVerifiedPrivateAccount","_x6","_x7","_x8","_getVerifiedPrivateAccount2","_callee4","_callee4$","_context4","_getVerifiedPrivateAccount","_x9","_x10","_DID","_callee5","_callee5$","_context5","_github","_callee6","_callee6$","_context6","verifyGithub","github","_addGithub","_callee7","gistUrl","_callee7$","_context7","addGithub","_x11","_twitter","_callee8","_callee8$","_context8","verifyTwitter","twitter","_addTwitter","_callee9","claim","_callee9$","_context9","addTwitter","_x12","_email","_callee10","_callee10$","_context10","verifyEmail","email","_addEmail","_callee11","_callee11$","_context11","addEmail","_x13","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar verifier = require('./utils/verifier');\n\nvar Verified =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Please use **box.verified** to get the instance of this class\n   */\n  function Verified(box) {\n    (0, _classCallCheck2[\"default\"])(this, Verified);\n    this._box = box;\n  }\n\n  (0, _createClass2[\"default\"])(Verified, [{\n    key: \"_addVerifiedPublicAccount\",\n    value: function () {\n      var _addVerifiedPublicAccount2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(key, proof, verificationFunction) {\n        var account;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return verificationFunction(this._box.DID, proof);\n\n              case 2:\n                account = _context.sent;\n                _context.next = 5;\n                return this._box[\"public\"].set('proof_' + key, proof);\n\n              case 5:\n                return _context.abrupt(\"return\", account);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _addVerifiedPublicAccount(_x, _x2, _x3) {\n        return _addVerifiedPublicAccount2.apply(this, arguments);\n      }\n\n      return _addVerifiedPublicAccount;\n    }()\n  }, {\n    key: \"_getVerifiedPublicAccount\",\n    value: function () {\n      var _getVerifiedPublicAccount2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(key, verificationFunction) {\n        var proof;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._box[\"public\"].get('proof_' + key);\n\n              case 2:\n                proof = _context2.sent;\n                return _context2.abrupt(\"return\", verificationFunction(this._box.DID, proof));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _getVerifiedPublicAccount(_x4, _x5) {\n        return _getVerifiedPublicAccount2.apply(this, arguments);\n      }\n\n      return _getVerifiedPublicAccount;\n    }()\n  }, {\n    key: \"_addVerifiedPrivateAccount\",\n    value: function () {\n      var _addVerifiedPrivateAccount2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3(key, proof, verificationFunction) {\n        var account;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return verificationFunction(this._box.DID, proof);\n\n              case 2:\n                account = _context3.sent;\n                _context3.next = 5;\n                return this._box[\"private\"].set('proof_' + key, proof);\n\n              case 5:\n                return _context3.abrupt(\"return\", account);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _addVerifiedPrivateAccount(_x6, _x7, _x8) {\n        return _addVerifiedPrivateAccount2.apply(this, arguments);\n      }\n\n      return _addVerifiedPrivateAccount;\n    }()\n  }, {\n    key: \"_getVerifiedPrivateAccount\",\n    value: function () {\n      var _getVerifiedPrivateAccount2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee4(key, verificationFunction) {\n        var proof;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._box[\"private\"].get('proof_' + key);\n\n              case 2:\n                proof = _context4.sent;\n                return _context4.abrupt(\"return\", verificationFunction(this._box.DID, proof));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function _getVerifiedPrivateAccount(_x9, _x10) {\n        return _getVerifiedPrivateAccount2.apply(this, arguments);\n      }\n\n      return _getVerifiedPrivateAccount;\n    }()\n    /**\n     * Returns the verified DID of the user\n     *\n     * @return    {String}                            The DID of the user\n     */\n\n  }, {\n    key: \"DID\",\n    value: function () {\n      var _DID = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee5() {\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", this._box.DID);\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function DID() {\n        return _DID.apply(this, arguments);\n      }\n\n      return DID;\n    }()\n    /**\n     * Verifies that the user has a valid github account\n     * Throws an error otherwise.\n     *\n     * @return    {Object}                            Object containing username, and proof\n     */\n\n  }, {\n    key: \"github\",\n    value: function () {\n      var _github = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee6() {\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this._getVerifiedPublicAccount('github', verifier.verifyGithub));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function github() {\n        return _github.apply(this, arguments);\n      }\n\n      return github;\n    }()\n    /**\n     * Adds a github verification to the users profile\n     * Throws an error if the verification fails.\n     *\n     * @param     {Object}            gistUrl         URL of the proof\n     * @return    {Object}                            Object containing username, and proof\n     */\n\n  }, {\n    key: \"addGithub\",\n    value: function () {\n      var _addGithub = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee7(gistUrl) {\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", this._addVerifiedPublicAccount('github', gistUrl, verifier.verifyGithub));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function addGithub(_x11) {\n        return _addGithub.apply(this, arguments);\n      }\n\n      return addGithub;\n    }()\n    /**\n     * Verifies that the user has a valid twitter account\n     * Throws an error otherwise.\n     *\n     * @return    {Object}                            Object containing username, proof, and the verifier\n     */\n\n  }, {\n    key: \"twitter\",\n    value: function () {\n      var _twitter = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee8() {\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                return _context8.abrupt(\"return\", this._getVerifiedPublicAccount('twitter', verifier.verifyTwitter));\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function twitter() {\n        return _twitter.apply(this, arguments);\n      }\n\n      return twitter;\n    }()\n    /**\n     * Adds a twitter verification to the users profile\n     * Throws an error if the verification fails.\n     *\n     * @param     {String}            claim           A did-JWT claim ownership of a twitter username\n     * @return    {Object}                            Object containing username, proof, and the verifier\n     */\n\n  }, {\n    key: \"addTwitter\",\n    value: function () {\n      var _addTwitter = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee9(claim) {\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt(\"return\", this._addVerifiedPublicAccount('twitter', claim, verifier.verifyTwitter));\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function addTwitter(_x12) {\n        return _addTwitter.apply(this, arguments);\n      }\n\n      return addTwitter;\n    }()\n    /**\n    * Verifies that the user has a verified email account\n    * Throws an error otherwise.\n    *\n    * @return    {Object}                            Object containing username, proof, and the verifier\n    */\n\n  }, {\n    key: \"email\",\n    value: function () {\n      var _email = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee10() {\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt(\"return\", this._getVerifiedPrivateAccount('email', verifier.verifyEmail));\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function email() {\n        return _email.apply(this, arguments);\n      }\n\n      return email;\n    }()\n    /**\n     * Adds an email verification to the users profile\n     * Throws an error if the verification fails.\n     *\n     * @param     {String}            claim           A did-JWT claim ownership of an email username\n     * @return    {Object}                            Object containing username, proof, and the verifier\n     */\n\n  }, {\n    key: \"addEmail\",\n    value: function () {\n      var _addEmail = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee11(claim) {\n        return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt(\"return\", this._addVerifiedPrivateAccount('email', claim, verifier.verifyEmail));\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function addEmail(_x13) {\n        return _addEmail.apply(this, arguments);\n      }\n\n      return addEmail;\n    }()\n  }]);\n  return Verified;\n}();\n\nmodule.exports = Verified;"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nconst EE = require(\"events\").EventEmitter;\n\nfunction DataQueue() {\n  const ee = new EE();\n  let q = [];\n  let ed;\n\n  function unleak() {\n    ee.removeAllListeners(\"err\");\n    ee.removeAllListeners(\"data\");\n  }\n\n  return {\n    append: data => {\n      if (ed) return ed;\n      q.push(data);\n      ee.emit(\"data\");\n    },\n    prepend: data => {\n      //better only call this before the get queue starts\n      if (ed) return ed;\n      q.unshift(data);\n    },\n    error: e => {\n      ed = e;\n      ee.emit(\"err\", e);\n    },\n    get: cb => {\n      unleak();\n      if (ed) return cb(ed);\n      if (q.length) return cb(null, q.shift());\n      ee.once(\"err\", e => {\n        unleak();\n        cb(e);\n      });\n      ee.once(\"data\", () => {\n        unleak();\n        return cb(null, q.shift());\n      });\n    },\n    height: () => q.length\n  };\n}\n\nmodule.exports = DataQueue;","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/node_modules/data-queue/index.js"],"names":["EE","require","EventEmitter","DataQueue","ee","q","ed","unleak","removeAllListeners","append","data","push","emit","prepend","unshift","error","e","get","cb","length","shift","once","height","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAA7B;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAMC,EAAE,GAAG,IAAIJ,EAAJ,EAAX;AACA,MAAIK,CAAC,GAAG,EAAR;AACA,MAAIC,EAAJ;;AAEA,WAASC,MAAT,GAAkB;AAChBH,IAAAA,EAAE,CAACI,kBAAH,CAAsB,KAAtB;AACAJ,IAAAA,EAAE,CAACI,kBAAH,CAAsB,MAAtB;AACD;;AAED,SAAO;AACLC,IAAAA,MAAM,EAAEC,IAAI,IAAI;AACd,UAAIJ,EAAJ,EAAQ,OAAOA,EAAP;AACRD,MAAAA,CAAC,CAACM,IAAF,CAAOD,IAAP;AACAN,MAAAA,EAAE,CAACQ,IAAH,CAAQ,MAAR;AACD,KALI;AAMLC,IAAAA,OAAO,EAAEH,IAAI,IAAI;AAAE;AACjB,UAAIJ,EAAJ,EAAQ,OAAOA,EAAP;AACRD,MAAAA,CAAC,CAACS,OAAF,CAAUJ,IAAV;AACD,KATI;AAULK,IAAAA,KAAK,EAAEC,CAAC,IAAI;AACVV,MAAAA,EAAE,GAAGU,CAAL;AACAZ,MAAAA,EAAE,CAACQ,IAAH,CAAQ,KAAR,EAAeI,CAAf;AACD,KAbI;AAcLC,IAAAA,GAAG,EAAEC,EAAE,IAAI;AACTX,MAAAA,MAAM;AACN,UAAID,EAAJ,EAAQ,OAAOY,EAAE,CAACZ,EAAD,CAAT;AACR,UAAID,CAAC,CAACc,MAAN,EAAc,OAAOD,EAAE,CAAC,IAAD,EAAOb,CAAC,CAACe,KAAF,EAAP,CAAT;AACdhB,MAAAA,EAAE,CAACiB,IAAH,CAAQ,KAAR,EAAeL,CAAC,IAAI;AAClBT,QAAAA,MAAM;AACNW,QAAAA,EAAE,CAACF,CAAD,CAAF;AACD,OAHD;AAIAZ,MAAAA,EAAE,CAACiB,IAAH,CAAQ,MAAR,EAAgB,MAAM;AACpBd,QAAAA,MAAM;AACN,eAAOW,EAAE,CAAC,IAAD,EAAOb,CAAC,CAACe,KAAF,EAAP,CAAT;AACD,OAHD;AAID,KA1BI;AA2BLE,IAAAA,MAAM,EAAE,MAAMjB,CAAC,CAACc;AA3BX,GAAP;AA6BD;;AACDI,MAAM,CAACC,OAAP,GAAiBrB,SAAjB","sourcesContent":["\"use strict\"\n\nconst EE = require(\"events\").EventEmitter\n\nfunction DataQueue() {\n  const ee = new EE()\n  let q = []\n  let ed\n\n  function unleak() {\n    ee.removeAllListeners(\"err\")\n    ee.removeAllListeners(\"data\")\n  }\n\n  return {\n    append: data => {\n      if (ed) return ed\n      q.push(data)\n      ee.emit(\"data\")\n    },\n    prepend: data => { //better only call this before the get queue starts\n      if (ed) return ed\n      q.unshift(data)\n    },\n    error: e => {\n      ed = e\n      ee.emit(\"err\", e)\n    },\n    get: cb => {\n      unleak()\n      if (ed) return cb(ed)\n      if (q.length) return cb(null, q.shift())\n      ee.once(\"err\", e => {\n        unleak()\n        cb(e)\n      })\n      ee.once(\"data\", () => {\n        unleak()\n        return cb(null, q.shift())\n      })\n    },\n    height: () => q.length\n  }\n}\nmodule.exports = DataQueue\n"]},"metadata":{},"sourceType":"script"}
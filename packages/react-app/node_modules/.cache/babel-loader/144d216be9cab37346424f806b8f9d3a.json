{"ast":null,"code":"var _jsxFileName = \"/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/packages/react-app/src/components/badges/BadgeList.js\";\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_BADGES } from \"../../utils/Queries\";\nimport { hydrateBadgeData } from \"../../utils/Helpers\";\nimport BadgeRegistry from \"../../assets/data/badges.json\";\nimport { Flex } from \"rebass\";\n\nconst BadgeList = ({\n  playerAddr\n}) => {\n  const [badges, setBadges] = React.useState([]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_BADGES, {\n    variables: {\n      addr: `${playerAddr}`\n    }\n  }); // console.log(loading, error, data);\n\n  useEffect(() => {\n    if (!loading && !error && data) {\n      console.log({\n        data: data\n      });\n      console.log(BadgeRegistry);\n      const hydratedBadgeData = hydrateBadgeData(BadgeRegistry, data.badges);\n      console.log(\"hydratedBadgeData\", hydratedBadgeData);\n      setBadges(hydratedBadgeData);\n    }\n  }, [loading, error, data]);\n\n  const renderBadges = () => {\n    console.log(BadgeRegistry);\n    return badges.map(badgeType => {\n      // row for each badge\n      // // badge for each threshold\n      // return <p>{badgeType.title}</p>;\n      return /*#__PURE__*/React.createElement(Flex, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      });\n    }); // Object.entries(badges).map((key, val) => {\n    //   const badgeSet = BadgeRegistry.badges.find(\n    //     (badge) => badge.title === key\n    //   );\n    //   return badgeSet.files.map((badge, idx) => (\n    //     <div>\n    //       {val > badgeSet.threshHolds[idx] && (\n    //         <div>\n    //           <img alt=\"\" src={badgeSet.files[idx]} />\n    //           val\n    //         </div>\n    //       )}\n    //     </div>\n    //   ));\n    // });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }\n  }, badges.length && renderBadges());\n};\n\nexport default BadgeList;","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/packages/react-app/src/components/badges/BadgeList.js"],"names":["React","useEffect","useQuery","GET_BADGES","hydrateBadgeData","BadgeRegistry","Flex","BadgeList","playerAddr","badges","setBadges","useState","loading","error","data","variables","addr","console","log","hydratedBadgeData","renderBadges","map","badgeType","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,KAAK,CAACW,QAAN,CAAe,EAAf,CAA5B;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BZ,QAAQ,CAACC,UAAD,EAAa;AACpDY,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAG,GAAER,UAAW;AADX;AADyC,GAAb,CAAzC,CAHoC,CAQpC;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACW,OAAD,IAAY,CAACC,KAAb,IAAsBC,IAA1B,EAAgC;AAC9BG,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,QAAAA,IAAI,EAAEA;AAAR,OAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYb,aAAZ;AAEA,YAAMc,iBAAiB,GAAGf,gBAAgB,CAACC,aAAD,EAAgBS,IAAI,CAACL,MAArB,CAA1C;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCC,iBAAjC;AAEAT,MAAAA,SAAS,CAACS,iBAAD,CAAT;AACD;AACF,GAVQ,EAUN,CAACP,OAAD,EAAUC,KAAV,EAAiBC,IAAjB,CAVM,CAAT;;AAYA,QAAMM,YAAY,GAAG,MAAM;AACzBH,IAAAA,OAAO,CAACC,GAAR,CAAYb,aAAZ;AAEA,WAAOI,MAAM,CAACY,GAAP,CAAYC,SAAD,IAAe;AAC/B;AACA;AACA;AAEA,0BACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAfM,CAAP,CAHyB,CAmBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAlCD;;AAoCA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,MAAM,CAACc,MAAP,IAAiBH,YAAY,EAAnC,CAAP;AACD,CA3DD;;AA6DA,eAAeb,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { GET_BADGES } from \"../../utils/Queries\";\nimport { hydrateBadgeData } from \"../../utils/Helpers\";\n\nimport BadgeRegistry from \"../../assets/data/badges.json\";\nimport { Flex } from \"rebass\";\n\nconst BadgeList = ({ playerAddr }) => {\n  const [badges, setBadges] = React.useState([]);\n\n  const { loading, error, data } = useQuery(GET_BADGES, {\n    variables: {\n      addr: `${playerAddr}`,\n    },\n  });\n  // console.log(loading, error, data);\n\n  useEffect(() => {\n    if (!loading && !error && data) {\n      console.log({ data: data });\n      console.log(BadgeRegistry);\n\n      const hydratedBadgeData = hydrateBadgeData(BadgeRegistry, data.badges);\n      console.log(\"hydratedBadgeData\", hydratedBadgeData);\n\n      setBadges(hydratedBadgeData);\n    }\n  }, [loading, error, data]);\n\n  const renderBadges = () => {\n    console.log(BadgeRegistry);\n\n    return badges.map((badgeType) => {\n      // row for each badge\n      // // badge for each threshold\n      // return <p>{badgeType.title}</p>;\n\n      return (\n        <Flex>\n          {/* <Box p={3} width={1 / 2} color=\"white\" bg=\"primary\">\n            Flex\n          </Box>\n          <Box p={3} width={1 / 2} color=\"white\" bg=\"secondary\">\n            Box\n          </Box> */}\n        </Flex>\n      );\n    });\n    // Object.entries(badges).map((key, val) => {\n    //   const badgeSet = BadgeRegistry.badges.find(\n    //     (badge) => badge.title === key\n    //   );\n    //   return badgeSet.files.map((badge, idx) => (\n    //     <div>\n    //       {val > badgeSet.threshHolds[idx] && (\n    //         <div>\n    //           <img alt=\"\" src={badgeSet.files[idx]} />\n    //           val\n    //         </div>\n    //       )}\n    //     </div>\n    //   ));\n    // });\n  };\n\n  return <div>{badges.length && renderBadges()}</div>;\n};\n\nexport default BadgeList;\n"]},"metadata":{},"sourceType":"module"}
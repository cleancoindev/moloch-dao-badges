{"ast":null,"code":"var _jsxFileName = \"/home/dekan/Projects/raid-guild/dao-badges-web/packages/react-app/src/components/Badges.js\";\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from \"apollo-boost\";\nimport checkSvg from \"../../assets/img/1check.svg\";\nconst GET_BADGES = gql`\nquery ($addr: String!){\n  badges(where: {memberAddress: $addr}) {\n    memberAddress\n    voteCount\n    summonCount\n    proposalSponsorCount\n    proposalSubmissionCount\n    rageQuitCount\n    jailedCount\n  }\n}\n`;\nexport const Badges = props => {\n  const {\n    playerAddr\n  } = props;\n  console.log('playerAddr', playerAddr);\n  const [badges, setBadges] = React.useState([]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_BADGES, {\n    variables: {\n      addr: `${playerAddr}`\n    }\n  });\n  console.log(loading, error, data);\n  React.useEffect(() => {\n    if (!loading && !error && data) {\n      console.log({\n        data: data\n      });\n      setBadges(data.badges);\n    }\n  }, [loading, error, data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, badges.length && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Votes: \", badges.length && badges[0].voteCount && /*#__PURE__*/React.createElement(\"img\", {\n    src: checkSvg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 64\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Summons: \", badges.length && badges[0].summonCount), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"proposalSponsorCount: \", badges.length && badges[0].proposalSponsorCount), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"proposalSubmissionCount: \", badges.length && badges[0].proposalSubmissionCount), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"rageQuitCount: \", badges.length && badges[0].rageQuitCount));\n};","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/packages/react-app/src/components/Badges.js"],"names":["React","useContext","useQuery","gql","GET_BADGES","Badges","props","playerAddr","console","log","badges","setBadges","useState","loading","error","data","variables","addr","useEffect","length","voteCount","checkSvg","summonCount","proposalSponsorCount","proposalSubmissionCount","rageQuitCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;;AAIA,MAAMC,UAAU,GAAGD,GAAI;;;;;;;;;;;;CAAvB;AAcA,OAAO,MAAME,MAAM,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAACC,IAAAA;AAAD,MAAeD,KAArB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B;AAEA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBX,KAAK,CAACY,QAAN,CAAe,EAAf,CAA5B;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bb,QAAQ,CAACE,UAAD,EAAa;AACtDY,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAG,GAAEV,UAAW;AADX;AAD2C,GAAb,CAAzC;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ,EAAqBC,KAArB,EAA4BC,IAA5B;AAEAf,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACL,OAAD,IAAY,CAACC,KAAb,IAAsBC,IAA1B,EAAiC;AAC/BP,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEM,QAAAA,IAAI,EAAEA;AAAR,OAAZ;AACAJ,MAAAA,SAAS,CAACI,IAAI,CAACL,MAAN,CAAT;AACD;AACF,GALD,EAKG,CAACG,OAAD,EAAUC,KAAV,EAAiBC,IAAjB,CALH;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,MAAM,CAACS,MAAP,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWT,MAAM,CAACS,MAAP,IAAiBT,MAAM,CAAC,CAAD,CAAN,CAAUU,SAA3B,iBAAwC;AAAK,IAAA,GAAG,EAAEC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnD,CANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaX,MAAM,CAACS,MAAP,IAAiBT,MAAM,CAAC,CAAD,CAAN,CAAUY,WAAxC,CAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA0BZ,MAAM,CAACS,MAAP,IAAiBT,MAAM,CAAC,CAAD,CAAN,CAAUa,oBAArD,CARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA6Bb,MAAM,CAACS,MAAP,IAAiBT,MAAM,CAAC,CAAD,CAAN,CAAUc,uBAAxD,CATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmBd,MAAM,CAACS,MAAP,IAAiBT,MAAM,CAAC,CAAD,CAAN,CAAUe,aAA9C,CAVJ,CADJ;AAcH,CAjCM","sourcesContent":["import React, { useContext } from 'react';\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from \"apollo-boost\";\n\nimport checkSvg from '../../assets/img/1check.svg';\n\nconst GET_BADGES = gql`\nquery ($addr: String!){\n  badges(where: {memberAddress: $addr}) {\n    memberAddress\n    voteCount\n    summonCount\n    proposalSponsorCount\n    proposalSubmissionCount\n    rageQuitCount\n    jailedCount\n  }\n}\n`;\n\nexport const Badges = (props) => {\n    const {playerAddr} = props;\n    console.log('playerAddr', playerAddr);\n    \n    const [badges, setBadges] = React.useState([]);\n\n    const { loading, error, data } = useQuery(GET_BADGES, {\n    variables: {\n      addr: `${playerAddr}`,\n    }});\n    console.log(loading, error, data);\n\n    React.useEffect(() => {\n      if (!loading && !error && data ) {\n        console.log({ data: data });\n        setBadges(data.badges)\n      }\n    }, [loading, error, data]);\n\n    return (\n        <div>\n            {badges.length && (\n                <div>\n\n                </div>\n            )}\n            <p>Votes: {badges.length && badges[0].voteCount && <img src={checkSvg} />}</p>\n            <p>Summons: {badges.length && badges[0].summonCount}</p>\n            <p>proposalSponsorCount: {badges.length && badges[0].proposalSponsorCount}</p>\n            <p>proposalSubmissionCount: {badges.length && badges[0].proposalSubmissionCount}</p>\n            <p>rageQuitCount: {badges.length && badges[0].rageQuitCount}</p>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}
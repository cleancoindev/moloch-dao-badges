{"ast":null,"code":"const supportedChains = [{\n  name: 'Ethereum Mainnet',\n  short_name: 'eth',\n  chain: 'ETH',\n  network: 'mainnet',\n  chain_id: 1,\n  network_id: 1,\n  rpc_url: 'https://mainnet.infura.io/'\n}, {\n  name: 'Ethereum Ropsten',\n  short_name: 'rop',\n  chain: 'ETH',\n  network: 'ropsten',\n  chain_id: 3,\n  network_id: 3,\n  rpc_url: 'https://ropsten.infura.io/'\n}, {\n  name: 'Ethereum Rinkeby',\n  short_name: 'rin',\n  chain: 'ETH',\n  network: 'rinkeby',\n  chain_id: 4,\n  network_id: 4,\n  rpc_url: 'https://rinkeby.infura.io/'\n}, {\n  name: 'Ethereum Görli',\n  short_name: 'gor',\n  chain: 'ETH',\n  network: 'goerli',\n  chain_id: 5,\n  network_id: 5,\n  rpc_url: 'https://rpc.goerli.mudit.blog/'\n}, {\n  name: 'Ethereum Kovan',\n  short_name: 'kov',\n  chain: 'ETH',\n  network: 'kovan',\n  chain_id: 42,\n  network_id: 42,\n  rpc_url: 'https://kovan.infura.io/'\n}, {\n  name: 'Ethereum Classic Mainnet',\n  short_name: 'etc',\n  chain: 'ETC',\n  network: 'mainnet',\n  chain_id: 61,\n  network_id: 1,\n  rpc_url: 'https://ethereumclassic.network'\n}, {\n  name: 'POA Network Sokol',\n  short_name: 'poa',\n  chain: 'POA',\n  network: 'sokol',\n  chain_id: 77,\n  network_id: 1,\n  rpc_url: 'https://sokol.poa.network'\n}, {\n  name: 'POA Network Core',\n  short_name: 'skl',\n  chain: 'POA',\n  network: 'core',\n  chain_id: 99,\n  network_id: 2,\n  rpc_url: 'https://core.poa.network'\n}, {\n  name: 'xDAI Chain',\n  short_name: 'xdai',\n  chain: 'xDAI',\n  network: 'mainnet',\n  chain_id: 100,\n  network_id: 1,\n  rpc_url: 'https://dai.poa.network'\n}];\nexport function getChainData(chainId) {\n  const chainData = supportedChains.filter(chain => chain.chain_id === +chainId)[0];\n\n  if (!chainData) {\n    throw new Error('ChainId missing or not supported');\n  }\n\n  const API_KEY = process.env.REACT_APP_INFURA_PROJECT_ID;\n\n  if (chainData.rpc_url.includes('infura.io') && chainData.rpc_url.includes('%API_KEY%') && API_KEY) {\n    const rpcUrl = chainData.rpc_url.replace('%API_KEY%', API_KEY);\n    return { ...chainData,\n      rpc_url: rpcUrl\n    };\n  }\n\n  return chainData;\n}\nexport default supportedChains;","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/packages/react-app/src/utils/Chains.js"],"names":["supportedChains","name","short_name","chain","network","chain_id","network_id","rpc_url","getChainData","chainId","chainData","filter","Error","API_KEY","process","env","REACT_APP_INFURA_PROJECT_ID","includes","rpcUrl","replace"],"mappings":"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","sourcesContent":["const supportedChains = [\n    {\n      name: 'Ethereum Mainnet',\n      short_name: 'eth',\n      chain: 'ETH',\n      network: 'mainnet',\n      chain_id: 1,\n      network_id: 1,\n      rpc_url: 'https://mainnet.infura.io/',\n    },\n    {\n      name: 'Ethereum Ropsten',\n      short_name: 'rop',\n      chain: 'ETH',\n      network: 'ropsten',\n      chain_id: 3,\n      network_id: 3,\n      rpc_url: 'https://ropsten.infura.io/',\n    },\n    {\n      name: 'Ethereum Rinkeby',\n      short_name: 'rin',\n      chain: 'ETH',\n      network: 'rinkeby',\n      chain_id: 4,\n      network_id: 4,\n      rpc_url: 'https://rinkeby.infura.io/',\n    },\n    {\n      name: 'Ethereum Görli',\n      short_name: 'gor',\n      chain: 'ETH',\n      network: 'goerli',\n      chain_id: 5,\n      network_id: 5,\n      rpc_url: 'https://rpc.goerli.mudit.blog/',\n    },\n    {\n      name: 'Ethereum Kovan',\n      short_name: 'kov',\n      chain: 'ETH',\n      network: 'kovan',\n      chain_id: 42,\n      network_id: 42,\n      rpc_url: 'https://kovan.infura.io/',\n    },\n    {\n      name: 'Ethereum Classic Mainnet',\n      short_name: 'etc',\n      chain: 'ETC',\n      network: 'mainnet',\n      chain_id: 61,\n      network_id: 1,\n      rpc_url: 'https://ethereumclassic.network',\n    },\n    {\n      name: 'POA Network Sokol',\n      short_name: 'poa',\n      chain: 'POA',\n      network: 'sokol',\n      chain_id: 77,\n      network_id: 1,\n      rpc_url: 'https://sokol.poa.network',\n    },\n    {\n      name: 'POA Network Core',\n      short_name: 'skl',\n      chain: 'POA',\n      network: 'core',\n      chain_id: 99,\n      network_id: 2,\n      rpc_url: 'https://core.poa.network',\n    },\n    {\n      name: 'xDAI Chain',\n      short_name: 'xdai',\n      chain: 'xDAI',\n      network: 'mainnet',\n      chain_id: 100,\n      network_id: 1,\n      rpc_url: 'https://dai.poa.network',\n    },\n  ];\n  \n  export function getChainData(chainId) {\n    \n    const chainData = supportedChains.filter(\n      (chain) => chain.chain_id === +chainId,\n    )[0];\n  \n    if (!chainData) {\n      throw new Error('ChainId missing or not supported');\n    }\n  \n    const API_KEY = process.env.REACT_APP_INFURA_PROJECT_ID;\n  \n    if (\n      chainData.rpc_url.includes('infura.io') &&\n      chainData.rpc_url.includes('%API_KEY%') &&\n      API_KEY\n    ) {\n      const rpcUrl = chainData.rpc_url.replace('%API_KEY%', API_KEY);\n  \n      return {\n        ...chainData,\n        rpc_url: rpcUrl,\n      };\n    }\n  \n    return chainData;\n  }\n  \n  export default supportedChains;\n  "]},"metadata":{},"sourceType":"module"}
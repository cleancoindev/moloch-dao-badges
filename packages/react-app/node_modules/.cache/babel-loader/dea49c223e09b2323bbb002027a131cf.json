{"ast":null,"code":"'use strict';\n\nconst defer = require('pull-defer/duplex');\n\nmodule.exports = class Connection {\n  constructor(conn, info) {\n    this.peerInfo = null;\n    this.conn = defer();\n\n    if (conn) {\n      this.setInnerConn(conn, info);\n    } else if (info) {\n      this.info = info;\n    }\n  }\n\n  get source() {\n    return this.conn.source;\n  }\n\n  get sink() {\n    return this.conn.sink;\n  }\n\n  getPeerInfo(callback) {\n    if (this.info && this.info.getPeerInfo) {\n      return this.info.getPeerInfo(callback);\n    }\n\n    if (!this.peerInfo) {\n      return callback(new Error('Peer Info not set yet'));\n    }\n\n    callback(null, this.peerInfo);\n  }\n\n  setPeerInfo(peerInfo) {\n    if (this.info && this.info.setPeerInfo) {\n      return this.info.setPeerInfo(peerInfo);\n    }\n\n    this.peerInfo = peerInfo;\n  }\n\n  getObservedAddrs(callback) {\n    if (this.info && this.info.getObservedAddrs) {\n      return this.info.getObservedAddrs(callback);\n    }\n\n    callback(null, []);\n  }\n\n  setInnerConn(conn, info) {\n    this.conn.resolve(conn);\n\n    if (info) {\n      this.info = info;\n    } else {\n      this.info = conn;\n    }\n  }\n\n};","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/node_modules/interface-connection/src/connection.js"],"names":["defer","require","module","exports","Connection","constructor","conn","info","peerInfo","setInnerConn","source","sink","getPeerInfo","callback","Error","setPeerInfo","getObservedAddrs","resolve"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,UAAN,CAAiB;AAChCC,EAAAA,WAAW,CAAEC,IAAF,EAAQC,IAAR,EAAc;AACvB,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKF,IAAL,GAAYN,KAAK,EAAjB;;AAEA,QAAIM,IAAJ,EAAU;AACR,WAAKG,YAAL,CAAkBH,IAAlB,EAAwBC,IAAxB;AACD,KAFD,MAEO,IAAIA,IAAJ,EAAU;AACf,WAAKA,IAAL,GAAYA,IAAZ;AACD;AACF;;AAED,MAAIG,MAAJ,GAAc;AACZ,WAAO,KAAKJ,IAAL,CAAUI,MAAjB;AACD;;AAED,MAAIC,IAAJ,GAAY;AACV,WAAO,KAAKL,IAAL,CAAUK,IAAjB;AACD;;AAEDC,EAAAA,WAAW,CAAEC,QAAF,EAAY;AACrB,QAAI,KAAKN,IAAL,IAAa,KAAKA,IAAL,CAAUK,WAA3B,EAAwC;AACtC,aAAO,KAAKL,IAAL,CAAUK,WAAV,CAAsBC,QAAtB,CAAP;AACD;;AAED,QAAI,CAAC,KAAKL,QAAV,EAAoB;AAClB,aAAOK,QAAQ,CAAC,IAAIC,KAAJ,CAAU,uBAAV,CAAD,CAAf;AACD;;AAEDD,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAKL,QAAZ,CAAR;AACD;;AAEDO,EAAAA,WAAW,CAAEP,QAAF,EAAY;AACrB,QAAI,KAAKD,IAAL,IAAa,KAAKA,IAAL,CAAUQ,WAA3B,EAAwC;AACtC,aAAO,KAAKR,IAAL,CAAUQ,WAAV,CAAsBP,QAAtB,CAAP;AACD;;AAED,SAAKA,QAAL,GAAgBA,QAAhB;AACD;;AAEDQ,EAAAA,gBAAgB,CAAEH,QAAF,EAAY;AAC1B,QAAI,KAAKN,IAAL,IAAa,KAAKA,IAAL,CAAUS,gBAA3B,EAA6C;AAC3C,aAAO,KAAKT,IAAL,CAAUS,gBAAV,CAA2BH,QAA3B,CAAP;AACD;;AACDA,IAAAA,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAR;AACD;;AAEDJ,EAAAA,YAAY,CAAEH,IAAF,EAAQC,IAAR,EAAc;AACxB,SAAKD,IAAL,CAAUW,OAAV,CAAkBX,IAAlB;;AACA,QAAIC,IAAJ,EAAU;AACR,WAAKA,IAAL,GAAYA,IAAZ;AACD,KAFD,MAEO;AACL,WAAKA,IAAL,GAAYD,IAAZ;AACD;AACF;;AAtD+B,CAAlC","sourcesContent":["'use strict'\n\nconst defer = require('pull-defer/duplex')\n\nmodule.exports = class Connection {\n  constructor (conn, info) {\n    this.peerInfo = null\n    this.conn = defer()\n\n    if (conn) {\n      this.setInnerConn(conn, info)\n    } else if (info) {\n      this.info = info\n    }\n  }\n\n  get source () {\n    return this.conn.source\n  }\n\n  get sink () {\n    return this.conn.sink\n  }\n\n  getPeerInfo (callback) {\n    if (this.info && this.info.getPeerInfo) {\n      return this.info.getPeerInfo(callback)\n    }\n\n    if (!this.peerInfo) {\n      return callback(new Error('Peer Info not set yet'))\n    }\n\n    callback(null, this.peerInfo)\n  }\n\n  setPeerInfo (peerInfo) {\n    if (this.info && this.info.setPeerInfo) {\n      return this.info.setPeerInfo(peerInfo)\n    }\n\n    this.peerInfo = peerInfo\n  }\n\n  getObservedAddrs (callback) {\n    if (this.info && this.info.getObservedAddrs) {\n      return this.info.getObservedAddrs(callback)\n    }\n    callback(null, [])\n  }\n\n  setInnerConn (conn, info) {\n    this.conn.resolve(conn)\n    if (info) {\n      this.info = info\n    } else {\n      this.info = conn\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
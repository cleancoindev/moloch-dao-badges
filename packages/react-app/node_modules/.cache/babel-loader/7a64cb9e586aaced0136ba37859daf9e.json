{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar isIPFS = require('is-ipfs');\n\nvar API = require('./api');\n\nvar config = require('./config');\n\nvar _require = require('./3id/utils'),\n    symEncryptBase = _require.symEncryptBase,\n    symDecryptBase = _require.symDecryptBase,\n    newSymKey = _require.newSymKey;\n\nvar utils = require('./utils/index');\n\nvar orbitAddress = require('orbit-db/src/orbit-db-address');\n\nvar ORBITDB_OPTS = config.orbitdb_options;\nvar MODERATOR = 'MODERATOR';\nvar MEMBER = 'MEMBER';\n\nvar isValid3ID = function isValid3ID(did) {\n  var parts = did.split(':');\n  if (!parts[0] === 'did' || !parts[1] === '3') return false;\n  return isIPFS.cid(parts[2]);\n};\n\nvar Thread = /*#__PURE__*/function () {\n  /**\n   * Please use **space.joinThread** to get the instance of this class\n   */\n  function Thread(name, replicator, members, firstModerator, confidential, user, subscribe) {\n    (0, _classCallCheck2[\"default\"])(this, Thread);\n    this._name = name;\n    this._replicator = replicator;\n    this._spaceName = name ? name.split('.')[2] : undefined;\n    this._subscribe = subscribe;\n    this._queuedNewPosts = [];\n    this._members = Boolean(members);\n    this._firstModerator = firstModerator;\n    this._user = user;\n\n    if (confidential) {\n      this._confidential = true;\n      this._members = true;\n\n      if (typeof confidential === 'string') {\n        this._encKeyId = confidential;\n      } else {\n        this._symKey = newSymKey();\n        this._encKeyId = utils.sha256(this._symKey);\n      }\n    }\n  }\n  /**\n   * Post a message to the thread\n   *\n   * @param     {Object}    message                 The message\n   * @return    {String}                            The postId of the new post\n   */\n\n\n  (0, _createClass2[\"default\"])(Thread, [{\n    key: \"post\",\n    value: function () {\n      var _post = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(message) {\n        var timestamp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this._requireLoad();\n\n                this._requireAuth();\n\n                this._subscribe(this._address, {\n                  firstModerator: this._firstModerator,\n                  members: this._members,\n                  name: this._name\n                });\n\n                this._replicator.ensureConnected(this._address, true);\n\n                timestamp = Math.floor(new Date().getTime() / 1000); // seconds\n\n                if (this._confidential) message = this._symEncrypt(message);\n                return _context.abrupt(\"return\", this._db.add({\n                  message: message,\n                  timestamp: timestamp\n                }));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function post(_x) {\n        return _post.apply(this, arguments);\n      }\n\n      return post;\n    }()\n  }, {\n    key: \"_getThreadAddress\",\n    value: function () {\n      var _getThreadAddress2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        var address;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this._address) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this._address);\n\n              case 2:\n                _context2.next = 4;\n                return this._initAcConfigs();\n\n              case 4:\n                _context2.next = 6;\n                return this._replicator._orbitdb._determineAddress(this._name, 'feed', {\n                  accessController: this._accessController\n                }, false);\n\n              case 6:\n                address = _context2.sent.toString();\n                this._address = address;\n                return _context2.abrupt(\"return\", this._address);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _getThreadAddress() {\n        return _getThreadAddress2.apply(this, arguments);\n      }\n\n      return _getThreadAddress;\n    }()\n    /**\n     * Add a moderator to this thread, throws error is user can not add a moderator\n     *\n     * @param     {String}    id                      Moderator Id\n     */\n\n  }, {\n    key: \"addModerator\",\n    value: function () {\n      var _addModerator = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(id) {\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this._requireLoad();\n\n                this._requireAuth();\n\n                if (!id.startsWith('0x')) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 5;\n                return API.getSpaceDID(id, this._spaceName);\n\n              case 5:\n                id = _context3.sent;\n\n              case 6:\n                if (isValid3ID(id)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                throw new Error('addModerator: must provide valid 3ID');\n\n              case 8:\n                _context3.t0 = this._db.access;\n                _context3.t1 = MODERATOR;\n                _context3.t2 = id;\n                _context3.next = 13;\n                return this._encryptSymKey(id);\n\n              case 13:\n                _context3.t3 = _context3.sent;\n                return _context3.abrupt(\"return\", _context3.t0.grant.call(_context3.t0, _context3.t1, _context3.t2, _context3.t3));\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function addModerator(_x2) {\n        return _addModerator.apply(this, arguments);\n      }\n\n      return addModerator;\n    }()\n    /**\n     * List moderators\n     *\n     * @return    {Array<String>}      Array of moderator DIDs\n     */\n\n  }, {\n    key: \"listModerators\",\n    value: function () {\n      var _listModerators = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4() {\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this._requireLoad();\n\n                return _context4.abrupt(\"return\", this._db.access.capabilities.moderators);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function listModerators() {\n        return _listModerators.apply(this, arguments);\n      }\n\n      return listModerators;\n    }()\n    /**\n     * Add a member to this thread, throws if user can not add member, throw is not member thread\n     *\n     * @param     {String}    id                      Member Id\n     */\n\n  }, {\n    key: \"addMember\",\n    value: function () {\n      var _addMember = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(id) {\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this._requireLoad();\n\n                this._requireAuth();\n\n                this._throwIfNotMembers();\n\n                if (!id.startsWith('0x')) {\n                  _context5.next = 7;\n                  break;\n                }\n\n                _context5.next = 6;\n                return API.getSpaceDID(id, this._spaceName);\n\n              case 6:\n                id = _context5.sent;\n\n              case 7:\n                if (isValid3ID(id)) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                throw new Error('addMember: must provide valid 3ID');\n\n              case 9:\n                _context5.t0 = this._db.access;\n                _context5.t1 = MEMBER;\n                _context5.t2 = id;\n                _context5.next = 14;\n                return this._encryptSymKey(id);\n\n              case 14:\n                _context5.t3 = _context5.sent;\n                return _context5.abrupt(\"return\", _context5.t0.grant.call(_context5.t0, _context5.t1, _context5.t2, _context5.t3));\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function addMember(_x3) {\n        return _addMember.apply(this, arguments);\n      }\n\n      return addMember;\n    }()\n    /**\n     * List members, throws if not member thread\n     *\n     * @return    {Array<String>}      Array of member DIDs\n     */\n\n  }, {\n    key: \"listMembers\",\n    value: function () {\n      var _listMembers = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6() {\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this._throwIfNotMembers();\n\n                this._requireLoad();\n\n                return _context6.abrupt(\"return\", this._db.access.capabilities.members);\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function listMembers() {\n        return _listMembers.apply(this, arguments);\n      }\n\n      return listMembers;\n    }()\n  }, {\n    key: \"_throwIfNotMembers\",\n    value: function _throwIfNotMembers() {\n      if (!this._members) throw new Error('Thread: Not a members only thread, function not available');\n    }\n    /**\n     * Delete post\n     *\n     * @param     {String}    id                      Moderator Id\n     */\n\n  }, {\n    key: \"deletePost\",\n    value: function () {\n      var _deletePost = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(hash) {\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this._requireLoad();\n\n                this._requireAuth();\n\n                return _context7.abrupt(\"return\", this._db.remove(hash));\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function deletePost(_x4) {\n        return _deletePost.apply(this, arguments);\n      }\n\n      return deletePost;\n    }()\n    /**\n     * Returns an array of posts, based on the options.\n     * If hash not found when passing gt, gte, lt, or lte,\n     * the iterator will return all items (respecting limit and reverse).\n     *\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {String}    opts.gt                 Greater than, takes an postId\n     * @param     {String}    opts.gte                Greater than or equal to, takes an postId\n     * @param     {String}    opts.lt                 Less than, takes an postId\n     * @param     {String}    opts.lte                Less than or equal to, takes an postId\n     * @param     {Integer}   opts.limit              Limiting the number of entries in result, defaults to -1 (no limit)\n     * @param     {Boolean}   opts.reverse            If set to true will result in reversing the result\n     *\n     * @return    {Array<Object>}                           true if successful\n     */\n\n  }, {\n    key: \"getPosts\",\n    value: function () {\n      var _getPosts = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8() {\n        var _this = this;\n\n        var opts,\n            decrypt,\n            _args8 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                opts = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {};\n\n                decrypt = function decrypt(entry) {\n                  if (!_this._confidential) return entry;\n\n                  var message = _this._symDecrypt(entry.message);\n\n                  return {\n                    message: message,\n                    timestamp: entry.timestamp\n                  };\n                };\n\n                this._requireLoad();\n\n                if (!opts.limit) opts.limit = -1;\n                return _context8.abrupt(\"return\", this._db.iterator(opts).collect().map(function (entry) {\n                  var post = decrypt(entry.payload.value);\n                  var metaData = {\n                    postId: entry.hash,\n                    author: entry.identity.id\n                  };\n                  return Object.assign(metaData, post);\n                }));\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getPosts() {\n        return _getPosts.apply(this, arguments);\n      }\n\n      return getPosts;\n    }()\n    /**\n     * Register a function to be called after new updates\n     * have been received from the network or locally.\n     *\n     * @param     {Function}  updateFn               The function that will get called\n     */\n\n  }, {\n    key: \"onUpdate\",\n    value: function () {\n      var _onUpdate = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(updateFn) {\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this._requireLoad();\n\n                this._db.events.on('replicated', function (address, hash, entry, prog, tot) {\n                  updateFn();\n                });\n\n                this._db.events.on('write', function (dbname, entry) {\n                  updateFn();\n                });\n\n              case 3:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function onUpdate(_x5) {\n        return _onUpdate.apply(this, arguments);\n      }\n\n      return onUpdate;\n    }()\n    /**\n     * Register a function to be called for every new\n     * capability that is added to the thread access controller.\n     * This inlcudes when a moderator or member is added.\n     * The function takes one parameter, which is the capabilities obj, or\n     * you can call listModerator / listMembers again instead.\n     *\n     * @param     {Function}  updateFn     The function that will get called\n     */\n\n  }, {\n    key: \"onNewCapabilities\",\n    value: function () {\n      var _onNewCapabilities = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(updateFn) {\n        var _this2 = this;\n\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this._db.access.on('updated', function (event) {\n                  updateFn(_this2._db.access.capabilities);\n                });\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function onNewCapabilities(_x6) {\n        return _onNewCapabilities.apply(this, arguments);\n      }\n\n      return onNewCapabilities;\n    }() // Loads by orbitdb address or db name\n\n  }, {\n    key: \"_load\",\n    value: function () {\n      var _load2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(dbString) {\n        var loadByAddress;\n        return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                loadByAddress = dbString && orbitAddress.isValid(dbString);\n\n                if (loadByAddress) {\n                  _context11.next = 4;\n                  break;\n                }\n\n                _context11.next = 4;\n                return this._initAcConfigs();\n\n              case 4:\n                _context11.next = 6;\n                return this._replicator._orbitdb.feed(dbString || this._name, _objectSpread({}, ORBITDB_OPTS, {\n                  accessController: this._accessController\n                }));\n\n              case 6:\n                this._db = _context11.sent;\n                _context11.next = 9;\n                return this._db.load();\n\n              case 9:\n                if (loadByAddress) {\n                  this._firstModerator = this._db.access._firstModerator;\n                  this._members = this._db.access._members;\n                  this._encKeyId = this._db.access._encKeyId;\n                  this._confidential = Boolean(this._db.access._encKeyId);\n                  this._name = this._db.address.path;\n                  this._spaceName = this._name.split('.')[2];\n                }\n\n                this._address = this._db.address.toString();\n\n                this._replicator.ensureConnected(this._address, true);\n\n                return _context11.abrupt(\"return\", this._address);\n\n              case 13:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function _load(_x7) {\n        return _load2.apply(this, arguments);\n      }\n\n      return _load;\n    }()\n  }, {\n    key: \"_initConfidential\",\n    value: function () {\n      var _initConfidential2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12() {\n        var _this3 = this;\n\n        var encryptedKey;\n        return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (!this._symKey) {\n                  _context12.next = 13;\n                  break;\n                }\n\n                if (!(this._user.DID !== this._firstModerator)) {\n                  _context12.next = 3;\n                  break;\n                }\n\n                throw new Error('_initConfidential: firstModerator must initialize a confidential thread');\n\n              case 3:\n                _context12.t0 = this._db.access;\n                _context12.t1 = MODERATOR;\n                _context12.t2 = this._firstModerator;\n                _context12.next = 8;\n                return this._encryptSymKey();\n\n              case 8:\n                _context12.t3 = _context12.sent;\n                _context12.next = 11;\n                return _context12.t0.grant.call(_context12.t0, _context12.t1, _context12.t2, _context12.t3);\n\n              case 11:\n                _context12.next = 28;\n                break;\n\n              case 13:\n                encryptedKey = null;\n                _context12.prev = 14;\n                encryptedKey = this._db.access.getEncryptedKey(this._user.DID);\n                _context12.next = 23;\n                break;\n\n              case 18:\n                _context12.prev = 18;\n                _context12.t4 = _context12[\"catch\"](14);\n                _context12.next = 22;\n                return new Promise(function (resolve, reject) {\n                  _this3.onNewCapabilities(function (val) {\n                    var key = null;\n\n                    try {\n                      key = _this3._db.access.getEncryptedKey(_this3._user.DID);\n                    } catch (e) {}\n\n                    if (key !== null) resolve(key);\n                  });\n\n                  setTimeout(function () {\n                    return resolve(null);\n                  }, 10000);\n                });\n\n              case 22:\n                encryptedKey = _context12.sent;\n\n              case 23:\n                if (encryptedKey) {\n                  _context12.next = 25;\n                  break;\n                }\n\n                throw new Error(\"_initConfidential:  no access for \".concat(this._user.DID));\n\n              case 25:\n                _context12.next = 27;\n                return this._decryptSymKey(encryptedKey);\n\n              case 27:\n                this._symKey = _context12.sent;\n\n              case 28:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[14, 18]]);\n      }));\n\n      function _initConfidential() {\n        return _initConfidential2.apply(this, arguments);\n      }\n\n      return _initConfidential;\n    }()\n  }, {\n    key: \"_requireLoad\",\n    value: function _requireLoad() {\n      if (!this._db) throw new Error('_load must be called before interacting with the store');\n    }\n  }, {\n    key: \"_requireAuth\",\n    value: function _requireAuth() {\n      if (!this._authenticated) throw new Error('You must authenticate before performing this action');\n    }\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13() {\n        return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                this._requireLoad();\n\n                _context13.next = 3;\n                return this._db.close();\n\n              case 3:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }, {\n    key: \"_setIdentity\",\n    value: function () {\n      var _setIdentity2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(odbId) {\n        return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                this._db.setIdentity(odbId);\n\n                this._db.access._db.setIdentity(odbId);\n\n                this._authenticated = true; // TODO not too clear hear, but does require auth, and to be after load\n\n                if (!this._confidential) {\n                  _context14.next = 6;\n                  break;\n                }\n\n                _context14.next = 6;\n                return this._initConfidential();\n\n              case 6:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function _setIdentity(_x8) {\n        return _setIdentity2.apply(this, arguments);\n      }\n\n      return _setIdentity;\n    }()\n  }, {\n    key: \"_initAcConfigs\",\n    value: function () {\n      var _initAcConfigs2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15() {\n        return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                if (!this._accessController) {\n                  _context15.next = 2;\n                  break;\n                }\n\n                return _context15.abrupt(\"return\");\n\n              case 2:\n                if (!this._firstModerator.startsWith('0x')) {\n                  _context15.next = 6;\n                  break;\n                }\n\n                _context15.next = 5;\n                return API.getSpaceDID(this._firstModerator, this._spaceName);\n\n              case 5:\n                this._firstModerator = _context15.sent;\n\n              case 6:\n                this._accessController = {\n                  type: 'thread-access',\n                  threadName: this._name,\n                  members: this._members,\n                  firstModerator: this._firstModerator\n                };\n\n                if (this._encKeyId) {\n                  this._accessController.encKeyId = this._encKeyId;\n                }\n\n              case 8:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function _initAcConfigs() {\n        return _initAcConfigs2.apply(this, arguments);\n      }\n\n      return _initAcConfigs;\n    }()\n  }, {\n    key: \"_symEncrypt\",\n    value: function _symEncrypt(message) {\n      var msg = utils.pad(JSON.stringify(message));\n      return symEncryptBase(msg, this._symKey);\n    }\n  }, {\n    key: \"_symDecrypt\",\n    value: function _symDecrypt(payload) {\n      var paddedMsg = symDecryptBase(payload.ciphertext, this._symKey, payload.nonce);\n      return JSON.parse(utils.unpad(paddedMsg));\n    }\n  }, {\n    key: \"_encryptSymKey\",\n    value: function () {\n      var _encryptSymKey2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16(to) {\n        return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                if (this._confidential) {\n                  _context16.next = 2;\n                  break;\n                }\n\n                return _context16.abrupt(\"return\", null);\n\n              case 2:\n                return _context16.abrupt(\"return\", this._user.encrypt(this._symKey, {\n                  to: to\n                }));\n\n              case 3:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function _encryptSymKey(_x9) {\n        return _encryptSymKey2.apply(this, arguments);\n      }\n\n      return _encryptSymKey;\n    }()\n  }, {\n    key: \"_decryptSymKey\",\n    value: function () {\n      var _decryptSymKey2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee17(encKey) {\n        var key;\n        return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return this._user.decrypt(encKey, true);\n\n              case 2:\n                key = _context17.sent;\n                return _context17.abrupt(\"return\", new Uint8Array(key));\n\n              case 4:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function _decryptSymKey(_x10) {\n        return _decryptSymKey2.apply(this, arguments);\n      }\n\n      return _decryptSymKey;\n    }()\n  }, {\n    key: \"address\",\n    get: function get() {\n      return this._db ? this._address : null;\n    }\n  }]);\n  return Thread;\n}();\n\nmodule.exports = Thread;","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/node_modules/3box/lib/thread.js"],"names":["_interopRequireDefault","require","_defineProperty2","_regenerator","_asyncToGenerator2","_classCallCheck2","_createClass2","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","isIPFS","API","config","_require","symEncryptBase","symDecryptBase","newSymKey","utils","orbitAddress","ORBITDB_OPTS","orbitdb_options","MODERATOR","MEMBER","isValid3ID","did","parts","split","cid","Thread","name","replicator","members","firstModerator","confidential","user","subscribe","_name","_replicator","_spaceName","undefined","_subscribe","_queuedNewPosts","_members","Boolean","_firstModerator","_user","_confidential","_encKeyId","_symKey","sha256","value","_post","mark","_callee","message","timestamp","wrap","_callee$","_context","prev","next","_requireLoad","_requireAuth","_address","ensureConnected","Math","floor","Date","getTime","_symEncrypt","abrupt","_db","add","stop","post","_x","_getThreadAddress2","_callee2","address","_callee2$","_context2","_initAcConfigs","_orbitdb","_determineAddress","accessController","_accessController","sent","toString","_getThreadAddress","_addModerator","_callee3","id","_callee3$","_context3","startsWith","getSpaceDID","Error","t0","access","t1","t2","_encryptSymKey","t3","grant","call","addModerator","_x2","_listModerators","_callee4","_callee4$","_context4","capabilities","moderators","listModerators","_addMember","_callee5","_callee5$","_context5","_throwIfNotMembers","addMember","_x3","_listMembers","_callee6","_callee6$","_context6","listMembers","_deletePost","_callee7","hash","_callee7$","_context7","remove","deletePost","_x4","_getPosts","_callee8","_this","opts","decrypt","_args8","_callee8$","_context8","entry","_symDecrypt","limit","iterator","collect","map","payload","metaData","postId","author","identity","assign","getPosts","_onUpdate","_callee9","updateFn","_callee9$","_context9","events","on","prog","tot","dbname","onUpdate","_x5","_onNewCapabilities","_callee10","_this2","_callee10$","_context10","event","onNewCapabilities","_x6","_load2","_callee11","dbString","loadByAddress","_callee11$","_context11","isValid","feed","load","path","_load","_x7","_initConfidential2","_callee12","_this3","encryptedKey","_callee12$","_context12","DID","getEncryptedKey","t4","Promise","resolve","reject","val","e","setTimeout","concat","_decryptSymKey","_initConfidential","_authenticated","_close","_callee13","_callee13$","_context13","close","_setIdentity2","_callee14","odbId","_callee14$","_context14","setIdentity","_setIdentity","_x8","_initAcConfigs2","_callee15","_callee15$","_context15","type","threadName","encKeyId","msg","pad","JSON","stringify","paddedMsg","ciphertext","nonce","parse","unpad","_encryptSymKey2","_callee16","to","_callee16$","_context16","encrypt","_x9","_decryptSymKey2","_callee17","encKey","_callee17$","_context17","Uint8Array","_x10","get","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar isIPFS = require('is-ipfs');\n\nvar API = require('./api');\n\nvar config = require('./config');\n\nvar _require = require('./3id/utils'),\n    symEncryptBase = _require.symEncryptBase,\n    symDecryptBase = _require.symDecryptBase,\n    newSymKey = _require.newSymKey;\n\nvar utils = require('./utils/index');\n\nvar orbitAddress = require('orbit-db/src/orbit-db-address');\n\nvar ORBITDB_OPTS = config.orbitdb_options;\nvar MODERATOR = 'MODERATOR';\nvar MEMBER = 'MEMBER';\n\nvar isValid3ID = function isValid3ID(did) {\n  var parts = did.split(':');\n  if (!parts[0] === 'did' || !parts[1] === '3') return false;\n  return isIPFS.cid(parts[2]);\n};\n\nvar Thread =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Please use **space.joinThread** to get the instance of this class\n   */\n  function Thread(name, replicator, members, firstModerator, confidential, user, subscribe) {\n    (0, _classCallCheck2[\"default\"])(this, Thread);\n    this._name = name;\n    this._replicator = replicator;\n    this._spaceName = name ? name.split('.')[2] : undefined;\n    this._subscribe = subscribe;\n    this._queuedNewPosts = [];\n    this._members = Boolean(members);\n    this._firstModerator = firstModerator;\n    this._user = user;\n\n    if (confidential) {\n      this._confidential = true;\n      this._members = true;\n\n      if (typeof confidential === 'string') {\n        this._encKeyId = confidential;\n      } else {\n        this._symKey = newSymKey();\n        this._encKeyId = utils.sha256(this._symKey);\n      }\n    }\n  }\n  /**\n   * Post a message to the thread\n   *\n   * @param     {Object}    message                 The message\n   * @return    {String}                            The postId of the new post\n   */\n\n\n  (0, _createClass2[\"default\"])(Thread, [{\n    key: \"post\",\n    value: function () {\n      var _post = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(message) {\n        var timestamp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this._requireLoad();\n\n                this._requireAuth();\n\n                this._subscribe(this._address, {\n                  firstModerator: this._firstModerator,\n                  members: this._members,\n                  name: this._name\n                });\n\n                this._replicator.ensureConnected(this._address, true);\n\n                timestamp = Math.floor(new Date().getTime() / 1000); // seconds\n\n                if (this._confidential) message = this._symEncrypt(message);\n                return _context.abrupt(\"return\", this._db.add({\n                  message: message,\n                  timestamp: timestamp\n                }));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function post(_x) {\n        return _post.apply(this, arguments);\n      }\n\n      return post;\n    }()\n  }, {\n    key: \"_getThreadAddress\",\n    value: function () {\n      var _getThreadAddress2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2() {\n        var address;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this._address) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this._address);\n\n              case 2:\n                _context2.next = 4;\n                return this._initAcConfigs();\n\n              case 4:\n                _context2.next = 6;\n                return this._replicator._orbitdb._determineAddress(this._name, 'feed', {\n                  accessController: this._accessController\n                }, false);\n\n              case 6:\n                address = _context2.sent.toString();\n                this._address = address;\n                return _context2.abrupt(\"return\", this._address);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _getThreadAddress() {\n        return _getThreadAddress2.apply(this, arguments);\n      }\n\n      return _getThreadAddress;\n    }()\n    /**\n     * Add a moderator to this thread, throws error is user can not add a moderator\n     *\n     * @param     {String}    id                      Moderator Id\n     */\n\n  }, {\n    key: \"addModerator\",\n    value: function () {\n      var _addModerator = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3(id) {\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this._requireLoad();\n\n                this._requireAuth();\n\n                if (!id.startsWith('0x')) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 5;\n                return API.getSpaceDID(id, this._spaceName);\n\n              case 5:\n                id = _context3.sent;\n\n              case 6:\n                if (isValid3ID(id)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                throw new Error('addModerator: must provide valid 3ID');\n\n              case 8:\n                _context3.t0 = this._db.access;\n                _context3.t1 = MODERATOR;\n                _context3.t2 = id;\n                _context3.next = 13;\n                return this._encryptSymKey(id);\n\n              case 13:\n                _context3.t3 = _context3.sent;\n                return _context3.abrupt(\"return\", _context3.t0.grant.call(_context3.t0, _context3.t1, _context3.t2, _context3.t3));\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function addModerator(_x2) {\n        return _addModerator.apply(this, arguments);\n      }\n\n      return addModerator;\n    }()\n    /**\n     * List moderators\n     *\n     * @return    {Array<String>}      Array of moderator DIDs\n     */\n\n  }, {\n    key: \"listModerators\",\n    value: function () {\n      var _listModerators = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee4() {\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this._requireLoad();\n\n                return _context4.abrupt(\"return\", this._db.access.capabilities.moderators);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function listModerators() {\n        return _listModerators.apply(this, arguments);\n      }\n\n      return listModerators;\n    }()\n    /**\n     * Add a member to this thread, throws if user can not add member, throw is not member thread\n     *\n     * @param     {String}    id                      Member Id\n     */\n\n  }, {\n    key: \"addMember\",\n    value: function () {\n      var _addMember = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee5(id) {\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this._requireLoad();\n\n                this._requireAuth();\n\n                this._throwIfNotMembers();\n\n                if (!id.startsWith('0x')) {\n                  _context5.next = 7;\n                  break;\n                }\n\n                _context5.next = 6;\n                return API.getSpaceDID(id, this._spaceName);\n\n              case 6:\n                id = _context5.sent;\n\n              case 7:\n                if (isValid3ID(id)) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                throw new Error('addMember: must provide valid 3ID');\n\n              case 9:\n                _context5.t0 = this._db.access;\n                _context5.t1 = MEMBER;\n                _context5.t2 = id;\n                _context5.next = 14;\n                return this._encryptSymKey(id);\n\n              case 14:\n                _context5.t3 = _context5.sent;\n                return _context5.abrupt(\"return\", _context5.t0.grant.call(_context5.t0, _context5.t1, _context5.t2, _context5.t3));\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function addMember(_x3) {\n        return _addMember.apply(this, arguments);\n      }\n\n      return addMember;\n    }()\n    /**\n     * List members, throws if not member thread\n     *\n     * @return    {Array<String>}      Array of member DIDs\n     */\n\n  }, {\n    key: \"listMembers\",\n    value: function () {\n      var _listMembers = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee6() {\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this._throwIfNotMembers();\n\n                this._requireLoad();\n\n                return _context6.abrupt(\"return\", this._db.access.capabilities.members);\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function listMembers() {\n        return _listMembers.apply(this, arguments);\n      }\n\n      return listMembers;\n    }()\n  }, {\n    key: \"_throwIfNotMembers\",\n    value: function _throwIfNotMembers() {\n      if (!this._members) throw new Error('Thread: Not a members only thread, function not available');\n    }\n    /**\n     * Delete post\n     *\n     * @param     {String}    id                      Moderator Id\n     */\n\n  }, {\n    key: \"deletePost\",\n    value: function () {\n      var _deletePost = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee7(hash) {\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this._requireLoad();\n\n                this._requireAuth();\n\n                return _context7.abrupt(\"return\", this._db.remove(hash));\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function deletePost(_x4) {\n        return _deletePost.apply(this, arguments);\n      }\n\n      return deletePost;\n    }()\n    /**\n     * Returns an array of posts, based on the options.\n     * If hash not found when passing gt, gte, lt, or lte,\n     * the iterator will return all items (respecting limit and reverse).\n     *\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {String}    opts.gt                 Greater than, takes an postId\n     * @param     {String}    opts.gte                Greater than or equal to, takes an postId\n     * @param     {String}    opts.lt                 Less than, takes an postId\n     * @param     {String}    opts.lte                Less than or equal to, takes an postId\n     * @param     {Integer}   opts.limit              Limiting the number of entries in result, defaults to -1 (no limit)\n     * @param     {Boolean}   opts.reverse            If set to true will result in reversing the result\n     *\n     * @return    {Array<Object>}                           true if successful\n     */\n\n  }, {\n    key: \"getPosts\",\n    value: function () {\n      var _getPosts = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee8() {\n        var _this = this;\n\n        var opts,\n            decrypt,\n            _args8 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                opts = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {};\n\n                decrypt = function decrypt(entry) {\n                  if (!_this._confidential) return entry;\n\n                  var message = _this._symDecrypt(entry.message);\n\n                  return {\n                    message: message,\n                    timestamp: entry.timestamp\n                  };\n                };\n\n                this._requireLoad();\n\n                if (!opts.limit) opts.limit = -1;\n                return _context8.abrupt(\"return\", this._db.iterator(opts).collect().map(function (entry) {\n                  var post = decrypt(entry.payload.value);\n                  var metaData = {\n                    postId: entry.hash,\n                    author: entry.identity.id\n                  };\n                  return Object.assign(metaData, post);\n                }));\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getPosts() {\n        return _getPosts.apply(this, arguments);\n      }\n\n      return getPosts;\n    }()\n    /**\n     * Register a function to be called after new updates\n     * have been received from the network or locally.\n     *\n     * @param     {Function}  updateFn               The function that will get called\n     */\n\n  }, {\n    key: \"onUpdate\",\n    value: function () {\n      var _onUpdate = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee9(updateFn) {\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this._requireLoad();\n\n                this._db.events.on('replicated', function (address, hash, entry, prog, tot) {\n                  updateFn();\n                });\n\n                this._db.events.on('write', function (dbname, entry) {\n                  updateFn();\n                });\n\n              case 3:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function onUpdate(_x5) {\n        return _onUpdate.apply(this, arguments);\n      }\n\n      return onUpdate;\n    }()\n    /**\n     * Register a function to be called for every new\n     * capability that is added to the thread access controller.\n     * This inlcudes when a moderator or member is added.\n     * The function takes one parameter, which is the capabilities obj, or\n     * you can call listModerator / listMembers again instead.\n     *\n     * @param     {Function}  updateFn     The function that will get called\n     */\n\n  }, {\n    key: \"onNewCapabilities\",\n    value: function () {\n      var _onNewCapabilities = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee10(updateFn) {\n        var _this2 = this;\n\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this._db.access.on('updated', function (event) {\n                  updateFn(_this2._db.access.capabilities);\n                });\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function onNewCapabilities(_x6) {\n        return _onNewCapabilities.apply(this, arguments);\n      }\n\n      return onNewCapabilities;\n    }() // Loads by orbitdb address or db name\n\n  }, {\n    key: \"_load\",\n    value: function () {\n      var _load2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee11(dbString) {\n        var loadByAddress;\n        return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                loadByAddress = dbString && orbitAddress.isValid(dbString);\n\n                if (loadByAddress) {\n                  _context11.next = 4;\n                  break;\n                }\n\n                _context11.next = 4;\n                return this._initAcConfigs();\n\n              case 4:\n                _context11.next = 6;\n                return this._replicator._orbitdb.feed(dbString || this._name, _objectSpread({}, ORBITDB_OPTS, {\n                  accessController: this._accessController\n                }));\n\n              case 6:\n                this._db = _context11.sent;\n                _context11.next = 9;\n                return this._db.load();\n\n              case 9:\n                if (loadByAddress) {\n                  this._firstModerator = this._db.access._firstModerator;\n                  this._members = this._db.access._members;\n                  this._encKeyId = this._db.access._encKeyId;\n                  this._confidential = Boolean(this._db.access._encKeyId);\n                  this._name = this._db.address.path;\n                  this._spaceName = this._name.split('.')[2];\n                }\n\n                this._address = this._db.address.toString();\n\n                this._replicator.ensureConnected(this._address, true);\n\n                return _context11.abrupt(\"return\", this._address);\n\n              case 13:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function _load(_x7) {\n        return _load2.apply(this, arguments);\n      }\n\n      return _load;\n    }()\n  }, {\n    key: \"_initConfidential\",\n    value: function () {\n      var _initConfidential2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee12() {\n        var _this3 = this;\n\n        var encryptedKey;\n        return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (!this._symKey) {\n                  _context12.next = 13;\n                  break;\n                }\n\n                if (!(this._user.DID !== this._firstModerator)) {\n                  _context12.next = 3;\n                  break;\n                }\n\n                throw new Error('_initConfidential: firstModerator must initialize a confidential thread');\n\n              case 3:\n                _context12.t0 = this._db.access;\n                _context12.t1 = MODERATOR;\n                _context12.t2 = this._firstModerator;\n                _context12.next = 8;\n                return this._encryptSymKey();\n\n              case 8:\n                _context12.t3 = _context12.sent;\n                _context12.next = 11;\n                return _context12.t0.grant.call(_context12.t0, _context12.t1, _context12.t2, _context12.t3);\n\n              case 11:\n                _context12.next = 28;\n                break;\n\n              case 13:\n                encryptedKey = null;\n                _context12.prev = 14;\n                encryptedKey = this._db.access.getEncryptedKey(this._user.DID);\n                _context12.next = 23;\n                break;\n\n              case 18:\n                _context12.prev = 18;\n                _context12.t4 = _context12[\"catch\"](14);\n                _context12.next = 22;\n                return new Promise(function (resolve, reject) {\n                  _this3.onNewCapabilities(function (val) {\n                    var key = null;\n\n                    try {\n                      key = _this3._db.access.getEncryptedKey(_this3._user.DID);\n                    } catch (e) {}\n\n                    if (key !== null) resolve(key);\n                  });\n\n                  setTimeout(function () {\n                    return resolve(null);\n                  }, 10000);\n                });\n\n              case 22:\n                encryptedKey = _context12.sent;\n\n              case 23:\n                if (encryptedKey) {\n                  _context12.next = 25;\n                  break;\n                }\n\n                throw new Error(\"_initConfidential:  no access for \".concat(this._user.DID));\n\n              case 25:\n                _context12.next = 27;\n                return this._decryptSymKey(encryptedKey);\n\n              case 27:\n                this._symKey = _context12.sent;\n\n              case 28:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[14, 18]]);\n      }));\n\n      function _initConfidential() {\n        return _initConfidential2.apply(this, arguments);\n      }\n\n      return _initConfidential;\n    }()\n  }, {\n    key: \"_requireLoad\",\n    value: function _requireLoad() {\n      if (!this._db) throw new Error('_load must be called before interacting with the store');\n    }\n  }, {\n    key: \"_requireAuth\",\n    value: function _requireAuth() {\n      if (!this._authenticated) throw new Error('You must authenticate before performing this action');\n    }\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee13() {\n        return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                this._requireLoad();\n\n                _context13.next = 3;\n                return this._db.close();\n\n              case 3:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }, {\n    key: \"_setIdentity\",\n    value: function () {\n      var _setIdentity2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee14(odbId) {\n        return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                this._db.setIdentity(odbId);\n\n                this._db.access._db.setIdentity(odbId);\n\n                this._authenticated = true; // TODO not too clear hear, but does require auth, and to be after load\n\n                if (!this._confidential) {\n                  _context14.next = 6;\n                  break;\n                }\n\n                _context14.next = 6;\n                return this._initConfidential();\n\n              case 6:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function _setIdentity(_x8) {\n        return _setIdentity2.apply(this, arguments);\n      }\n\n      return _setIdentity;\n    }()\n  }, {\n    key: \"_initAcConfigs\",\n    value: function () {\n      var _initAcConfigs2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee15() {\n        return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                if (!this._accessController) {\n                  _context15.next = 2;\n                  break;\n                }\n\n                return _context15.abrupt(\"return\");\n\n              case 2:\n                if (!this._firstModerator.startsWith('0x')) {\n                  _context15.next = 6;\n                  break;\n                }\n\n                _context15.next = 5;\n                return API.getSpaceDID(this._firstModerator, this._spaceName);\n\n              case 5:\n                this._firstModerator = _context15.sent;\n\n              case 6:\n                this._accessController = {\n                  type: 'thread-access',\n                  threadName: this._name,\n                  members: this._members,\n                  firstModerator: this._firstModerator\n                };\n\n                if (this._encKeyId) {\n                  this._accessController.encKeyId = this._encKeyId;\n                }\n\n              case 8:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function _initAcConfigs() {\n        return _initAcConfigs2.apply(this, arguments);\n      }\n\n      return _initAcConfigs;\n    }()\n  }, {\n    key: \"_symEncrypt\",\n    value: function _symEncrypt(message) {\n      var msg = utils.pad(JSON.stringify(message));\n      return symEncryptBase(msg, this._symKey);\n    }\n  }, {\n    key: \"_symDecrypt\",\n    value: function _symDecrypt(payload) {\n      var paddedMsg = symDecryptBase(payload.ciphertext, this._symKey, payload.nonce);\n      return JSON.parse(utils.unpad(paddedMsg));\n    }\n  }, {\n    key: \"_encryptSymKey\",\n    value: function () {\n      var _encryptSymKey2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee16(to) {\n        return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                if (this._confidential) {\n                  _context16.next = 2;\n                  break;\n                }\n\n                return _context16.abrupt(\"return\", null);\n\n              case 2:\n                return _context16.abrupt(\"return\", this._user.encrypt(this._symKey, {\n                  to: to\n                }));\n\n              case 3:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function _encryptSymKey(_x9) {\n        return _encryptSymKey2.apply(this, arguments);\n      }\n\n      return _encryptSymKey;\n    }()\n  }, {\n    key: \"_decryptSymKey\",\n    value: function () {\n      var _decryptSymKey2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee17(encKey) {\n        var key;\n        return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return this._user.decrypt(encKey, true);\n\n              case 2:\n                key = _context17.sent;\n                return _context17.abrupt(\"return\", new Uint8Array(key));\n\n              case 4:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function _decryptSymKey(_x10) {\n        return _decryptSymKey2.apply(this, arguments);\n      }\n\n      return _decryptSymKey;\n    }()\n  }, {\n    key: \"address\",\n    get: function get() {\n      return this._db ? this._address : null;\n    }\n  }]);\n  return Thread;\n}();\n\nmodule.exports = Thread;"]},"metadata":{},"sourceType":"script"}
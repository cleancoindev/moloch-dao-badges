{"ast":null,"code":"'use strict';\n\nconst isPlainObject = require('is-plain-obj');\n\nmodule.exports = (object, options = {}) => {\n  if (!isPlainObject(object)) {\n    throw new TypeError('Expected a plain object');\n  }\n\n  const {\n    deep\n  } = options;\n  const seenInput = [];\n  const seenOutput = [];\n\n  const sortKeys = object => {\n    const seenIndex = seenInput.indexOf(object);\n\n    if (seenIndex !== -1) {\n      return seenOutput[seenIndex];\n    }\n\n    const result = {};\n    const keys = Object.keys(object).sort(options.compare);\n    seenInput.push(object);\n    seenOutput.push(result);\n\n    for (const key of keys) {\n      const value = object[key];\n\n      if (deep && Array.isArray(value)) {\n        result[key] = value.map(arrayValue => isPlainObject(arrayValue) ? sortKeys(arrayValue) : arrayValue);\n        continue;\n      }\n\n      result[key] = deep && isPlainObject(value) ? sortKeys(value) : value;\n    }\n\n    return result;\n  };\n\n  return sortKeys(object);\n};","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/ipfs/node_modules/sort-keys/index.js"],"names":["isPlainObject","require","module","exports","object","options","TypeError","deep","seenInput","seenOutput","sortKeys","seenIndex","indexOf","result","keys","Object","sort","compare","push","key","value","Array","isArray","map","arrayValue"],"mappings":"AAAA;;AACA,MAAMA,aAAa,GAAGC,OAAO,CAAC,cAAD,CAA7B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACC,MAAD,EAASC,OAAO,GAAG,EAAnB,KAA0B;AAC1C,MAAI,CAACL,aAAa,CAACI,MAAD,CAAlB,EAA4B;AAC3B,UAAM,IAAIE,SAAJ,CAAc,yBAAd,CAAN;AACA;;AAED,QAAM;AAACC,IAAAA;AAAD,MAASF,OAAf;AACA,QAAMG,SAAS,GAAG,EAAlB;AACA,QAAMC,UAAU,GAAG,EAAnB;;AAEA,QAAMC,QAAQ,GAAGN,MAAM,IAAI;AAC1B,UAAMO,SAAS,GAAGH,SAAS,CAACI,OAAV,CAAkBR,MAAlB,CAAlB;;AAEA,QAAIO,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACrB,aAAOF,UAAU,CAACE,SAAD,CAAjB;AACA;;AAED,UAAME,MAAM,GAAG,EAAf;AACA,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYV,MAAZ,EAAoBY,IAApB,CAAyBX,OAAO,CAACY,OAAjC,CAAb;AAEAT,IAAAA,SAAS,CAACU,IAAV,CAAed,MAAf;AACAK,IAAAA,UAAU,CAACS,IAAX,CAAgBL,MAAhB;;AAEA,SAAK,MAAMM,GAAX,IAAkBL,IAAlB,EAAwB;AACvB,YAAMM,KAAK,GAAGhB,MAAM,CAACe,GAAD,CAApB;;AAEA,UAAIZ,IAAI,IAAIc,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAZ,EAAkC;AACjCP,QAAAA,MAAM,CAACM,GAAD,CAAN,GAAcC,KAAK,CAACG,GAAN,CAAUC,UAAU,IAAIxB,aAAa,CAACwB,UAAD,CAAb,GAA4Bd,QAAQ,CAACc,UAAD,CAApC,GAAmDA,UAA3E,CAAd;AACA;AACA;;AAEDX,MAAAA,MAAM,CAACM,GAAD,CAAN,GAAcZ,IAAI,IAAIP,aAAa,CAACoB,KAAD,CAArB,GAA+BV,QAAQ,CAACU,KAAD,CAAvC,GAAiDA,KAA/D;AACA;;AAED,WAAOP,MAAP;AACA,GAzBD;;AA2BA,SAAOH,QAAQ,CAACN,MAAD,CAAf;AACA,CArCD","sourcesContent":["'use strict';\nconst isPlainObject = require('is-plain-obj');\n\nmodule.exports = (object, options = {}) => {\n\tif (!isPlainObject(object)) {\n\t\tthrow new TypeError('Expected a plain object');\n\t}\n\n\tconst {deep} = options;\n\tconst seenInput = [];\n\tconst seenOutput = [];\n\n\tconst sortKeys = object => {\n\t\tconst seenIndex = seenInput.indexOf(object);\n\n\t\tif (seenIndex !== -1) {\n\t\t\treturn seenOutput[seenIndex];\n\t\t}\n\n\t\tconst result = {};\n\t\tconst keys = Object.keys(object).sort(options.compare);\n\n\t\tseenInput.push(object);\n\t\tseenOutput.push(result);\n\n\t\tfor (const key of keys) {\n\t\t\tconst value = object[key];\n\n\t\t\tif (deep && Array.isArray(value)) {\n\t\t\t\tresult[key] = value.map(arrayValue => isPlainObject(arrayValue) ? sortKeys(arrayValue) : arrayValue);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresult[key] = deep && isPlainObject(value) ? sortKeys(value) : value;\n\t\t}\n\n\t\treturn result;\n\t};\n\n\treturn sortKeys(object);\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bytes_1 = require(\"@ethersproject/bytes\");\n\nfunction decode(textData) {\n  textData = atob(textData);\n  var data = [];\n\n  for (var i = 0; i < textData.length; i++) {\n    data.push(textData.charCodeAt(i));\n  }\n\n  return bytes_1.arrayify(data);\n}\n\nexports.decode = decode;\n\nfunction encode(data) {\n  data = bytes_1.arrayify(data);\n  var textData = \"\";\n\n  for (var i = 0; i < data.length; i++) {\n    textData += String.fromCharCode(data[i]);\n  }\n\n  return btoa(textData);\n}\n\nexports.encode = encode;","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/@ethersproject/base64/lib/browser.js"],"names":["Object","defineProperty","exports","value","bytes_1","require","decode","textData","atob","data","i","length","push","charCodeAt","arrayify","encode","String","fromCharCode","btoa"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AACtBA,EAAAA,QAAQ,GAAGC,IAAI,CAACD,QAAD,CAAf;AACA,MAAIE,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCD,IAAAA,IAAI,CAACG,IAAL,CAAUL,QAAQ,CAACM,UAAT,CAAoBH,CAApB,CAAV;AACH;;AACD,SAAON,OAAO,CAACU,QAAR,CAAiBL,IAAjB,CAAP;AACH;;AACDP,OAAO,CAACI,MAAR,GAAiBA,MAAjB;;AACA,SAASS,MAAT,CAAgBN,IAAhB,EAAsB;AAClBA,EAAAA,IAAI,GAAGL,OAAO,CAACU,QAAR,CAAiBL,IAAjB,CAAP;AACA,MAAIF,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClCH,IAAAA,QAAQ,IAAIS,MAAM,CAACC,YAAP,CAAoBR,IAAI,CAACC,CAAD,CAAxB,CAAZ;AACH;;AACD,SAAOQ,IAAI,CAACX,QAAD,CAAX;AACH;;AACDL,OAAO,CAACa,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bytes_1 = require(\"@ethersproject/bytes\");\nfunction decode(textData) {\n    textData = atob(textData);\n    var data = [];\n    for (var i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return bytes_1.arrayify(data);\n}\nexports.decode = decode;\nfunction encode(data) {\n    data = bytes_1.arrayify(data);\n    var textData = \"\";\n    for (var i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\nexports.encode = encode;\n"]},"metadata":{},"sourceType":"script"}
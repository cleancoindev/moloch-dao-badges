{"ast":null,"code":"var _jsxFileName = \"/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/packages/react-app/src/components/badges/BadgeList.js\";\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_BADGES } from \"../../utils/Queries\";\nimport BadgesData from \"../../assets/data/badges.json\";\n\nconst BadgeList = ({\n  playerAddr\n}) => {\n  console.log(\"playerAddr\", playerAddr);\n  const [badges, setBadges] = React.useState([]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_BADGES, {\n    variables: {\n      addr: `${playerAddr}`\n    }\n  });\n  console.log(loading, error, data);\n  useEffect(() => {\n    if (!loading && !error && data) {\n      console.log({\n        data: data\n      });\n      setBadges(data.badges);\n    }\n  }, [loading, error, data]);\n\n  const renderBadges = () => {\n    Object.entries(badges).map((key, val) => {\n      const badgeSet = BadgesData.badges.find(badge => badge.title === key); // return badgeSet.files.map((badge, idx) => (\n      //   <div>\n      //     {val > badgeSet.threshHolds[idx] && (\n      //       <div>\n      //         <img alt=\"\" src={badgeSet.files[idx]} />\n      //         val\n      //       </div>\n      //     )}\n      //   </div>\n      // ));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, badges.length), badges.length && renderBadges());\n};\n\nexport default BadgeList;","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/packages/react-app/src/components/badges/BadgeList.js"],"names":["React","useEffect","useQuery","GET_BADGES","BadgesData","BadgeList","playerAddr","console","log","badges","setBadges","useState","loading","error","data","variables","addr","renderBadges","Object","entries","map","key","val","badgeSet","find","badge","title","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,OAAOC,UAAP,MAAuB,+BAAvB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B;AAEA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBV,KAAK,CAACW,QAAN,CAAe,EAAf,CAA5B;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BZ,QAAQ,CAACC,UAAD,EAAa;AACpDY,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAG,GAAEV,UAAW;AADX;AADyC,GAAb,CAAzC;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ,EAAqBC,KAArB,EAA4BC,IAA5B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACW,OAAD,IAAY,CAACC,KAAb,IAAsBC,IAA1B,EAAgC;AAC9BP,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEM,QAAAA,IAAI,EAAEA;AAAR,OAAZ;AACAJ,MAAAA,SAAS,CAACI,IAAI,CAACL,MAAN,CAAT;AACD;AACF,GALQ,EAKN,CAACG,OAAD,EAAUC,KAAV,EAAiBC,IAAjB,CALM,CAAT;;AAOA,QAAMG,YAAY,GAAG,MAAM;AACzBC,IAAAA,MAAM,CAACC,OAAP,CAAeV,MAAf,EAAuBW,GAAvB,CAA2B,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvC,YAAMC,QAAQ,GAAGnB,UAAU,CAACK,MAAX,CAAkBe,IAAlB,CAAwBC,KAAD,IAAWA,KAAK,CAACC,KAAN,KAAgBL,GAAlD,CAAjB,CADuC,CAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAZD;AAaD,GAdD;;AAgBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,MAAM,CAACkB,MAAZ,CADF,EAEGlB,MAAM,CAACkB,MAAP,IAAiBV,YAAY,EAFhC,CADF;AAMD,CAzCD;;AA2CA,eAAeZ,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { GET_BADGES } from \"../../utils/Queries\";\n\nimport BadgesData from \"../../assets/data/badges.json\";\n\nconst BadgeList = ({ playerAddr }) => {\n  console.log(\"playerAddr\", playerAddr);\n\n  const [badges, setBadges] = React.useState([]);\n\n  const { loading, error, data } = useQuery(GET_BADGES, {\n    variables: {\n      addr: `${playerAddr}`,\n    },\n  });\n  console.log(loading, error, data);\n\n  useEffect(() => {\n    if (!loading && !error && data) {\n      console.log({ data: data });\n      setBadges(data.badges);\n    }\n  }, [loading, error, data]);\n\n  const renderBadges = () => {\n    Object.entries(badges).map((key, val) => {\n      const badgeSet = BadgesData.badges.find((badge) => badge.title === key);\n      // return badgeSet.files.map((badge, idx) => (\n      //   <div>\n      //     {val > badgeSet.threshHolds[idx] && (\n      //       <div>\n      //         <img alt=\"\" src={badgeSet.files[idx]} />\n      //         val\n      //       </div>\n      //     )}\n      //   </div>\n      // ));\n    });\n  };\n\n  return (\n    <div>\n      <h1>{badges.length}</h1>\n      {badges.length && renderBadges()}\n    </div>\n  );\n};\n\nexport default BadgeList;\n"]},"metadata":{},"sourceType":"module"}
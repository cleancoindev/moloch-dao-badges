{"ast":null,"code":"var _jsxFileName = \"/home/dekan/Projects/raid-guild/dao-badges-web/packages/react-app/src/App.js\";\nimport React from \"react\";\nimport logo from \"./ethereumLogo.png\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { gql } from \"apollo-boost\";\nimport { ethers } from \"ethers\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport \"./App.css\";\nimport { Web3SignIn } from \"./components/account/Web3SignIn\";\nimport { CurrentUserContext } from \"./contexts/Store\";\nconst GET_TRANSFERS = gql`\nquery ($addr: String!){\n  badges(where: {memberAddress: $addr}) {\n    memberAddress\n    voteCount\n  }\n}\n`;\n\nasync function readOnchainBalance() {\n  // Should replace with the end-user wallet, e.g. Metamask\n  const defaultProvider = ethers.getDefaultProvider(); // Create an instance of ethers.Contract\n  // Read more about ethers.js on https://docs.ethers.io/ethers.js/html/api-contract.html\n\n  const ceaErc20 = new ethers.Contract(addresses.ceaErc20, abis.erc20, defaultProvider); // A pre-defined address that owns some CEAERC20 tokens\n\n  const tokenBalance = await ceaErc20.balanceOf(\"0x3f8CB69d9c0ED01923F11c829BaE4D9a4CB6c82C\");\n  console.log({\n    tokenBalance: tokenBalance.toString()\n  });\n}\n\nfunction App() {\n  const [currentUser, setCurrentUser] = React.useContext(CurrentUserContext);\n  const [badges, setBadges] = React.useState([]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TRANSFERS, {\n    variables: {\n      addr: `${currentUser && currentUser.username ? currentUser.username : '0xbaf6e57a3940898fd21076b139d4ab231dcbbc5f'}`\n    }\n  });\n  console.log(loading, error, data);\n  React.useEffect(() => {\n    if (!loading && !error && data) {\n      console.log({\n        data: data\n      });\n      setBadges(data.badges);\n    }\n  }, [loading, error, data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"react-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Votes: \", badges.length && badges[0].voteCount), currentUser && currentUser.username ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 49\n    }\n  }, currentUser.username) : /*#__PURE__*/React.createElement(Web3SignIn, {\n    setCurrentUser: setCurrentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 83\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/packages/react-app/src/App.js"],"names":["React","logo","addresses","abis","gql","ethers","useQuery","Web3SignIn","CurrentUserContext","GET_TRANSFERS","readOnchainBalance","defaultProvider","getDefaultProvider","ceaErc20","Contract","erc20","tokenBalance","balanceOf","console","log","toString","App","currentUser","setCurrentUser","useContext","badges","setBadges","useState","loading","error","data","variables","addr","username","useEffect","length","voteCount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from \"./ethereumLogo.png\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { gql } from \"apollo-boost\";\nimport { ethers } from \"ethers\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport \"./App.css\";\nimport { Web3SignIn } from \"./components/account/Web3SignIn\";\nimport { CurrentUserContext } from \"./contexts/Store\";\n\nconst GET_TRANSFERS = gql`\nquery ($addr: String!){\n  badges(where: {memberAddress: $addr}) {\n    memberAddress\n    voteCount\n  }\n}\n`;\n\nasync function readOnchainBalance() {\n  // Should replace with the end-user wallet, e.g. Metamask\n  const defaultProvider = ethers.getDefaultProvider();\n  // Create an instance of ethers.Contract\n  // Read more about ethers.js on https://docs.ethers.io/ethers.js/html/api-contract.html\n  const ceaErc20 = new ethers.Contract(addresses.ceaErc20, abis.erc20, defaultProvider);\n  // A pre-defined address that owns some CEAERC20 tokens\n  const tokenBalance = await ceaErc20.balanceOf(\"0x3f8CB69d9c0ED01923F11c829BaE4D9a4CB6c82C\");\n  console.log({ tokenBalance: tokenBalance.toString() });\n}\n\nfunction App() {\n  const [currentUser, setCurrentUser] = React.useContext(CurrentUserContext);\n  const [badges, setBadges] = React.useState([]);\n  const { loading, error, data } = useQuery(GET_TRANSFERS, {\n    variables: {\n      addr: `${currentUser && currentUser.username ? currentUser.username : '0xbaf6e57a3940898fd21076b139d4ab231dcbbc5f' }`,\n    }});\n    console.log(loading, error, data);\n    \n  React.useEffect(() => {\n    if (!loading && !error && data ) {\n      console.log({ data: data });\n      setBadges(data.badges)\n    }\n  }, [loading, error, data]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"react-logo\" />\n\n        <p>Votes: {badges.length && badges[0].voteCount}</p>\n        {currentUser && currentUser.username ? (<p>{currentUser.username}</p>) : (<Web3SignIn setCurrentUser={setCurrentUser} />)}\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
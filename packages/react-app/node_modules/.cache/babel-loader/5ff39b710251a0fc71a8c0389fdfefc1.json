{"ast":null,"code":"var _jsxFileName = \"/home/dekan/Projects/raid-guild/dao-badges-web/packages/react-app/src/contexts/Store.js\";\nimport React, { useState, useEffect, createContext } from 'react';\nimport Web3Modal from 'web3modal';\nimport { w3connect, providerOptions, createWeb3User } from '../utils/Auth';\nimport { getChainData } from '../utils/Chains';\nexport const LoaderContext = createContext(false);\nexport const Web3ModalContext = createContext();\nexport const CurrentUserContext = createContext();\n\nconst Store = ({\n  children\n}) => {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(false);\n  const [web3Modal, setWeb3Modal] = useState(new Web3Modal({\n    network: getChainData(+process.env.REACT_APP_CHAIN_ID).network,\n    // optional\n    providerOptions,\n    // required\n    cacheProvider: true\n  }));\n  useEffect(() => {\n    const initCurrentUser = async () => {\n      let user;\n\n      try {\n        const w3c = await w3connect(web3Modal);\n        const [account] = await w3c.web3.eth.getAccounts();\n        setWeb3Modal(w3c);\n        user = createWeb3User(account);\n        setCurrentUser(user);\n      } catch (e) {\n        console.error(`Could not log in with web3`);\n      }\n    };\n\n    if (web3Modal.cachedProvider) {\n      initCurrentUser();\n    }\n  }, [web3Modal]);\n  return /*#__PURE__*/React.createElement(LoaderContext.Provider, {\n    value: [loading, setLoading],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Web3ModalContext.Provider, {\n    value: [web3Modal, setWeb3Modal],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: [currentUser, setCurrentUser],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, children)));\n};\n\nexport default Store;","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/packages/react-app/src/contexts/Store.js"],"names":["React","useState","useEffect","createContext","Web3Modal","w3connect","providerOptions","createWeb3User","getChainData","LoaderContext","Web3ModalContext","CurrentUserContext","Store","children","currentUser","setCurrentUser","loading","setLoading","web3Modal","setWeb3Modal","network","process","env","REACT_APP_CHAIN_ID","cacheProvider","initCurrentUser","user","w3c","account","web3","eth","getAccounts","e","console","error","cachedProvider"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SACIC,SADJ,EAEIC,eAFJ,EAGIC,cAHJ,QAIO,eAJP;AAKA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,MAAMC,aAAa,GAAGN,aAAa,CAAC,KAAD,CAAnC;AACP,OAAO,MAAMO,gBAAgB,GAAGP,aAAa,EAAtC;AACP,OAAO,MAAMQ,kBAAkB,GAAGR,aAAa,EAAxC;;AAEP,MAAMS,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAE5B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,EAA9C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CACtC,IAAIG,SAAJ,CAAc;AACVgB,IAAAA,OAAO,EAAEZ,YAAY,CAAC,CAACa,OAAO,CAACC,GAAR,CAAYC,kBAAd,CAAZ,CAA8CH,OAD7C;AACsD;AAChEd,IAAAA,eAFU;AAEO;AACjBkB,IAAAA,aAAa,EAAE;AAHL,GAAd,CADsC,CAA1C;AAQAtB,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMuB,eAAe,GAAG,YAAY;AAChC,UAAIC,IAAJ;;AACA,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMtB,SAAS,CACvBa,SADuB,CAA3B;AAGA,cAAM,CAACU,OAAD,IAAY,MAAMD,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAaC,WAAb,EAAxB;AACAZ,QAAAA,YAAY,CAACQ,GAAD,CAAZ;AACAD,QAAAA,IAAI,GAAGnB,cAAc,CAACqB,OAAD,CAArB;AACAb,QAAAA,cAAc,CAACW,IAAD,CAAd;AACH,OARD,CAQE,OAAOM,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,KAAR,CACK,4BADL;AAGH;AACJ,KAfD;;AAgBA,QAAIhB,SAAS,CAACiB,cAAd,EAA8B;AAC1BV,MAAAA,eAAe;AAClB;AACJ,GArBQ,EAqBN,CAACP,SAAD,CArBM,CAAT;AAsBA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACF,OAAD,EAAUC,UAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE,CAACC,SAAD,EAAYC,YAAZ,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD,CAAoB,QAApB;AACI,IAAA,KAAK,EAAE,CAACL,WAAD,EAAcC,cAAd,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKF,QAHL,CADJ,CADJ,CADJ;AAWH,CA7CD;;AA+CA,eAAeD,KAAf","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport Web3Modal from 'web3modal';\nimport {\n    w3connect,\n    providerOptions,\n    createWeb3User\n} from '../utils/Auth';\nimport { getChainData } from '../utils/Chains';\n\nexport const LoaderContext = createContext(false);\nexport const Web3ModalContext = createContext();\nexport const CurrentUserContext = createContext();\n\nconst Store = ({ children }) => {\n\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(\n        new Web3Modal({\n            network: getChainData(+process.env.REACT_APP_CHAIN_ID).network, // optional\n            providerOptions, // required\n            cacheProvider: true,\n        }),\n    );\n\n    useEffect(() => {\n\n        const initCurrentUser = async () => {\n            let user;\n            try {\n                const w3c = await w3connect(\n                    web3Modal,\n                );\n                const [account] = await w3c.web3.eth.getAccounts();\n                setWeb3Modal(w3c);\n                user = createWeb3User(account);\n                setCurrentUser(user);\n            } catch (e) {\n                console.error(\n                    `Could not log in with web3`,\n                );\n            }\n        };\n        if (web3Modal.cachedProvider) {\n            initCurrentUser();\n        }\n    }, [web3Modal]);\n    return (\n        <LoaderContext.Provider value={[loading, setLoading]}>\n            <Web3ModalContext.Provider value={[web3Modal, setWeb3Modal]}>\n                <CurrentUserContext.Provider\n                    value={[currentUser, setCurrentUser]}\n                >\n                    {children}\n                </CurrentUserContext.Provider>\n            </Web3ModalContext.Provider>\n        </LoaderContext.Provider>\n    );\n};\n\nexport default Store;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nconst exporter = require('ipfs-unixfs-exporter');\n\nconst {\n  normalizePath\n} = require('./utils');\n\nmodule.exports = function (self) {\n  return async function* catAsyncIterator(ipfsPath, options) {\n    options = options || {};\n    ipfsPath = normalizePath(ipfsPath);\n\n    if (options.preload !== false) {\n      const pathComponents = ipfsPath.split('/');\n\n      self._preload(pathComponents[0]);\n    }\n\n    const file = await exporter(ipfsPath, self._ipld, options); // File may not have unixfs prop if small & imported with rawLeaves true\n\n    if (file.unixfs && file.unixfs.type.includes('dir')) {\n      throw new Error('this dag node is a directory');\n    }\n\n    if (!file.content) {\n      throw new Error('this dag node has no content');\n    }\n\n    yield* file.content(options);\n  };\n};","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/ipfs/src/core/components/files-regular/cat-async-iterator.js"],"names":["exporter","require","normalizePath","module","exports","self","catAsyncIterator","ipfsPath","options","preload","pathComponents","split","_preload","file","_ipld","unixfs","type","includes","Error","content"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,OAAO,CAAC,SAAD,CAAjC;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/B,SAAO,gBAAiBC,gBAAjB,CAAmCC,QAAnC,EAA6CC,OAA7C,EAAsD;AAC3DA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEAD,IAAAA,QAAQ,GAAGL,aAAa,CAACK,QAAD,CAAxB;;AAEA,QAAIC,OAAO,CAACC,OAAR,KAAoB,KAAxB,EAA+B;AAC7B,YAAMC,cAAc,GAAGH,QAAQ,CAACI,KAAT,CAAe,GAAf,CAAvB;;AACAN,MAAAA,IAAI,CAACO,QAAL,CAAcF,cAAc,CAAC,CAAD,CAA5B;AACD;;AAED,UAAMG,IAAI,GAAG,MAAMb,QAAQ,CAACO,QAAD,EAAWF,IAAI,CAACS,KAAhB,EAAuBN,OAAvB,CAA3B,CAV2D,CAY3D;;AACA,QAAIK,IAAI,CAACE,MAAL,IAAeF,IAAI,CAACE,MAAL,CAAYC,IAAZ,CAAiBC,QAAjB,CAA0B,KAA1B,CAAnB,EAAqD;AACnD,YAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACD;;AAED,QAAI,CAACL,IAAI,CAACM,OAAV,EAAmB;AACjB,YAAM,IAAID,KAAJ,CAAU,8BAAV,CAAN;AACD;;AAED,WAAQL,IAAI,CAACM,OAAL,CAAaX,OAAb,CAAR;AACD,GAtBD;AAuBD,CAxBD","sourcesContent":["'use strict'\n\nconst exporter = require('ipfs-unixfs-exporter')\nconst { normalizePath } = require('./utils')\n\nmodule.exports = function (self) {\n  return async function * catAsyncIterator (ipfsPath, options) {\n    options = options || {}\n\n    ipfsPath = normalizePath(ipfsPath)\n\n    if (options.preload !== false) {\n      const pathComponents = ipfsPath.split('/')\n      self._preload(pathComponents[0])\n    }\n\n    const file = await exporter(ipfsPath, self._ipld, options)\n\n    // File may not have unixfs prop if small & imported with rawLeaves true\n    if (file.unixfs && file.unixfs.type.includes('dir')) {\n      throw new Error('this dag node is a directory')\n    }\n\n    if (!file.content) {\n      throw new Error('this dag node has no content')\n    }\n\n    yield * file.content(options)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
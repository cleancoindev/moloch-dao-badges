{"ast":null,"code":"'use strict'; //load websocket library if we are not in the browser\n\nvar WebSocket = require('./web-socket');\n\nvar duplex = require('./duplex');\n\nvar wsurl = require('./ws-url');\n\nfunction isFunction(f) {\n  return 'function' === typeof f;\n}\n\nmodule.exports = function (addr, opts) {\n  if (isFunction(opts)) opts = {\n    onConnect: opts\n  };\n  var location = typeof window === 'undefined' ? {} : window.location;\n  var url = wsurl(addr, location);\n  var socket = new WebSocket(url);\n  var stream = duplex(socket, opts);\n  stream.remoteAddress = url;\n\n  stream.close = function (cb) {\n    if (isFunction(cb)) {\n      socket.addEventListener('close', cb);\n    }\n\n    socket.close();\n  };\n\n  socket.addEventListener('open', function (e) {\n    if (opts && isFunction(opts.onConnect)) {\n      opts.onConnect(null, stream);\n    }\n  });\n  return stream;\n};\n\nmodule.exports.connect = module.exports;","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/node_modules/pull-ws/client.js"],"names":["WebSocket","require","duplex","wsurl","isFunction","f","module","exports","addr","opts","onConnect","location","window","url","socket","stream","remoteAddress","close","cb","addEventListener","e","connect"],"mappings":"AAAA,a,CAEA;;AACA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,UAAD,CAAnB;;AAEA,SAASG,UAAT,CAAqBC,CAArB,EAAwB;AACtB,SAAO,eAAe,OAAOA,CAA7B;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AACrC,MAAIL,UAAU,CAACK,IAAD,CAAd,EAAsBA,IAAI,GAAG;AAACC,IAAAA,SAAS,EAAED;AAAZ,GAAP;AAEtB,MAAIE,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,EAAhC,GAAqCA,MAAM,CAACD,QAA3D;AAEA,MAAIE,GAAG,GAAGV,KAAK,CAACK,IAAD,EAAOG,QAAP,CAAf;AACA,MAAIG,MAAM,GAAG,IAAId,SAAJ,CAAca,GAAd,CAAb;AAEA,MAAIE,MAAM,GAAGb,MAAM,CAACY,MAAD,EAASL,IAAT,CAAnB;AACAM,EAAAA,MAAM,CAACC,aAAP,GAAuBH,GAAvB;;AACAE,EAAAA,MAAM,CAACE,KAAP,GAAe,UAAUC,EAAV,EAAc;AAC3B,QAAId,UAAU,CAACc,EAAD,CAAd,EAAoB;AAClBJ,MAAAA,MAAM,CAACK,gBAAP,CAAwB,OAAxB,EAAiCD,EAAjC;AACD;;AACDJ,IAAAA,MAAM,CAACG,KAAP;AACD,GALD;;AAOAH,EAAAA,MAAM,CAACK,gBAAP,CAAwB,MAAxB,EAAgC,UAAUC,CAAV,EAAa;AAC3C,QAAIX,IAAI,IAAIL,UAAU,CAACK,IAAI,CAACC,SAAN,CAAtB,EAAwC;AACtCD,MAAAA,IAAI,CAACC,SAAL,CAAe,IAAf,EAAqBK,MAArB;AACD;AACF,GAJD;AAMA,SAAOA,MAAP;AACD,CAxBD;;AA0BAT,MAAM,CAACC,OAAP,CAAec,OAAf,GAAyBf,MAAM,CAACC,OAAhC","sourcesContent":["'use strict';\n\n//load websocket library if we are not in the browser\nvar WebSocket = require('./web-socket')\nvar duplex = require('./duplex')\nvar wsurl = require('./ws-url')\n\nfunction isFunction (f) {\n  return 'function' === typeof f\n}\n\nmodule.exports = function (addr, opts) {\n  if (isFunction(opts)) opts = {onConnect: opts}\n\n  var location = typeof window === 'undefined' ? {} : window.location\n\n  var url = wsurl(addr, location)\n  var socket = new WebSocket(url)\n\n  var stream = duplex(socket, opts)\n  stream.remoteAddress = url\n  stream.close = function (cb) {\n    if (isFunction(cb)) {\n      socket.addEventListener('close', cb)\n    }\n    socket.close()\n  }\n\n  socket.addEventListener('open', function (e) {\n    if (opts && isFunction(opts.onConnect)) {\n      opts.onConnect(null, stream)\n    }\n  })\n\n  return stream\n}\n\nmodule.exports.connect = module.exports\n"]},"metadata":{},"sourceType":"script"}
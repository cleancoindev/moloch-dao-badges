{"ast":null,"code":"\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n  if (typeof hexString === 'string' && hexString.substring(0, 2) !== '0x') {\n    hexString = '0x' + hexString;\n  }\n\n  return arrayify(hexString);\n}\nexport function zpad(value, length) {\n  value = String(value);\n\n  while (value.length < length) {\n    value = '0' + value;\n  }\n\n  return value;\n}\nexport function getPassword(password) {\n  if (typeof password === 'string') {\n    return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n  }\n\n  return arrayify(password);\n}\nexport function searchPath(object, path) {\n  let currentChild = object;\n  const comps = path.toLowerCase().split('/');\n\n  for (let i = 0; i < comps.length; i++) {\n    // Search for a child object with a case-insensitive matching key\n    let matchingChild = null;\n\n    for (const key in currentChild) {\n      if (key.toLowerCase() === comps[i]) {\n        matchingChild = currentChild[key];\n        break;\n      }\n    } // Didn't find one. :'(\n\n\n    if (matchingChild === null) {\n      return null;\n    } // Now check this child...\n\n\n    currentChild = matchingChild;\n  }\n\n  return currentChild;\n}","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/@ethersproject/json-wallets/lib.esm/utils.js"],"names":["arrayify","toUtf8Bytes","UnicodeNormalizationForm","looseArrayify","hexString","substring","zpad","value","length","String","getPassword","password","NFKC","searchPath","object","path","currentChild","comps","toLowerCase","split","i","matchingChild","key"],"mappings":"AAAA;;AACA,SAASA,QAAT,QAAyB,sBAAzB;AACA,SAASC,WAAT,EAAsBC,wBAAtB,QAAsD,wBAAtD;AACA,OAAO,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AACrC,MAAI,OAAQA,SAAR,KAAuB,QAAvB,IAAmCA,SAAS,CAACC,SAAV,CAAoB,CAApB,EAAuB,CAAvB,MAA8B,IAArE,EAA2E;AACvED,IAAAA,SAAS,GAAG,OAAOA,SAAnB;AACH;;AACD,SAAOJ,QAAQ,CAACI,SAAD,CAAf;AACH;AACD,OAAO,SAASE,IAAT,CAAcC,KAAd,EAAqBC,MAArB,EAA6B;AAChCD,EAAAA,KAAK,GAAGE,MAAM,CAACF,KAAD,CAAd;;AACA,SAAOA,KAAK,CAACC,MAAN,GAAeA,MAAtB,EAA8B;AAC1BD,IAAAA,KAAK,GAAG,MAAMA,KAAd;AACH;;AACD,SAAOA,KAAP;AACH;AACD,OAAO,SAASG,WAAT,CAAqBC,QAArB,EAA+B;AAClC,MAAI,OAAQA,QAAR,KAAsB,QAA1B,EAAoC;AAChC,WAAOV,WAAW,CAACU,QAAD,EAAWT,wBAAwB,CAACU,IAApC,CAAlB;AACH;;AACD,SAAOZ,QAAQ,CAACW,QAAD,CAAf;AACH;AACD,OAAO,SAASE,UAAT,CAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AACrC,MAAIC,YAAY,GAAGF,MAAnB;AACA,QAAMG,KAAK,GAAGF,IAAI,CAACG,WAAL,GAAmBC,KAAnB,CAAyB,GAAzB,CAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACT,MAA1B,EAAkCY,CAAC,EAAnC,EAAuC;AACnC;AACA,QAAIC,aAAa,GAAG,IAApB;;AACA,SAAK,MAAMC,GAAX,IAAkBN,YAAlB,EAAgC;AAC5B,UAAIM,GAAG,CAACJ,WAAJ,OAAsBD,KAAK,CAACG,CAAD,CAA/B,EAAoC;AAChCC,QAAAA,aAAa,GAAGL,YAAY,CAACM,GAAD,CAA5B;AACA;AACH;AACJ,KARkC,CASnC;;;AACA,QAAID,aAAa,KAAK,IAAtB,EAA4B;AACxB,aAAO,IAAP;AACH,KAZkC,CAanC;;;AACAL,IAAAA,YAAY,GAAGK,aAAf;AACH;;AACD,SAAOL,YAAP;AACH","sourcesContent":["\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n"]},"metadata":{},"sourceType":"module"}
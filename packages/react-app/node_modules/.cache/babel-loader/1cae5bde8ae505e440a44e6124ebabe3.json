{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar graphQLRequest = require('graphql-request').request;\n\nvar utils = require('./utils/index');\n\nvar verifier = require('./utils/verifier');\n\nvar _require = require('./utils/id'),\n    isSupportedDID = _require.isSupportedDID;\n\nvar config = require('./config.js');\n\nvar GRAPHQL_SERVER_URL = config.graphql_server_url;\nvar PROFILE_SERVER_URL = config.profile_server_url;\nvar ADDRESS_SERVER_URL = config.address_server_url;\n/**\n * @class\n */\n\nvar BoxApi = /*#__PURE__*/function () {\n  function BoxApi() {\n    (0, _classCallCheck2[\"default\"])(this, BoxApi);\n  }\n\n  (0, _createClass2[\"default\"])(BoxApi, null, [{\n    key: \"getRootStoreAddress\",\n    value: function () {\n      var _getRootStoreAddress = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(identifier) {\n        var serverUrl,\n            res,\n            _args = arguments;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                serverUrl = _args.length > 1 && _args[1] !== undefined ? _args[1] : ADDRESS_SERVER_URL;\n                _context.next = 3;\n                return utils.fetchJson(serverUrl + '/odbAddress/' + identifier);\n\n              case 3:\n                res = _context.sent;\n                return _context.abrupt(\"return\", res.data.rootStoreAddress);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getRootStoreAddress(_x) {\n        return _getRootStoreAddress.apply(this, arguments);\n      }\n\n      return getRootStoreAddress;\n    }()\n    /**\n     * Get the names of all spaces a user has\n     *\n     * @param     {String}    address                 An ethereum address\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Object}                            an array with all spaces as strings\n     */\n\n  }, {\n    key: \"listSpaces\",\n    value: function () {\n      var _listSpaces = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(address) {\n        var _ref,\n            profileServer,\n            serverUrl,\n            _args2 = arguments;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _ref = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {}, profileServer = _ref.profileServer;\n                serverUrl = profileServer || PROFILE_SERVER_URL;\n                _context2.prev = 2;\n\n                if (!isSupportedDID(address)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 6;\n                return utils.fetchJson(serverUrl + '/list-spaces?did=' + address);\n\n              case 6:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 9:\n                _context2.next = 11;\n                return utils.fetchJson(serverUrl + '/list-spaces?address=' + encodeURIComponent(address));\n\n              case 11:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 12:\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](2);\n                return _context2.abrupt(\"return\", []);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 14]]);\n      }));\n\n      function listSpaces(_x2) {\n        return _listSpaces.apply(this, arguments);\n      }\n\n      return listSpaces;\n    }()\n    /**\n     * Get the public data in a space of a given address with the given name\n     *\n     * @param     {String}    address                 An ethereum address\n     * @param     {String}    name                    A space name\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {Function}  opts.blocklist          A function that takes an address and returns true if the user has been blocked\n     * @param     {String}    opts.metadata           flag to retrieve metadata\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Object}                            a json object with the public space data\n     */\n\n  }, {\n    key: \"getSpace\",\n    value: function () {\n      var _getSpace = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(address, name) {\n        var _ref2,\n            profileServer,\n            metadata,\n            blocklist,\n            serverUrl,\n            url,\n            _args3 = arguments;\n\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _ref2 = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {}, profileServer = _ref2.profileServer, metadata = _ref2.metadata, blocklist = _ref2.blocklist;\n\n                if (!(blocklist && blocklist(address))) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                throw new Error(\"user with \".concat(address, \" is blocked\"));\n\n              case 3:\n                serverUrl = profileServer || PROFILE_SERVER_URL;\n                url = \"\".concat(serverUrl, \"/space\");\n                _context3.prev = 5; // Add first parameter: address or did\n\n                if (isSupportedDID(address)) {\n                  url = \"\".concat(url, \"?did=\").concat(address);\n                } else {\n                  url = \"\".concat(url, \"?address=\").concat(encodeURIComponent(address.toLowerCase()));\n                } // Add name:\n\n\n                url = \"\".concat(url, \"&name=\").concat(encodeURIComponent(name)); // Add metadata:\n\n                if (metadata) {\n                  url = \"\".concat(url, \"&metadata=\").concat(encodeURIComponent(metadata));\n                } // Query:\n                // we await explicitly to make sure the error is catch'd in the correct scope\n\n\n                _context3.next = 11;\n                return utils.fetchJson(url);\n\n              case 11:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](5);\n                return _context3.abrupt(\"return\", {});\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[5, 14]]);\n      }));\n\n      function getSpace(_x3, _x4) {\n        return _getSpace.apply(this, arguments);\n      }\n\n      return getSpace;\n    }() // TODO consumes address now, could also give root DID to get space DID\n\n  }, {\n    key: \"getSpaceDID\",\n    value: function () {\n      var _getSpaceDID = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(address, space) {\n        var opts,\n            conf,\n            _args4 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                opts = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n                _context4.next = 3;\n                return BoxApi.getConfig(address, opts);\n\n              case 3:\n                conf = _context4.sent;\n\n                if (!(!conf.spaces[space] || !conf.spaces[space].DID)) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Could not find appropriate DID for address \".concat(address));\n\n              case 6:\n                return _context4.abrupt(\"return\", conf.spaces[space].DID);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getSpaceDID(_x5, _x6) {\n        return _getSpaceDID.apply(this, arguments);\n      }\n\n      return getSpaceDID;\n    }()\n    /**\n     * Get all posts that are made to a thread.\n     *\n     * @param     {String}    space                   The name of the space the thread is in\n     * @param     {String}    name                    The name of the thread\n     * @param     {String}    firstModerator          The DID (or ethereum address) of the first moderator\n     * @param     {Boolean}   members                 True if only members are allowed to post\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Array<Object>}                     An array of posts\n     */\n\n  }, {\n    key: \"getThread\",\n    value: function () {\n      var _getThread = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(space, name, firstModerator, members) {\n        var opts,\n            serverUrl,\n            url,\n            _args5 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                opts = _args5.length > 4 && _args5[4] !== undefined ? _args5[4] : {};\n                serverUrl = opts.profileServer || PROFILE_SERVER_URL;\n\n                if (!firstModerator.startsWith('0x')) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                _context5.next = 5;\n                return BoxApi.getSpaceDID(firstModerator, space, opts);\n\n              case 5:\n                firstModerator = _context5.sent;\n\n              case 6:\n                _context5.prev = 6;\n                url = \"\".concat(serverUrl, \"/thread?space=\").concat(encodeURIComponent(space), \"&name=\").concat(encodeURIComponent(name));\n                url += \"&mod=\".concat(encodeURIComponent(firstModerator), \"&members=\").concat(encodeURIComponent(members));\n                _context5.next = 11;\n                return utils.fetchJson(url);\n\n              case 11:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 14:\n                _context5.prev = 14;\n                _context5.t0 = _context5[\"catch\"](6);\n                throw new Error(_context5.t0);\n\n              case 17:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[6, 14]]);\n      }));\n\n      function getThread(_x7, _x8, _x9, _x10) {\n        return _getThread.apply(this, arguments);\n      }\n\n      return getThread;\n    }()\n    /**\n     * Get all posts that are made to a thread.\n     *\n     * @param     {String}    address                 The orbitdb-address of the thread\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Array<Object>}                     An array of posts\n     */\n\n  }, {\n    key: \"getThreadByAddress\",\n    value: function () {\n      var _getThreadByAddress = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(address) {\n        var opts,\n            serverUrl,\n            _args6 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                opts = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n                serverUrl = opts.profileServer || PROFILE_SERVER_URL;\n                _context6.prev = 2;\n                _context6.next = 5;\n                return utils.fetchJson(\"\".concat(serverUrl, \"/thread?address=\").concat(encodeURIComponent(address)));\n\n              case 5:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](2);\n                throw new Error(_context6.t0);\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[2, 8]]);\n      }));\n\n      function getThreadByAddress(_x11) {\n        return _getThreadByAddress.apply(this, arguments);\n      }\n\n      return getThreadByAddress;\n    }()\n    /**\n     * Get the configuration of a users 3Box\n     *\n     * @param     {String}    address                 The ethereum address\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Array<Object>}                     An array of posts\n     */\n\n  }, {\n    key: \"getConfig\",\n    value: function () {\n      var _getConfig = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(address) {\n        var opts,\n            serverUrl,\n            isAddr,\n            _args7 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                opts = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n                serverUrl = opts.profileServer || PROFILE_SERVER_URL;\n                isAddr = address.startsWith('0x'); // assume 3ID if not address\n\n                _context7.prev = 3;\n                _context7.next = 6;\n                return utils.fetchJson(\"\".concat(serverUrl, \"/config?\").concat(isAddr ? 'address' : 'did', \"=\").concat(encodeURIComponent(address)));\n\n              case 6:\n                return _context7.abrupt(\"return\", _context7.sent);\n\n              case 9:\n                _context7.prev = 9;\n                _context7.t0 = _context7[\"catch\"](3);\n                throw new Error(_context7.t0);\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[3, 9]]);\n      }));\n\n      function getConfig(_x12) {\n        return _getConfig.apply(this, arguments);\n      }\n\n      return getConfig;\n    }()\n    /**\n     * Get the public profile of a given address\n     *\n     * @param     {String}    address                 An ethereum address\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {Function}  opts.blocklist          A function that takes an address and returns true if the user has been blocked\n     * @param     {String}    opts.metadata           flag to retrieve metadata\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Object}                            a json object with the profile for the given address\n     */\n\n  }, {\n    key: \"getProfile\",\n    value: function () {\n      var _getProfile = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(address) {\n        var _ref3,\n            profileServer,\n            metadata,\n            blocklist,\n            serverUrl,\n            url,\n            _args8 = arguments;\n\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _ref3 = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {}, profileServer = _ref3.profileServer, metadata = _ref3.metadata, blocklist = _ref3.blocklist;\n\n                if (!(blocklist && blocklist(address))) {\n                  _context8.next = 3;\n                  break;\n                }\n\n                throw new Error(\"user with \".concat(address, \" is blocked\"));\n\n              case 3:\n                serverUrl = profileServer || PROFILE_SERVER_URL;\n                url = \"\".concat(serverUrl, \"/profile\");\n                _context8.prev = 5; // Add first parameter: address or did\n\n                if (isSupportedDID(address)) {\n                  url = \"\".concat(url, \"?did=\").concat(address);\n                } else {\n                  url = \"\".concat(url, \"?address=\").concat(encodeURIComponent(address.toLowerCase()));\n                } // Add metadata:\n\n\n                if (metadata) {\n                  url = \"\".concat(url, \"&metadata=\").concat(encodeURIComponent(metadata));\n                } // Query:\n                // we await explicitly to make sure the error is catch'd in the correct scope\n\n\n                _context8.next = 10;\n                return utils.fetchJson(url);\n\n              case 10:\n                return _context8.abrupt(\"return\", _context8.sent);\n\n              case 13:\n                _context8.prev = 13;\n                _context8.t0 = _context8[\"catch\"](5);\n                return _context8.abrupt(\"return\", {});\n\n              case 16:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[5, 13]]);\n      }));\n\n      function getProfile(_x13) {\n        return _getProfile.apply(this, arguments);\n      }\n\n      return getProfile;\n    }()\n    /**\n     * Get a list of public profiles for given addresses. This relies on 3Box profile API.\n     *\n     * @param     {Array}     address                 An array of ethereum addresses\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Object}                            a json object with each key an address and value the profile\n     */\n\n  }, {\n    key: \"getProfiles\",\n    value: function () {\n      var _getProfiles = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(addressArray) {\n        var opts,\n            req,\n            url,\n            _args9 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                opts = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : {};\n                opts = Object.assign({\n                  profileServer: PROFILE_SERVER_URL\n                }, opts);\n                req = {\n                  addressList: [],\n                  didList: []\n                }; // Split addresses on ethereum / dids\n\n                addressArray.forEach(function (address) {\n                  if (isSupportedDID(address)) {\n                    req.didList.push(address);\n                  } else {\n                    req.addressList.push(address);\n                  }\n                });\n                url = \"\".concat(opts.profileServer, \"/profileList\");\n                return _context9.abrupt(\"return\", utils.fetchJson(url, req));\n\n              case 6:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function getProfiles(_x14) {\n        return _getProfiles.apply(this, arguments);\n      }\n\n      return getProfiles;\n    }()\n    /**\n     * GraphQL for 3Box profile API\n     *\n     * @param     {Object}    query               A graphQL query object.\n     * @param     {Object}    opts                Optional parameters\n     * @param     {String}    opts.graphqlServer  URL of graphQL 3Box profile service\n     * @return    {Object}                        a json object with each key an address and value the profile\n     */\n\n  }, {\n    key: \"profileGraphQL\",\n    value: function () {\n      var _profileGraphQL = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(query) {\n        var opts,\n            _args10 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                opts = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : {};\n                opts = Object.assign({\n                  graphqlServer: GRAPHQL_SERVER_URL\n                }, opts);\n                return _context10.abrupt(\"return\", graphQLRequest(opts.graphqlServer, query));\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      function profileGraphQL(_x15) {\n        return _profileGraphQL.apply(this, arguments);\n      }\n\n      return profileGraphQL;\n    }()\n    /**\n     * Verifies the proofs of social accounts that is present in the profile.\n     *\n     * @param     {Object}            profile                 A user profile object, received from the `getProfile` function\n     * @return    {Object}                                    An object containing the accounts that have been verified\n     */\n\n  }, {\n    key: \"getVerifiedAccounts\",\n    value: function () {\n      var _getVerifiedAccounts = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(profile) {\n        var verifs, didVerified, dids;\n        return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                verifs = {};\n                _context11.prev = 1;\n                _context11.next = 4;\n                return verifier.verifyDID(profile.proof_did);\n\n              case 4:\n                didVerified = _context11.sent;\n                dids = [didVerified.did];\n                verifs.did = didVerified.did;\n\n                if (didVerified.muport) {\n                  verifs.muport = didVerified.muport;\n                  dids.push(didVerified.muport);\n                }\n\n                if (!profile.proof_github) {\n                  _context11.next = 17;\n                  break;\n                }\n\n                _context11.prev = 9;\n                _context11.next = 12;\n                return verifier.verifyGithub(dids, profile.proof_github);\n\n              case 12:\n                verifs.github = _context11.sent;\n                _context11.next = 17;\n                break;\n\n              case 15:\n                _context11.prev = 15;\n                _context11.t0 = _context11[\"catch\"](9);\n\n              case 17:\n                if (!profile.proof_twitter) {\n                  _context11.next = 26;\n                  break;\n                }\n\n                _context11.prev = 18;\n                _context11.next = 21;\n                return verifier.verifyTwitter(dids, profile.proof_twitter);\n\n              case 21:\n                verifs.twitter = _context11.sent;\n                _context11.next = 26;\n                break;\n\n              case 24:\n                _context11.prev = 24;\n                _context11.t1 = _context11[\"catch\"](18);\n\n              case 26:\n                if (!profile.ethereum_proof) {\n                  _context11.next = 35;\n                  break;\n                }\n\n                _context11.prev = 27;\n                _context11.next = 30;\n                return verifier.verifyEthereum(profile.ethereum_proof, verifs.did);\n\n              case 30:\n                verifs.ethereum = _context11.sent;\n                _context11.next = 35;\n                break;\n\n              case 33:\n                _context11.prev = 33;\n                _context11.t2 = _context11[\"catch\"](27);\n\n              case 35:\n                _context11.next = 39;\n                break;\n\n              case 37:\n                _context11.prev = 37;\n                _context11.t3 = _context11[\"catch\"](1);\n\n              case 39:\n                return _context11.abrupt(\"return\", verifs);\n\n              case 40:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, null, [[1, 37], [9, 15], [18, 24], [27, 33]]);\n      }));\n\n      function getVerifiedAccounts(_x16) {\n        return _getVerifiedAccounts.apply(this, arguments);\n      }\n\n      return getVerifiedAccounts;\n    }()\n  }]);\n  return BoxApi;\n}();\n\nmodule.exports = BoxApi;","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/3box/lib/api.js"],"names":["_interopRequireDefault","require","_regenerator","_asyncToGenerator2","_classCallCheck2","_createClass2","graphQLRequest","request","utils","verifier","_require","isSupportedDID","config","GRAPHQL_SERVER_URL","graphql_server_url","PROFILE_SERVER_URL","profile_server_url","ADDRESS_SERVER_URL","address_server_url","BoxApi","key","value","_getRootStoreAddress","mark","_callee","identifier","serverUrl","res","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","fetchJson","sent","abrupt","data","rootStoreAddress","stop","getRootStoreAddress","_x","apply","_listSpaces","_callee2","address","_ref","profileServer","_args2","_callee2$","_context2","encodeURIComponent","t0","listSpaces","_x2","_getSpace","_callee3","name","_ref2","metadata","blocklist","url","_args3","_callee3$","_context3","Error","concat","toLowerCase","getSpace","_x3","_x4","_getSpaceDID","_callee4","space","opts","conf","_args4","_callee4$","_context4","getConfig","spaces","DID","getSpaceDID","_x5","_x6","_getThread","_callee5","firstModerator","members","_args5","_callee5$","_context5","startsWith","getThread","_x7","_x8","_x9","_x10","_getThreadByAddress","_callee6","_args6","_callee6$","_context6","getThreadByAddress","_x11","_getConfig","_callee7","isAddr","_args7","_callee7$","_context7","_x12","_getProfile","_callee8","_ref3","_args8","_callee8$","_context8","getProfile","_x13","_getProfiles","_callee9","addressArray","req","_args9","_callee9$","_context9","Object","assign","addressList","didList","forEach","push","getProfiles","_x14","_profileGraphQL","_callee10","query","_args10","_callee10$","_context10","graphqlServer","profileGraphQL","_x15","_getVerifiedAccounts","_callee11","profile","verifs","didVerified","dids","_callee11$","_context11","verifyDID","proof_did","did","muport","proof_github","verifyGithub","github","proof_twitter","verifyTwitter","twitter","t1","ethereum_proof","verifyEthereum","ethereum","t2","t3","getVerifiedAccounts","_x16","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar graphQLRequest = require('graphql-request').request;\n\nvar utils = require('./utils/index');\n\nvar verifier = require('./utils/verifier');\n\nvar _require = require('./utils/id'),\n    isSupportedDID = _require.isSupportedDID;\n\nvar config = require('./config.js');\n\nvar GRAPHQL_SERVER_URL = config.graphql_server_url;\nvar PROFILE_SERVER_URL = config.profile_server_url;\nvar ADDRESS_SERVER_URL = config.address_server_url;\n/**\n * @class\n */\n\nvar BoxApi =\n/*#__PURE__*/\nfunction () {\n  function BoxApi() {\n    (0, _classCallCheck2[\"default\"])(this, BoxApi);\n  }\n\n  (0, _createClass2[\"default\"])(BoxApi, null, [{\n    key: \"getRootStoreAddress\",\n    value: function () {\n      var _getRootStoreAddress = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(identifier) {\n        var serverUrl,\n            res,\n            _args = arguments;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                serverUrl = _args.length > 1 && _args[1] !== undefined ? _args[1] : ADDRESS_SERVER_URL;\n                _context.next = 3;\n                return utils.fetchJson(serverUrl + '/odbAddress/' + identifier);\n\n              case 3:\n                res = _context.sent;\n                return _context.abrupt(\"return\", res.data.rootStoreAddress);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getRootStoreAddress(_x) {\n        return _getRootStoreAddress.apply(this, arguments);\n      }\n\n      return getRootStoreAddress;\n    }()\n    /**\n     * Get the names of all spaces a user has\n     *\n     * @param     {String}    address                 An ethereum address\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Object}                            an array with all spaces as strings\n     */\n\n  }, {\n    key: \"listSpaces\",\n    value: function () {\n      var _listSpaces = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(address) {\n        var _ref,\n            profileServer,\n            serverUrl,\n            _args2 = arguments;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _ref = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {}, profileServer = _ref.profileServer;\n                serverUrl = profileServer || PROFILE_SERVER_URL;\n                _context2.prev = 2;\n\n                if (!isSupportedDID(address)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 6;\n                return utils.fetchJson(serverUrl + '/list-spaces?did=' + address);\n\n              case 6:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 9:\n                _context2.next = 11;\n                return utils.fetchJson(serverUrl + '/list-spaces?address=' + encodeURIComponent(address));\n\n              case 11:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 12:\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](2);\n                return _context2.abrupt(\"return\", []);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 14]]);\n      }));\n\n      function listSpaces(_x2) {\n        return _listSpaces.apply(this, arguments);\n      }\n\n      return listSpaces;\n    }()\n    /**\n     * Get the public data in a space of a given address with the given name\n     *\n     * @param     {String}    address                 An ethereum address\n     * @param     {String}    name                    A space name\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {Function}  opts.blocklist          A function that takes an address and returns true if the user has been blocked\n     * @param     {String}    opts.metadata           flag to retrieve metadata\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Object}                            a json object with the public space data\n     */\n\n  }, {\n    key: \"getSpace\",\n    value: function () {\n      var _getSpace = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3(address, name) {\n        var _ref2,\n            profileServer,\n            metadata,\n            blocklist,\n            serverUrl,\n            url,\n            _args3 = arguments;\n\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _ref2 = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {}, profileServer = _ref2.profileServer, metadata = _ref2.metadata, blocklist = _ref2.blocklist;\n\n                if (!(blocklist && blocklist(address))) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                throw new Error(\"user with \".concat(address, \" is blocked\"));\n\n              case 3:\n                serverUrl = profileServer || PROFILE_SERVER_URL;\n                url = \"\".concat(serverUrl, \"/space\");\n                _context3.prev = 5;\n\n                // Add first parameter: address or did\n                if (isSupportedDID(address)) {\n                  url = \"\".concat(url, \"?did=\").concat(address);\n                } else {\n                  url = \"\".concat(url, \"?address=\").concat(encodeURIComponent(address.toLowerCase()));\n                } // Add name:\n\n\n                url = \"\".concat(url, \"&name=\").concat(encodeURIComponent(name)); // Add metadata:\n\n                if (metadata) {\n                  url = \"\".concat(url, \"&metadata=\").concat(encodeURIComponent(metadata));\n                } // Query:\n                // we await explicitly to make sure the error is catch'd in the correct scope\n\n\n                _context3.next = 11;\n                return utils.fetchJson(url);\n\n              case 11:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](5);\n                return _context3.abrupt(\"return\", {});\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[5, 14]]);\n      }));\n\n      function getSpace(_x3, _x4) {\n        return _getSpace.apply(this, arguments);\n      }\n\n      return getSpace;\n    }() // TODO consumes address now, could also give root DID to get space DID\n\n  }, {\n    key: \"getSpaceDID\",\n    value: function () {\n      var _getSpaceDID = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee4(address, space) {\n        var opts,\n            conf,\n            _args4 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                opts = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n                _context4.next = 3;\n                return BoxApi.getConfig(address, opts);\n\n              case 3:\n                conf = _context4.sent;\n\n                if (!(!conf.spaces[space] || !conf.spaces[space].DID)) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Could not find appropriate DID for address \".concat(address));\n\n              case 6:\n                return _context4.abrupt(\"return\", conf.spaces[space].DID);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getSpaceDID(_x5, _x6) {\n        return _getSpaceDID.apply(this, arguments);\n      }\n\n      return getSpaceDID;\n    }()\n    /**\n     * Get all posts that are made to a thread.\n     *\n     * @param     {String}    space                   The name of the space the thread is in\n     * @param     {String}    name                    The name of the thread\n     * @param     {String}    firstModerator          The DID (or ethereum address) of the first moderator\n     * @param     {Boolean}   members                 True if only members are allowed to post\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Array<Object>}                     An array of posts\n     */\n\n  }, {\n    key: \"getThread\",\n    value: function () {\n      var _getThread = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee5(space, name, firstModerator, members) {\n        var opts,\n            serverUrl,\n            url,\n            _args5 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                opts = _args5.length > 4 && _args5[4] !== undefined ? _args5[4] : {};\n                serverUrl = opts.profileServer || PROFILE_SERVER_URL;\n\n                if (!firstModerator.startsWith('0x')) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                _context5.next = 5;\n                return BoxApi.getSpaceDID(firstModerator, space, opts);\n\n              case 5:\n                firstModerator = _context5.sent;\n\n              case 6:\n                _context5.prev = 6;\n                url = \"\".concat(serverUrl, \"/thread?space=\").concat(encodeURIComponent(space), \"&name=\").concat(encodeURIComponent(name));\n                url += \"&mod=\".concat(encodeURIComponent(firstModerator), \"&members=\").concat(encodeURIComponent(members));\n                _context5.next = 11;\n                return utils.fetchJson(url);\n\n              case 11:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 14:\n                _context5.prev = 14;\n                _context5.t0 = _context5[\"catch\"](6);\n                throw new Error(_context5.t0);\n\n              case 17:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[6, 14]]);\n      }));\n\n      function getThread(_x7, _x8, _x9, _x10) {\n        return _getThread.apply(this, arguments);\n      }\n\n      return getThread;\n    }()\n    /**\n     * Get all posts that are made to a thread.\n     *\n     * @param     {String}    address                 The orbitdb-address of the thread\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Array<Object>}                     An array of posts\n     */\n\n  }, {\n    key: \"getThreadByAddress\",\n    value: function () {\n      var _getThreadByAddress = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee6(address) {\n        var opts,\n            serverUrl,\n            _args6 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                opts = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n                serverUrl = opts.profileServer || PROFILE_SERVER_URL;\n                _context6.prev = 2;\n                _context6.next = 5;\n                return utils.fetchJson(\"\".concat(serverUrl, \"/thread?address=\").concat(encodeURIComponent(address)));\n\n              case 5:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](2);\n                throw new Error(_context6.t0);\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[2, 8]]);\n      }));\n\n      function getThreadByAddress(_x11) {\n        return _getThreadByAddress.apply(this, arguments);\n      }\n\n      return getThreadByAddress;\n    }()\n    /**\n     * Get the configuration of a users 3Box\n     *\n     * @param     {String}    address                 The ethereum address\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Array<Object>}                     An array of posts\n     */\n\n  }, {\n    key: \"getConfig\",\n    value: function () {\n      var _getConfig = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee7(address) {\n        var opts,\n            serverUrl,\n            isAddr,\n            _args7 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                opts = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n                serverUrl = opts.profileServer || PROFILE_SERVER_URL;\n                isAddr = address.startsWith('0x'); // assume 3ID if not address\n\n                _context7.prev = 3;\n                _context7.next = 6;\n                return utils.fetchJson(\"\".concat(serverUrl, \"/config?\").concat(isAddr ? 'address' : 'did', \"=\").concat(encodeURIComponent(address)));\n\n              case 6:\n                return _context7.abrupt(\"return\", _context7.sent);\n\n              case 9:\n                _context7.prev = 9;\n                _context7.t0 = _context7[\"catch\"](3);\n                throw new Error(_context7.t0);\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[3, 9]]);\n      }));\n\n      function getConfig(_x12) {\n        return _getConfig.apply(this, arguments);\n      }\n\n      return getConfig;\n    }()\n    /**\n     * Get the public profile of a given address\n     *\n     * @param     {String}    address                 An ethereum address\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {Function}  opts.blocklist          A function that takes an address and returns true if the user has been blocked\n     * @param     {String}    opts.metadata           flag to retrieve metadata\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Object}                            a json object with the profile for the given address\n     */\n\n  }, {\n    key: \"getProfile\",\n    value: function () {\n      var _getProfile = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee8(address) {\n        var _ref3,\n            profileServer,\n            metadata,\n            blocklist,\n            serverUrl,\n            url,\n            _args8 = arguments;\n\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _ref3 = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {}, profileServer = _ref3.profileServer, metadata = _ref3.metadata, blocklist = _ref3.blocklist;\n\n                if (!(blocklist && blocklist(address))) {\n                  _context8.next = 3;\n                  break;\n                }\n\n                throw new Error(\"user with \".concat(address, \" is blocked\"));\n\n              case 3:\n                serverUrl = profileServer || PROFILE_SERVER_URL;\n                url = \"\".concat(serverUrl, \"/profile\");\n                _context8.prev = 5;\n\n                // Add first parameter: address or did\n                if (isSupportedDID(address)) {\n                  url = \"\".concat(url, \"?did=\").concat(address);\n                } else {\n                  url = \"\".concat(url, \"?address=\").concat(encodeURIComponent(address.toLowerCase()));\n                } // Add metadata:\n\n\n                if (metadata) {\n                  url = \"\".concat(url, \"&metadata=\").concat(encodeURIComponent(metadata));\n                } // Query:\n                // we await explicitly to make sure the error is catch'd in the correct scope\n\n\n                _context8.next = 10;\n                return utils.fetchJson(url);\n\n              case 10:\n                return _context8.abrupt(\"return\", _context8.sent);\n\n              case 13:\n                _context8.prev = 13;\n                _context8.t0 = _context8[\"catch\"](5);\n                return _context8.abrupt(\"return\", {});\n\n              case 16:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[5, 13]]);\n      }));\n\n      function getProfile(_x13) {\n        return _getProfile.apply(this, arguments);\n      }\n\n      return getProfile;\n    }()\n    /**\n     * Get a list of public profiles for given addresses. This relies on 3Box profile API.\n     *\n     * @param     {Array}     address                 An array of ethereum addresses\n     * @param     {Object}    opts                    Optional parameters\n     * @param     {String}    opts.profileServer      URL of Profile API server\n     * @return    {Object}                            a json object with each key an address and value the profile\n     */\n\n  }, {\n    key: \"getProfiles\",\n    value: function () {\n      var _getProfiles = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee9(addressArray) {\n        var opts,\n            req,\n            url,\n            _args9 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                opts = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : {};\n                opts = Object.assign({\n                  profileServer: PROFILE_SERVER_URL\n                }, opts);\n                req = {\n                  addressList: [],\n                  didList: []\n                }; // Split addresses on ethereum / dids\n\n                addressArray.forEach(function (address) {\n                  if (isSupportedDID(address)) {\n                    req.didList.push(address);\n                  } else {\n                    req.addressList.push(address);\n                  }\n                });\n                url = \"\".concat(opts.profileServer, \"/profileList\");\n                return _context9.abrupt(\"return\", utils.fetchJson(url, req));\n\n              case 6:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function getProfiles(_x14) {\n        return _getProfiles.apply(this, arguments);\n      }\n\n      return getProfiles;\n    }()\n    /**\n     * GraphQL for 3Box profile API\n     *\n     * @param     {Object}    query               A graphQL query object.\n     * @param     {Object}    opts                Optional parameters\n     * @param     {String}    opts.graphqlServer  URL of graphQL 3Box profile service\n     * @return    {Object}                        a json object with each key an address and value the profile\n     */\n\n  }, {\n    key: \"profileGraphQL\",\n    value: function () {\n      var _profileGraphQL = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee10(query) {\n        var opts,\n            _args10 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                opts = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : {};\n                opts = Object.assign({\n                  graphqlServer: GRAPHQL_SERVER_URL\n                }, opts);\n                return _context10.abrupt(\"return\", graphQLRequest(opts.graphqlServer, query));\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      function profileGraphQL(_x15) {\n        return _profileGraphQL.apply(this, arguments);\n      }\n\n      return profileGraphQL;\n    }()\n    /**\n     * Verifies the proofs of social accounts that is present in the profile.\n     *\n     * @param     {Object}            profile                 A user profile object, received from the `getProfile` function\n     * @return    {Object}                                    An object containing the accounts that have been verified\n     */\n\n  }, {\n    key: \"getVerifiedAccounts\",\n    value: function () {\n      var _getVerifiedAccounts = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee11(profile) {\n        var verifs, didVerified, dids;\n        return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                verifs = {};\n                _context11.prev = 1;\n                _context11.next = 4;\n                return verifier.verifyDID(profile.proof_did);\n\n              case 4:\n                didVerified = _context11.sent;\n                dids = [didVerified.did];\n                verifs.did = didVerified.did;\n\n                if (didVerified.muport) {\n                  verifs.muport = didVerified.muport;\n                  dids.push(didVerified.muport);\n                }\n\n                if (!profile.proof_github) {\n                  _context11.next = 17;\n                  break;\n                }\n\n                _context11.prev = 9;\n                _context11.next = 12;\n                return verifier.verifyGithub(dids, profile.proof_github);\n\n              case 12:\n                verifs.github = _context11.sent;\n                _context11.next = 17;\n                break;\n\n              case 15:\n                _context11.prev = 15;\n                _context11.t0 = _context11[\"catch\"](9);\n\n              case 17:\n                if (!profile.proof_twitter) {\n                  _context11.next = 26;\n                  break;\n                }\n\n                _context11.prev = 18;\n                _context11.next = 21;\n                return verifier.verifyTwitter(dids, profile.proof_twitter);\n\n              case 21:\n                verifs.twitter = _context11.sent;\n                _context11.next = 26;\n                break;\n\n              case 24:\n                _context11.prev = 24;\n                _context11.t1 = _context11[\"catch\"](18);\n\n              case 26:\n                if (!profile.ethereum_proof) {\n                  _context11.next = 35;\n                  break;\n                }\n\n                _context11.prev = 27;\n                _context11.next = 30;\n                return verifier.verifyEthereum(profile.ethereum_proof, verifs.did);\n\n              case 30:\n                verifs.ethereum = _context11.sent;\n                _context11.next = 35;\n                break;\n\n              case 33:\n                _context11.prev = 33;\n                _context11.t2 = _context11[\"catch\"](27);\n\n              case 35:\n                _context11.next = 39;\n                break;\n\n              case 37:\n                _context11.prev = 37;\n                _context11.t3 = _context11[\"catch\"](1);\n\n              case 39:\n                return _context11.abrupt(\"return\", verifs);\n\n              case 40:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, null, [[1, 37], [9, 15], [18, 24], [27, 33]]);\n      }));\n\n      function getVerifiedAccounts(_x16) {\n        return _getVerifiedAccounts.apply(this, arguments);\n      }\n\n      return getVerifiedAccounts;\n    }()\n  }]);\n  return BoxApi;\n}();\n\nmodule.exports = BoxApi;"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nconst mergeOptions = require('merge-options');\n\nconst {\n  struct,\n  superstruct\n} = require('superstruct');\n\nconst {\n  optional,\n  list\n} = struct;\nconst DefaultConfig = {\n  connectionManager: {\n    minPeers: 25\n  },\n  config: {\n    dht: {\n      enabled: false,\n      kBucketSize: 20,\n      randomWalk: {\n        enabled: false,\n        // disabled waiting for https://github.com/libp2p/js-libp2p-kad-dht/issues/86\n        queriesPerPeriod: 1,\n        interval: 300e3,\n        timeout: 10e3\n      }\n    },\n    peerDiscovery: {\n      autoDial: true\n    },\n    pubsub: {\n      enabled: true,\n      emitSelf: true,\n      signMessages: true,\n      strictSigning: true\n    },\n    relay: {\n      enabled: true,\n      hop: {\n        enabled: false,\n        active: false\n      }\n    }\n  }\n}; // Define custom types\n\nconst s = superstruct({\n  types: {\n    transport: value => {\n      if (value.length === 0) return 'ERROR_EMPTY';\n      value.forEach(i => {\n        if (!i.dial) return 'ERR_NOT_A_TRANSPORT';\n      });\n      return true;\n    },\n    protector: value => {\n      if (!value.protect) return 'ERR_NOT_A_PROTECTOR';\n      return true;\n    }\n  }\n});\nconst modulesSchema = s({\n  connEncryption: optional(list([s('object|function')])),\n  // this is hacky to simulate optional because interface doesnt work correctly with it\n  // change to optional when fixed upstream\n  connProtector: s('undefined|protector'),\n  contentRouting: optional(list(['object'])),\n  dht: optional(s('null|function|object')),\n  pubsub: optional(s('null|function|object')),\n  peerDiscovery: optional(list([s('object|function')])),\n  peerRouting: optional(list(['object'])),\n  streamMuxer: optional(list([s('object|function')])),\n  transport: 'transport'\n});\nconst configSchema = s({\n  peerDiscovery: 'object?',\n  relay: 'object?',\n  dht: 'object?',\n  pubsub: 'object?'\n});\nconst optionsSchema = s({\n  switch: 'object?',\n  connectionManager: 'object?',\n  datastore: 'object?',\n  peerInfo: 'object',\n  peerBook: 'object?',\n  modules: modulesSchema,\n  config: configSchema\n});\n\nmodule.exports.validate = opts => {\n  opts = mergeOptions(DefaultConfig, opts);\n  const [error, options] = optionsSchema.validate(opts); // Improve errors throwed, reduce stack by throwing here and add reason to the message\n\n  if (error) {\n    throw new Error(`${error.message}${error.reason ? ' - ' + error.reason : ''}`);\n  } else {\n    // Throw when dht is enabled but no dht module provided\n    if (options.config.dht.enabled) {\n      s('function|object')(options.modules.dht);\n    }\n  }\n\n  return options;\n};","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/libp2p/src/config.js"],"names":["mergeOptions","require","struct","superstruct","optional","list","DefaultConfig","connectionManager","minPeers","config","dht","enabled","kBucketSize","randomWalk","queriesPerPeriod","interval","timeout","peerDiscovery","autoDial","pubsub","emitSelf","signMessages","strictSigning","relay","hop","active","s","types","transport","value","length","forEach","i","dial","protector","protect","modulesSchema","connEncryption","connProtector","contentRouting","peerRouting","streamMuxer","configSchema","optionsSchema","switch","datastore","peerInfo","peerBook","modules","module","exports","validate","opts","error","options","Error","message","reason"],"mappings":"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","sourcesContent":["'use strict'\n\nconst mergeOptions = require('merge-options')\nconst { struct, superstruct } = require('superstruct')\nconst { optional, list } = struct\n\nconst DefaultConfig = {\n  connectionManager: {\n    minPeers: 25\n  },\n  config: {\n    dht: {\n      enabled: false,\n      kBucketSize: 20,\n      randomWalk: {\n        enabled: false, // disabled waiting for https://github.com/libp2p/js-libp2p-kad-dht/issues/86\n        queriesPerPeriod: 1,\n        interval: 300e3,\n        timeout: 10e3\n      }\n    },\n    peerDiscovery: {\n      autoDial: true\n    },\n    pubsub: {\n      enabled: true,\n      emitSelf: true,\n      signMessages: true,\n      strictSigning: true\n    },\n    relay: {\n      enabled: true,\n      hop: {\n        enabled: false,\n        active: false\n      }\n    }\n  }\n}\n\n// Define custom types\nconst s = superstruct({\n  types: {\n    transport: value => {\n      if (value.length === 0) return 'ERROR_EMPTY'\n      value.forEach(i => {\n        if (!i.dial) return 'ERR_NOT_A_TRANSPORT'\n      })\n      return true\n    },\n    protector: value => {\n      if (!value.protect) return 'ERR_NOT_A_PROTECTOR'\n      return true\n    }\n  }\n})\n\nconst modulesSchema = s({\n  connEncryption: optional(list([s('object|function')])),\n  // this is hacky to simulate optional because interface doesnt work correctly with it\n  // change to optional when fixed upstream\n  connProtector: s('undefined|protector'),\n  contentRouting: optional(list(['object'])),\n  dht: optional(s('null|function|object')),\n  pubsub: optional(s('null|function|object')),\n  peerDiscovery: optional(list([s('object|function')])),\n  peerRouting: optional(list(['object'])),\n  streamMuxer: optional(list([s('object|function')])),\n  transport: 'transport'\n})\n\nconst configSchema = s({\n  peerDiscovery: 'object?',\n  relay: 'object?',\n  dht: 'object?',\n  pubsub: 'object?'\n})\n\nconst optionsSchema = s({\n  switch: 'object?',\n  connectionManager: 'object?',\n  datastore: 'object?',\n  peerInfo: 'object',\n  peerBook: 'object?',\n  modules: modulesSchema,\n  config: configSchema\n})\n\nmodule.exports.validate = (opts) => {\n  opts = mergeOptions(DefaultConfig, opts)\n  const [error, options] = optionsSchema.validate(opts)\n\n  // Improve errors throwed, reduce stack by throwing here and add reason to the message\n  if (error) {\n    throw new Error(`${error.message}${error.reason ? ' - ' + error.reason : ''}`)\n  } else {\n    // Throw when dht is enabled but no dht module provided\n    if (options.config.dht.enabled) {\n      s('function|object')(options.modules.dht)\n    }\n  }\n\n  return options\n}\n"]},"metadata":{},"sourceType":"script"}
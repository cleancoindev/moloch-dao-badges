{"ast":null,"code":"'use strict'; // See https://github.com/ipfs/specs/tree/master/keystore\n\nconst callbackify = require('callbackify');\n\nmodule.exports = function key(self) {\n  return {\n    gen: callbackify.variadic(async (name, opts) => {\n      // eslint-disable-line require-await\n      opts = opts || {};\n      return self._keychain.createKey(name, opts.type, opts.size);\n    }),\n    info: callbackify(async name => {\n      // eslint-disable-line require-await\n      return self._keychain.findKeyByName(name);\n    }),\n    list: callbackify(async () => {\n      // eslint-disable-line require-await\n      return self._keychain.listKeys();\n    }),\n    rm: callbackify(async name => {\n      // eslint-disable-line require-await\n      return self._keychain.removeKey(name);\n    }),\n    rename: callbackify(async (oldName, newName) => {\n      const key = await self._keychain.renameKey(oldName, newName);\n      return {\n        was: oldName,\n        now: key.name,\n        id: key.id,\n        overwrite: false\n      };\n    }),\n    import: callbackify(async (name, pem, password) => {\n      // eslint-disable-line require-await\n      return self._keychain.importKey(name, pem, password);\n    }),\n    export: callbackify(async (name, password) => {\n      // eslint-disable-line require-await\n      return self._keychain.exportKey(name, password);\n    })\n  };\n};","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/ipfs/src/core/components/key.js"],"names":["callbackify","require","module","exports","key","self","gen","variadic","name","opts","_keychain","createKey","type","size","info","findKeyByName","list","listKeys","rm","removeKey","rename","oldName","newName","renameKey","was","now","id","overwrite","import","pem","password","importKey","export","exportKey"],"mappings":"AAAA,a,CAEA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,GAAT,CAAcC,IAAd,EAAoB;AACnC,SAAO;AACLC,IAAAA,GAAG,EAAEN,WAAW,CAACO,QAAZ,CAAqB,OAAOC,IAAP,EAAaC,IAAb,KAAsB;AAAE;AAChDA,MAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,aAAOJ,IAAI,CAACK,SAAL,CAAeC,SAAf,CAAyBH,IAAzB,EAA+BC,IAAI,CAACG,IAApC,EAA0CH,IAAI,CAACI,IAA/C,CAAP;AACD,KAJI,CADA;AAOLC,IAAAA,IAAI,EAAEd,WAAW,CAAC,MAAOQ,IAAP,IAAgB;AAAE;AAClC,aAAOH,IAAI,CAACK,SAAL,CAAeK,aAAf,CAA6BP,IAA7B,CAAP;AACD,KAFgB,CAPZ;AAWLQ,IAAAA,IAAI,EAAEhB,WAAW,CAAC,YAAY;AAAE;AAC9B,aAAOK,IAAI,CAACK,SAAL,CAAeO,QAAf,EAAP;AACD,KAFgB,CAXZ;AAeLC,IAAAA,EAAE,EAAElB,WAAW,CAAC,MAAOQ,IAAP,IAAgB;AAAE;AAChC,aAAOH,IAAI,CAACK,SAAL,CAAeS,SAAf,CAAyBX,IAAzB,CAAP;AACD,KAFc,CAfV;AAmBLY,IAAAA,MAAM,EAAEpB,WAAW,CAAC,OAAOqB,OAAP,EAAgBC,OAAhB,KAA4B;AAC9C,YAAMlB,GAAG,GAAG,MAAMC,IAAI,CAACK,SAAL,CAAea,SAAf,CAAyBF,OAAzB,EAAkCC,OAAlC,CAAlB;AAEA,aAAO;AACLE,QAAAA,GAAG,EAAEH,OADA;AAELI,QAAAA,GAAG,EAAErB,GAAG,CAACI,IAFJ;AAGLkB,QAAAA,EAAE,EAAEtB,GAAG,CAACsB,EAHH;AAILC,QAAAA,SAAS,EAAE;AAJN,OAAP;AAMD,KATkB,CAnBd;AA8BLC,IAAAA,MAAM,EAAE5B,WAAW,CAAC,OAAOQ,IAAP,EAAaqB,GAAb,EAAkBC,QAAlB,KAA+B;AAAE;AACnD,aAAOzB,IAAI,CAACK,SAAL,CAAeqB,SAAf,CAAyBvB,IAAzB,EAA+BqB,GAA/B,EAAoCC,QAApC,CAAP;AACD,KAFkB,CA9Bd;AAkCLE,IAAAA,MAAM,EAAEhC,WAAW,CAAC,OAAOQ,IAAP,EAAasB,QAAb,KAA0B;AAAE;AAC9C,aAAOzB,IAAI,CAACK,SAAL,CAAeuB,SAAf,CAAyBzB,IAAzB,EAA+BsB,QAA/B,CAAP;AACD,KAFkB;AAlCd,GAAP;AAsCD,CAvCD","sourcesContent":["'use strict'\n\n// See https://github.com/ipfs/specs/tree/master/keystore\n\nconst callbackify = require('callbackify')\n\nmodule.exports = function key (self) {\n  return {\n    gen: callbackify.variadic(async (name, opts) => { // eslint-disable-line require-await\n      opts = opts || {}\n\n      return self._keychain.createKey(name, opts.type, opts.size)\n    }),\n\n    info: callbackify(async (name) => { // eslint-disable-line require-await\n      return self._keychain.findKeyByName(name)\n    }),\n\n    list: callbackify(async () => { // eslint-disable-line require-await\n      return self._keychain.listKeys()\n    }),\n\n    rm: callbackify(async (name) => { // eslint-disable-line require-await\n      return self._keychain.removeKey(name)\n    }),\n\n    rename: callbackify(async (oldName, newName) => {\n      const key = await self._keychain.renameKey(oldName, newName)\n\n      return {\n        was: oldName,\n        now: key.name,\n        id: key.id,\n        overwrite: false\n      }\n    }),\n\n    import: callbackify(async (name, pem, password) => { // eslint-disable-line require-await\n      return self._keychain.importKey(name, pem, password)\n    }),\n\n    export: callbackify(async (name, password) => { // eslint-disable-line require-await\n      return self._keychain.exportKey(name, password)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
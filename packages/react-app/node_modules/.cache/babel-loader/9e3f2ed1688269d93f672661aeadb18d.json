{"ast":null,"code":"\"use strict\";\n\nvar Log = require('ipfs-log');\n\nvar IFRAME_STORE_VERSION = '0.0.3';\nvar RENDEZVOUS_DISABLE = !(!process.env.RENDEZVOUS_DISABLE || ['0', 'f', 'false', 'no', 'off'].includes(process.env.RENDEZVOUS_DISABLE.toLowerCase()));\nmodule.exports = {\n  address_server_url: process.env.ADDRESS_SERVER_URL || 'https://beta.3box.io/address-server',\n  pinning_node: process.env.PINNING_NODE || '/dnsaddr/ipfs.3box.io/tcp/443/wss/ipfs/QmZvxEpiVNjmNbEKyQGvFzAY1BwmGuuvdUTmcTstQPhyVC',\n  pinning_room: process.env.PINNING_ROOM || '3box-pinning',\n  iframe_store_version: process.env.IFRAME_STORE_VERSION || IFRAME_STORE_VERSION,\n  iframe_store_url: process.env.IFRAME_STORE_URL || \"https://iframe.3box.io/\".concat(IFRAME_STORE_VERSION, \"/iframe.html\"),\n  ipfs_options: {\n    preload: {\n      enabled: false\n    },\n    config: {\n      Bootstrap: [],\n      Addresses: {\n        Swarm: RENDEZVOUS_DISABLE ? [] : [process.env.RENDEZVOUS_ADDRESS || '/dns4/p2p.3box.io/tcp/9090/wss/p2p-websocket-star/']\n      }\n    }\n  },\n  orbitdb_options: {\n    syncLocal: true,\n    sortFn: Log.Sorting.SortByEntryHash // this option is required now but will likely not be in the future.\n\n  },\n  graphql_server_url: process.env.GRAPHQL_SERVER_URL || 'https://api.3box.io/graph/',\n  profile_server_url: process.env.PROFILE_SERVER_URL || 'https://ipfs.3box.io',\n  muport_ipfs_host: process.env.MUPORT_IPFS_HOST || 'ipfs.infura.io',\n  muport_ipfs_port: process.env.MUPORT_IPFS_PORT || 5001,\n  muport_ipfs_protocol: process.env.MUPORT_IPFS_PROTOCOL || 'https'\n};","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/3box/lib/config.js"],"names":["Log","require","IFRAME_STORE_VERSION","RENDEZVOUS_DISABLE","process","env","includes","toLowerCase","module","exports","address_server_url","ADDRESS_SERVER_URL","pinning_node","PINNING_NODE","pinning_room","PINNING_ROOM","iframe_store_version","iframe_store_url","IFRAME_STORE_URL","concat","ipfs_options","preload","enabled","config","Bootstrap","Addresses","Swarm","RENDEZVOUS_ADDRESS","orbitdb_options","syncLocal","sortFn","Sorting","SortByEntryHash","graphql_server_url","GRAPHQL_SERVER_URL","profile_server_url","PROFILE_SERVER_URL","muport_ipfs_host","MUPORT_IPFS_HOST","muport_ipfs_port","MUPORT_IPFS_PORT","muport_ipfs_protocol","MUPORT_IPFS_PROTOCOL"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,UAAD,CAAjB;;AAEA,IAAIC,oBAAoB,GAAG,OAA3B;AACA,IAAIC,kBAAkB,GAAG,EAAE,CAACC,OAAO,CAACC,GAAR,CAAYF,kBAAb,IAAmC,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,EAAoB,IAApB,EAA0B,KAA1B,EAAiCG,QAAjC,CAA0CF,OAAO,CAACC,GAAR,CAAYF,kBAAZ,CAA+BI,WAA/B,EAA1C,CAArC,CAAzB;AACAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,kBAAkB,EAAEN,OAAO,CAACC,GAAR,CAAYM,kBAAZ,IAAkC,qCADvC;AAEfC,EAAAA,YAAY,EAAER,OAAO,CAACC,GAAR,CAAYQ,YAAZ,IAA4B,uFAF3B;AAGfC,EAAAA,YAAY,EAAEV,OAAO,CAACC,GAAR,CAAYU,YAAZ,IAA4B,cAH3B;AAIfC,EAAAA,oBAAoB,EAAEZ,OAAO,CAACC,GAAR,CAAYH,oBAAZ,IAAoCA,oBAJ3C;AAKfe,EAAAA,gBAAgB,EAAEb,OAAO,CAACC,GAAR,CAAYa,gBAAZ,IAAgC,0BAA0BC,MAA1B,CAAiCjB,oBAAjC,EAAuD,cAAvD,CALnC;AAMfkB,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AADF,KADG;AAIZC,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAEvB,kBAAkB,GAAG,EAAH,GAAQ,CAACC,OAAO,CAACC,GAAR,CAAYsB,kBAAZ,IAAkC,oDAAnC;AADxB;AAFL;AAJI,GANC;AAiBfC,EAAAA,eAAe,EAAE;AACfC,IAAAA,SAAS,EAAE,IADI;AAEfC,IAAAA,MAAM,EAAE9B,GAAG,CAAC+B,OAAJ,CAAYC,eAFL,CAEqB;;AAFrB,GAjBF;AAsBfC,EAAAA,kBAAkB,EAAE7B,OAAO,CAACC,GAAR,CAAY6B,kBAAZ,IAAkC,4BAtBvC;AAuBfC,EAAAA,kBAAkB,EAAE/B,OAAO,CAACC,GAAR,CAAY+B,kBAAZ,IAAkC,sBAvBvC;AAwBfC,EAAAA,gBAAgB,EAAEjC,OAAO,CAACC,GAAR,CAAYiC,gBAAZ,IAAgC,gBAxBnC;AAyBfC,EAAAA,gBAAgB,EAAEnC,OAAO,CAACC,GAAR,CAAYmC,gBAAZ,IAAgC,IAzBnC;AA0BfC,EAAAA,oBAAoB,EAAErC,OAAO,CAACC,GAAR,CAAYqC,oBAAZ,IAAoC;AA1B3C,CAAjB","sourcesContent":["\"use strict\";\n\nvar Log = require('ipfs-log');\n\nvar IFRAME_STORE_VERSION = '0.0.3';\nvar RENDEZVOUS_DISABLE = !(!process.env.RENDEZVOUS_DISABLE || ['0', 'f', 'false', 'no', 'off'].includes(process.env.RENDEZVOUS_DISABLE.toLowerCase()));\nmodule.exports = {\n  address_server_url: process.env.ADDRESS_SERVER_URL || 'https://beta.3box.io/address-server',\n  pinning_node: process.env.PINNING_NODE || '/dnsaddr/ipfs.3box.io/tcp/443/wss/ipfs/QmZvxEpiVNjmNbEKyQGvFzAY1BwmGuuvdUTmcTstQPhyVC',\n  pinning_room: process.env.PINNING_ROOM || '3box-pinning',\n  iframe_store_version: process.env.IFRAME_STORE_VERSION || IFRAME_STORE_VERSION,\n  iframe_store_url: process.env.IFRAME_STORE_URL || \"https://iframe.3box.io/\".concat(IFRAME_STORE_VERSION, \"/iframe.html\"),\n  ipfs_options: {\n    preload: {\n      enabled: false\n    },\n    config: {\n      Bootstrap: [],\n      Addresses: {\n        Swarm: RENDEZVOUS_DISABLE ? [] : [process.env.RENDEZVOUS_ADDRESS || '/dns4/p2p.3box.io/tcp/9090/wss/p2p-websocket-star/']\n      }\n    }\n  },\n  orbitdb_options: {\n    syncLocal: true,\n    sortFn: Log.Sorting.SortByEntryHash // this option is required now but will likely not be in the future.\n\n  },\n  graphql_server_url: process.env.GRAPHQL_SERVER_URL || 'https://api.3box.io/graph/',\n  profile_server_url: process.env.PROFILE_SERVER_URL || 'https://ipfs.3box.io',\n  muport_ipfs_host: process.env.MUPORT_IPFS_HOST || 'ipfs.infura.io',\n  muport_ipfs_port: process.env.MUPORT_IPFS_PORT || 5001,\n  muport_ipfs_protocol: process.env.MUPORT_IPFS_PROTOCOL || 'https'\n};"]},"metadata":{},"sourceType":"script"}
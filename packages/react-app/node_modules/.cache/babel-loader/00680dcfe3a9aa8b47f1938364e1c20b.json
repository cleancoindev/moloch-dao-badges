{"ast":null,"code":"'use strict';\n\nconst UnixFS = require('ipfs-unixfs');\n\nconst {\n  DAGNode\n} = require('ipld-dag-pb');\n\nconst mc = require('multicodec');\n\nconst mh = require('multihashes');\n\nconst createNode = async (context, type, options) => {\n  const format = mc[options.format.toUpperCase().replace(/-/g, '_')];\n  const hashAlg = mh.names[options.hashAlg];\n  const node = new DAGNode(new UnixFS(type).marshal());\n  const cid = await context.ipld.put(node, format, {\n    cidVersion: options.cidVersion,\n    hashAlg\n  });\n  return {\n    cid,\n    node\n  };\n};\n\nmodule.exports = createNode;","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/node_modules/ipfs-mfs/src/core/utils/create-node.js"],"names":["UnixFS","require","DAGNode","mc","mh","createNode","context","type","options","format","toUpperCase","replace","hashAlg","names","node","marshal","cid","ipld","put","cidVersion","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AACA,MAAM;AACJC,EAAAA;AADI,IAEFD,OAAO,CAAC,aAAD,CAFX;;AAGA,MAAME,EAAE,GAAGF,OAAO,CAAC,YAAD,CAAlB;;AACA,MAAMG,EAAE,GAAGH,OAAO,CAAC,aAAD,CAAlB;;AAEA,MAAMI,UAAU,GAAG,OAAOC,OAAP,EAAgBC,IAAhB,EAAsBC,OAAtB,KAAkC;AACnD,QAAMC,MAAM,GAAGN,EAAE,CAACK,OAAO,CAACC,MAAR,CAAeC,WAAf,GAA6BC,OAA7B,CAAqC,IAArC,EAA2C,GAA3C,CAAD,CAAjB;AACA,QAAMC,OAAO,GAAGR,EAAE,CAACS,KAAH,CAASL,OAAO,CAACI,OAAjB,CAAhB;AAEA,QAAME,IAAI,GAAG,IAAIZ,OAAJ,CAAY,IAAIF,MAAJ,CAAWO,IAAX,EAAiBQ,OAAjB,EAAZ,CAAb;AACA,QAAMC,GAAG,GAAG,MAAMV,OAAO,CAACW,IAAR,CAAaC,GAAb,CAAiBJ,IAAjB,EAAuBL,MAAvB,EAA+B;AAC/CU,IAAAA,UAAU,EAAEX,OAAO,CAACW,UAD2B;AAE/CP,IAAAA;AAF+C,GAA/B,CAAlB;AAKA,SAAO;AACLI,IAAAA,GADK;AAELF,IAAAA;AAFK,GAAP;AAID,CAdD;;AAgBAM,MAAM,CAACC,OAAP,GAAiBhB,UAAjB","sourcesContent":["'use strict'\n\nconst UnixFS = require('ipfs-unixfs')\nconst {\n  DAGNode\n} = require('ipld-dag-pb')\nconst mc = require('multicodec')\nconst mh = require('multihashes')\n\nconst createNode = async (context, type, options) => {\n  const format = mc[options.format.toUpperCase().replace(/-/g, '_')]\n  const hashAlg = mh.names[options.hashAlg]\n\n  const node = new DAGNode(new UnixFS(type).marshal())\n  const cid = await context.ipld.put(node, format, {\n    cidVersion: options.cidVersion,\n    hashAlg\n  })\n\n  return {\n    cid,\n    node\n  }\n}\n\nmodule.exports = createNode\n"]},"metadata":{},"sourceType":"script"}
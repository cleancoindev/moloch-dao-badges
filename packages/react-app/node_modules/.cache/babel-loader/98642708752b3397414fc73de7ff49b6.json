{"ast":null,"code":"var _jsxFileName = \"/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/packages/react-app/src/components/badges/BadgeList.js\";\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_BADGES } from \"../../utils/Queries\";\nimport { hydrateBadgeData } from \"../../utils/Helpers\";\nimport BadgeRegistry from \"../../assets/data/badges.json\";\nimport { Flex, Heading, Text } from \"rebass\";\nimport BadgeItem from \"./BadgeItem\";\n\nconst BadgeList = ({\n  playerAddr\n}) => {\n  const [badges, setBadges] = React.useState([]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_BADGES, {\n    variables: {\n      addr: `${playerAddr}`\n    }\n  }); // console.log(loading, error, data);\n\n  useEffect(() => {\n    if (!loading && !error && data) {\n      console.log({\n        data: data\n      });\n      console.log(BadgeRegistry);\n      const hydratedBadgeData = hydrateBadgeData(BadgeRegistry, data.badges);\n      console.log(\"hydratedBadgeData\", hydratedBadgeData);\n      setBadges(hydratedBadgeData);\n    }\n  }, [loading, error, data]);\n\n  const renderBadges = () => {\n    console.log(BadgeRegistry);\n    return badges.map((badge, idx) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        fontSize: 5,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, badge.title), /*#__PURE__*/React.createElement(Text, {\n        fontSize: 3,\n        fontWeight: \"bold\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, badge.description), renderBadgeItems(badge));\n    }); // Object.entries(badges).map((key, val) => {\n    //   const badgeSet = BadgeRegistry.badges.find(\n    //     (badge) => badge.title === key\n    //   );\n    //   return badgeSet.files.map((badge, idx) => (\n    //     <div>\n    //       {val > badgeSet.threshHolds[idx] && (\n    //         <div>\n    //           <img alt=\"\" src={badgeSet.files[idx]} />\n    //           val\n    //         </div>\n    //       )}\n    //     </div>\n    //   ));\n    // });\n  };\n\n  const renderBadgeItems = badge => {\n    return badge.thresholds.map((badge, idx) => {\n      return /*#__PURE__*/React.createElement(BadgeItem, {\n        badge: badge,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 14\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  }, badges.length && renderBadges());\n};\n\nexport default BadgeList;","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/packages/react-app/src/components/badges/BadgeList.js"],"names":["React","useEffect","useQuery","GET_BADGES","hydrateBadgeData","BadgeRegistry","Flex","Heading","Text","BadgeItem","BadgeList","playerAddr","badges","setBadges","useState","loading","error","data","variables","addr","console","log","hydratedBadgeData","renderBadges","map","badge","idx","title","description","renderBadgeItems","thresholds","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,IAAxB,QAAoC,QAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,KAAK,CAACc,QAAN,CAAe,EAAf,CAA5B;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bf,QAAQ,CAACC,UAAD,EAAa;AACpDe,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAG,GAAER,UAAW;AADX;AADyC,GAAb,CAAzC,CAHoC,CAQpC;;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACc,OAAD,IAAY,CAACC,KAAb,IAAsBC,IAA1B,EAAgC;AAC9BG,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,QAAAA,IAAI,EAAEA;AAAR,OAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYhB,aAAZ;AAEA,YAAMiB,iBAAiB,GAAGlB,gBAAgB,CAACC,aAAD,EAAgBY,IAAI,CAACL,MAArB,CAA1C;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCC,iBAAjC;AAEAT,MAAAA,SAAS,CAACS,iBAAD,CAAT;AACD;AACF,GAVQ,EAUN,CAACP,OAAD,EAAUC,KAAV,EAAiBC,IAAjB,CAVM,CAAT;;AAYA,QAAMM,YAAY,GAAG,MAAM;AACzBH,IAAAA,OAAO,CAACC,GAAR,CAAYhB,aAAZ;AAEA,WAAOO,MAAM,CAACY,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAChC,0BACE;AAAK,QAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAS,QAAA,QAAQ,EAAE,CAAnB;AAAsB,QAAA,KAAK,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACE,KADT,CADF,eAIE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,CAAhB;AAAmB,QAAA,UAAU,EAAC,MAA9B;AAAqC,QAAA,KAAK,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,KAAK,CAACG,WADT,CAJF,EAOGC,gBAAgB,CAACJ,KAAD,CAPnB,CADF;AAWD,KAZM,CAAP,CAHyB,CAgBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA/BD;;AAiCA,QAAMI,gBAAgB,GAAIJ,KAAD,IAAW;AAClC,WAAOA,KAAK,CAACK,UAAN,CAAiBN,GAAjB,CAAqB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC1C,0BAAO,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAED,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,MAAM,CAACmB,MAAP,IAAiBR,YAAY,EAAnC,CAAP;AACD,CA9DD;;AAgEA,eAAeb,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { GET_BADGES } from \"../../utils/Queries\";\nimport { hydrateBadgeData } from \"../../utils/Helpers\";\n\nimport BadgeRegistry from \"../../assets/data/badges.json\";\nimport { Flex, Heading, Text } from \"rebass\";\nimport BadgeItem from \"./BadgeItem\";\n\nconst BadgeList = ({ playerAddr }) => {\n  const [badges, setBadges] = React.useState([]);\n\n  const { loading, error, data } = useQuery(GET_BADGES, {\n    variables: {\n      addr: `${playerAddr}`,\n    },\n  });\n  // console.log(loading, error, data);\n\n  useEffect(() => {\n    if (!loading && !error && data) {\n      console.log({ data: data });\n      console.log(BadgeRegistry);\n\n      const hydratedBadgeData = hydrateBadgeData(BadgeRegistry, data.badges);\n      console.log(\"hydratedBadgeData\", hydratedBadgeData);\n\n      setBadges(hydratedBadgeData);\n    }\n  }, [loading, error, data]);\n\n  const renderBadges = () => {\n    console.log(BadgeRegistry);\n\n    return badges.map((badge, idx) => {\n      return (\n        <div key={idx}>\n          <Heading fontSize={5} color=\"primary\">\n            {badge.title}\n          </Heading>\n          <Text fontSize={3} fontWeight=\"bold\" color=\"primary\">\n            {badge.description}\n          </Text>\n          {renderBadgeItems(badge)}\n        </div>\n      );\n    });\n    // Object.entries(badges).map((key, val) => {\n    //   const badgeSet = BadgeRegistry.badges.find(\n    //     (badge) => badge.title === key\n    //   );\n    //   return badgeSet.files.map((badge, idx) => (\n    //     <div>\n    //       {val > badgeSet.threshHolds[idx] && (\n    //         <div>\n    //           <img alt=\"\" src={badgeSet.files[idx]} />\n    //           val\n    //         </div>\n    //       )}\n    //     </div>\n    //   ));\n    // });\n  };\n\n  const renderBadgeItems = (badge) => {\n    return badge.thresholds.map((badge, idx) => {\n      return <BadgeItem badge={badge} />;\n    });\n  };\n\n  return <div>{badges.length && renderBadges()}</div>;\n};\n\nexport default BadgeList;\n"]},"metadata":{},"sourceType":"module"}
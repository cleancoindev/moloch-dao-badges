{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _didResolver = require(\"did-resolver\");\n\nvar _nodeFetch = _interopRequireDefault(require(\"node-fetch\"));\n\nvar INFURA = 'https://ipfs.infura.io/ipfs/';\n\nfunction register(ipfs) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  function resolve(_x, _x2) {\n    return _resolve.apply(this, arguments);\n  }\n\n  function _resolve() {\n    _resolve = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(did, parsed) {\n      var doc;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetchMuPortDoc(ipfs, parsed.id);\n\n            case 2:\n              doc = _context.sent;\n              return _context.abrupt(\"return\", wrapDocument(did, doc));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _resolve.apply(this, arguments);\n  }\n\n  (0, _didResolver.registerMethod)('muport', resolve);\n}\n\nfunction fetchMuPortDoc(_x3, _x4) {\n  return _fetchMuPortDoc.apply(this, arguments);\n}\n\nfunction _fetchMuPortDoc() {\n  _fetchMuPortDoc = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(ipfs, ipfsHash) {\n    var doc;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!ipfs) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.t1 = JSON;\n            _context2.next = 5;\n            return ipfs.cat(ipfsHash);\n\n          case 5:\n            _context2.t2 = _context2.sent;\n            _context2.t0 = _context2.t1.parse.call(_context2.t1, _context2.t2);\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.next = 11;\n            return httpFetch(ipfsHash);\n\n          case 11:\n            _context2.t0 = _context2.sent;\n\n          case 12:\n            doc = _context2.t0;\n            _context2.next = 17;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t3 = _context2[\"catch\"](0);\n\n          case 17:\n            if (!(!doc || doc.version !== 1 || !doc.signingKey || !doc.managementKey || !doc.asymEncryptionKey)) {\n              _context2.next = 27;\n              break;\n            }\n\n            _context2.prev = 18;\n\n            if (!ipfs) {\n              _context2.next = 22;\n              break;\n            }\n\n            _context2.next = 22;\n            return ipfs.pin.rm(ipfsHash);\n\n          case 22:\n            _context2.next = 26;\n            break;\n\n          case 24:\n            _context2.prev = 24;\n            _context2.t4 = _context2[\"catch\"](18);\n\n          case 26:\n            throw new Error('Invalid muport did');\n\n          case 27:\n            return _context2.abrupt(\"return\", doc);\n\n          case 28:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 15], [18, 24]]);\n  }));\n  return _fetchMuPortDoc.apply(this, arguments);\n}\n\nfunction httpFetch(_x5) {\n  return _httpFetch.apply(this, arguments);\n}\n\nfunction _httpFetch() {\n  _httpFetch = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(cid) {\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return (0, _nodeFetch[\"default\"])(INFURA + cid);\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent.json());\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _httpFetch.apply(this, arguments);\n}\n\nfunction wrapDocument(did, muportDocument) {\n  var doc = {\n    \"@context\": \"https://w3id.org/did/v1\",\n    \"id\": did,\n    \"publicKey\": [{\n      \"id\": did + \"#signingKey\",\n      \"type\": \"Secp256k1VerificationKey2018\",\n      \"owner\": did,\n      \"publicKeyHex\": muportDocument.signingKey\n    }, {\n      \"id\": did + \"#managementKey\",\n      \"type\": \"Secp256k1VerificationKey2018\",\n      \"owner\": did\n    }, {\n      \"id\": did + \"#encryptionKey\",\n      \"type\": \"Curve25519EncryptionPublicKey\",\n      \"owner\": did,\n      \"publicKeyBase64\": muportDocument.asymEncryptionKey\n    }],\n    \"authentication\": [{\n      \"type\": \"Secp256k1SignatureAuthentication2018\",\n      \"publicKey\": did + \"#signingKey\"\n    }],\n    \"muportData\": {}\n  };\n\n  if (muportDocument.managementKey.length === 42) {\n    doc.publicKey[1].ethereumAddress = muportDocument.managementKey;\n  } else {\n    doc.publicKey[1].publicKeyHex = muportDocument.managementKey;\n  }\n\n  if (muportDocument.publicProfile) doc.uportProfile = muportDocument.publicProfile;\n  if (muportDocument.symEncryptedData) doc.muportData.symEncryptedData = muportDocument.symEncryptedData;\n  if (muportDocument.recoveryNetwork) doc.muportData.recoveryNetwork = muportDocument.recoveryNetwork;\n  return doc;\n}\n\nmodule.exports = register;","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/muport-did-resolver/lib/register.js"],"names":["_interopRequireDefault","require","_regenerator","_asyncToGenerator2","_didResolver","_nodeFetch","INFURA","register","ipfs","opts","arguments","length","undefined","resolve","_x","_x2","_resolve","apply","mark","_callee","did","parsed","doc","wrap","_callee$","_context","prev","next","fetchMuPortDoc","id","sent","abrupt","wrapDocument","stop","registerMethod","_x3","_x4","_fetchMuPortDoc","_callee2","ipfsHash","_callee2$","_context2","t1","JSON","cat","t2","t0","parse","call","httpFetch","t3","version","signingKey","managementKey","asymEncryptionKey","pin","rm","t4","Error","_x5","_httpFetch","_callee3","cid","_callee3$","_context3","json","muportDocument","publicKey","ethereumAddress","publicKeyHex","publicProfile","uportProfile","symEncryptedData","muportData","recoveryNetwork","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _didResolver = require(\"did-resolver\");\n\nvar _nodeFetch = _interopRequireDefault(require(\"node-fetch\"));\n\nvar INFURA = 'https://ipfs.infura.io/ipfs/';\n\nfunction register(ipfs) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  function resolve(_x, _x2) {\n    return _resolve.apply(this, arguments);\n  }\n\n  function _resolve() {\n    _resolve = (0, _asyncToGenerator2[\"default\"])(\n    /*#__PURE__*/\n    _regenerator[\"default\"].mark(function _callee(did, parsed) {\n      var doc;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetchMuPortDoc(ipfs, parsed.id);\n\n            case 2:\n              doc = _context.sent;\n              return _context.abrupt(\"return\", wrapDocument(did, doc));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _resolve.apply(this, arguments);\n  }\n\n  (0, _didResolver.registerMethod)('muport', resolve);\n}\n\nfunction fetchMuPortDoc(_x3, _x4) {\n  return _fetchMuPortDoc.apply(this, arguments);\n}\n\nfunction _fetchMuPortDoc() {\n  _fetchMuPortDoc = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee2(ipfs, ipfsHash) {\n    var doc;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!ipfs) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.t1 = JSON;\n            _context2.next = 5;\n            return ipfs.cat(ipfsHash);\n\n          case 5:\n            _context2.t2 = _context2.sent;\n            _context2.t0 = _context2.t1.parse.call(_context2.t1, _context2.t2);\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.next = 11;\n            return httpFetch(ipfsHash);\n\n          case 11:\n            _context2.t0 = _context2.sent;\n\n          case 12:\n            doc = _context2.t0;\n            _context2.next = 17;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t3 = _context2[\"catch\"](0);\n\n          case 17:\n            if (!(!doc || doc.version !== 1 || !doc.signingKey || !doc.managementKey || !doc.asymEncryptionKey)) {\n              _context2.next = 27;\n              break;\n            }\n\n            _context2.prev = 18;\n\n            if (!ipfs) {\n              _context2.next = 22;\n              break;\n            }\n\n            _context2.next = 22;\n            return ipfs.pin.rm(ipfsHash);\n\n          case 22:\n            _context2.next = 26;\n            break;\n\n          case 24:\n            _context2.prev = 24;\n            _context2.t4 = _context2[\"catch\"](18);\n\n          case 26:\n            throw new Error('Invalid muport did');\n\n          case 27:\n            return _context2.abrupt(\"return\", doc);\n\n          case 28:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 15], [18, 24]]);\n  }));\n  return _fetchMuPortDoc.apply(this, arguments);\n}\n\nfunction httpFetch(_x5) {\n  return _httpFetch.apply(this, arguments);\n}\n\nfunction _httpFetch() {\n  _httpFetch = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee3(cid) {\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return (0, _nodeFetch[\"default\"])(INFURA + cid);\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent.json());\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _httpFetch.apply(this, arguments);\n}\n\nfunction wrapDocument(did, muportDocument) {\n  var doc = {\n    \"@context\": \"https://w3id.org/did/v1\",\n    \"id\": did,\n    \"publicKey\": [{\n      \"id\": did + \"#signingKey\",\n      \"type\": \"Secp256k1VerificationKey2018\",\n      \"owner\": did,\n      \"publicKeyHex\": muportDocument.signingKey\n    }, {\n      \"id\": did + \"#managementKey\",\n      \"type\": \"Secp256k1VerificationKey2018\",\n      \"owner\": did\n    }, {\n      \"id\": did + \"#encryptionKey\",\n      \"type\": \"Curve25519EncryptionPublicKey\",\n      \"owner\": did,\n      \"publicKeyBase64\": muportDocument.asymEncryptionKey\n    }],\n    \"authentication\": [{\n      \"type\": \"Secp256k1SignatureAuthentication2018\",\n      \"publicKey\": did + \"#signingKey\"\n    }],\n    \"muportData\": {}\n  };\n\n  if (muportDocument.managementKey.length === 42) {\n    doc.publicKey[1].ethereumAddress = muportDocument.managementKey;\n  } else {\n    doc.publicKey[1].publicKeyHex = muportDocument.managementKey;\n  }\n\n  if (muportDocument.publicProfile) doc.uportProfile = muportDocument.publicProfile;\n  if (muportDocument.symEncryptedData) doc.muportData.symEncryptedData = muportDocument.symEncryptedData;\n  if (muportDocument.recoveryNetwork) doc.muportData.recoveryNetwork = muportDocument.recoveryNetwork;\n  return doc;\n}\n\nmodule.exports = register;"]},"metadata":{},"sourceType":"script"}
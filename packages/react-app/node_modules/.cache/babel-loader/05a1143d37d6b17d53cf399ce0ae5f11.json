{"ast":null,"code":"'use strict';\n\nconst whole = /^((\\d+(\\.\\d+)*)(ns|ms|us|µs|m|s|h))+$/;\nconst pieces = /((\\d+(\\.\\d+)*)(ns|ms|us|µs|m|s|h))/g;\nconst measure = /(ns|ms|us|µs|m|s|h)/g;\nconst multipliers = {\n  ns: 1e-6,\n  us: 0.001,\n  µs: 0.001,\n  ms: 1,\n  s: 1000,\n  m: 60000,\n  h: 3.6e+6\n};\n\nfunction analyse(time) {\n  let unit = time.match(measure)[0];\n  time = time.substring(0, time.length - unit.length);\n  return parseFloat(time) * multipliers[unit];\n}\n\nmodule.exports = function (time) {\n  if (typeof time !== 'string') {\n    throw new Error('the first argument must be a string');\n  }\n\n  if (!whole.test(time)) {\n    throw new Error('invalid time');\n  }\n\n  return time.match(pieces).reduce((sum, currentVal) => {\n    return sum + analyse(currentVal);\n  }, 0);\n};","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/human-to-milliseconds/src/index.js"],"names":["whole","pieces","measure","multipliers","ns","us","µs","ms","s","m","h","analyse","time","unit","match","substring","length","parseFloat","module","exports","Error","test","reduce","sum","currentVal"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAG,uCAAd;AACA,MAAMC,MAAM,GAAG,qCAAf;AACA,MAAMC,OAAO,GAAG,sBAAhB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,EAAE,EAAE,IADc;AAElBC,EAAAA,EAAE,EAAE,KAFc;AAGlBC,EAAAA,EAAE,EAAE,KAHc;AAIlBC,EAAAA,EAAE,EAAE,CAJc;AAKlBC,EAAAA,CAAC,EAAE,IALe;AAMlBC,EAAAA,CAAC,EAAE,KANe;AAOlBC,EAAAA,CAAC,EAAE;AAPe,CAApB;;AAUA,SAASC,OAAT,CAAkBC,IAAlB,EAAwB;AACtB,MAAIC,IAAI,GAAGD,IAAI,CAACE,KAAL,CAAWZ,OAAX,EAAoB,CAApB,CAAX;AACAU,EAAAA,IAAI,GAAGA,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBH,IAAI,CAACI,MAAL,GAAcH,IAAI,CAACG,MAArC,CAAP;AAEA,SAAOC,UAAU,CAACL,IAAD,CAAV,GAAmBT,WAAW,CAACU,IAAD,CAArC;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiB,UAAUP,IAAV,EAAgB;AAC/B,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIQ,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED,MAAI,CAACpB,KAAK,CAACqB,IAAN,CAAWT,IAAX,CAAL,EAAuB;AACrB,UAAM,IAAIQ,KAAJ,CAAU,cAAV,CAAN;AACD;;AAED,SAAOR,IAAI,CAACE,KAAL,CAAWb,MAAX,EAAmBqB,MAAnB,CAA0B,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACpD,WAAOD,GAAG,GAAGZ,OAAO,CAACa,UAAD,CAApB;AACD,GAFM,EAEJ,CAFI,CAAP;AAGD,CAZD","sourcesContent":["'use strict'\n\nconst whole = /^((\\d+(\\.\\d+)*)(ns|ms|us|µs|m|s|h))+$/\nconst pieces = /((\\d+(\\.\\d+)*)(ns|ms|us|µs|m|s|h))/g\nconst measure = /(ns|ms|us|µs|m|s|h)/g\n\nconst multipliers = {\n  ns: 1e-6,\n  us: 0.001,\n  µs: 0.001,\n  ms: 1,\n  s: 1000,\n  m: 60000,\n  h: 3.6e+6\n}\n\nfunction analyse (time) {\n  let unit = time.match(measure)[0]\n  time = time.substring(0, time.length - unit.length)\n\n  return parseFloat(time) * multipliers[unit]\n}\n\nmodule.exports = function (time) {\n  if (typeof time !== 'string') {\n    throw new Error('the first argument must be a string')\n  }\n\n  if (!whole.test(time)) {\n    throw new Error('invalid time')\n  }\n\n  return time.match(pieces).reduce((sum, currentVal) => {\n    return sum + analyse(currentVal)\n  }, 0)\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nconst all = require('async-iterator-all');\n\nmodule.exports = function (self) {\n  // can't use callbackify because if `data` is a pull stream\n  // it thinks we are passing a callback. This is why we can't have nice things.\n  return function add(data, options, callback) {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    const result = all(self._addAsyncIterator(data, options));\n\n    if (!callback) {\n      return result;\n    }\n\n    result.then(result => callback(null, result), callback);\n  };\n};","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/node_modules/ipfs/src/core/components/files-regular/add.js"],"names":["all","require","module","exports","self","add","data","options","callback","result","_addAsyncIterator","then"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/B;AACA;AACA,SAAO,SAASC,GAAT,CAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,EAAuC;AAC5C,QAAI,CAACA,QAAD,IAAa,OAAOD,OAAP,KAAmB,UAApC,EAAgD;AAC9CC,MAAAA,QAAQ,GAAGD,OAAX;AACAA,MAAAA,OAAO,GAAG,EAAV;AACD;;AAED,UAAME,MAAM,GAAGT,GAAG,CAACI,IAAI,CAACM,iBAAL,CAAuBJ,IAAvB,EAA6BC,OAA7B,CAAD,CAAlB;;AAEA,QAAI,CAACC,QAAL,EAAe;AACb,aAAOC,MAAP;AACD;;AAEDA,IAAAA,MAAM,CAACE,IAAP,CAAaF,MAAD,IAAYD,QAAQ,CAAC,IAAD,EAAOC,MAAP,CAAhC,EAAgDD,QAAhD;AACD,GAbD;AAcD,CAjBD","sourcesContent":["'use strict'\n\nconst all = require('async-iterator-all')\n\nmodule.exports = function (self) {\n  // can't use callbackify because if `data` is a pull stream\n  // it thinks we are passing a callback. This is why we can't have nice things.\n  return function add (data, options, callback) {\n    if (!callback && typeof options === 'function') {\n      callback = options\n      options = {}\n    }\n\n    const result = all(self._addAsyncIterator(data, options))\n\n    if (!callback) {\n      return result\n    }\n\n    result.then((result) => callback(null, result), callback)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
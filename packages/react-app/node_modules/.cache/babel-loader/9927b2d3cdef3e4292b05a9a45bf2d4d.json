{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeDID = normalizeDID;\nexports.decodeJWT = decodeJWT;\nexports.createJWT = createJWT;\nexports.verifyJWT = verifyJWT;\nexports.resolveAuthenticator = resolveAuthenticator;\nexports.default = exports.IAT_SKEW = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _VerifierAlgorithm = _interopRequireDefault(require(\"./VerifierAlgorithm\"));\n\nvar _SignerAlgorithm = _interopRequireDefault(require(\"./SignerAlgorithm\"));\n\nvar _base64url = _interopRequireDefault(require(\"base64url\"));\n\nvar _didResolver = _interopRequireDefault(require(\"did-resolver\"));\n\nvar SUPPORTED_PUBLIC_KEY_TYPES = {\n  ES256K: ['Secp256k1VerificationKey2018', 'Secp256k1SignatureVerificationKey2018', 'EcdsaPublicKeySecp256k1'],\n  'ES256K-R': ['Secp256k1VerificationKey2018', 'Secp256k1SignatureVerificationKey2018', 'EcdsaPublicKeySecp256k1'],\n  'Ed25519': ['ED25519SignatureVerification']\n};\nvar JOSE_HEADER = {\n  typ: 'JWT'\n};\nvar defaultAlg = 'ES256K';\n\nfunction encodeSection(data) {\n  return _base64url.default.encode(JSON.stringify(data));\n}\n\nvar IAT_SKEW = 300;\n/**  @module did-jwt/JWT */\n\nexports.IAT_SKEW = IAT_SKEW;\n\nfunction isMNID(id) {\n  return id.match(/^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$/);\n}\n\nfunction isDIDOrMNID(mnidOrDid) {\n  return mnidOrDid && (mnidOrDid.match(/^did:/) || isMNID(mnidOrDid));\n}\n\nfunction normalizeDID(mnidOrDid) {\n  if (mnidOrDid.match(/^did:/)) return mnidOrDid; // Backwards compatibility\n\n  if (isMNID(mnidOrDid)) return \"did:uport:\".concat(mnidOrDid);\n  throw new Error(\"Not a valid DID '\".concat(mnidOrDid, \"'\"));\n}\n/**\n*  Decodes a JWT and returns an object representing the payload\n*\n*  @example\n*  decodeJWT('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJpYXQiOjE1MjU5Mjc1MTcsImF1ZCI6ImRpZDp1cG9ydDoyb3NuZko0V3k3TEJBbTJuUEJYaXJlMVdmUW43NVJyVjZUcyIsImV4cCI6MTU1NzQ2MzQyMSwibmFtZSI6InVQb3J0IERldmVsb3BlciIsImlzcyI6ImRpZDp1cG9ydDoyb3NuZko0V3k3TEJBbTJuUEJYaXJlMVdmUW43NVJyVjZUcyJ9.R7owbvNZoL4ti5ec-Kpktb0datw9Y-FshHsF5R7cXuKaiGlQz1dcOOXbXTOb-wg7-30CDfchFERR6Yc8F61ymw')\n*\n*  @param    {String}            jwt                a JSON Web Token to verify\n*  @return   {Object}                               a JS object representing the decoded JWT\n*/\n\n\nfunction decodeJWT(jwt) {\n  if (!jwt) throw new Error('no JWT passed into decodeJWT');\n  var parts = jwt.match(/^([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)$/);\n\n  if (parts) {\n    return {\n      header: JSON.parse(_base64url.default.decode(parts[1])),\n      payload: JSON.parse(_base64url.default.decode(parts[2])),\n      signature: parts[3],\n      data: \"\".concat(parts[1], \".\").concat(parts[2])\n    };\n  }\n\n  throw new Error('Incorrect format JWT');\n}\n/**\n*  Creates a signed JWT given an address which becomes the issuer, a signer, and a payload for which the signature is over.\n*\n*  @example\n*  const signer = SimpleSigner(process.env.PRIVATE_KEY)\n*  createJWT({address: '5A8bRWU3F7j3REx3vkJ...', signer}, {key1: 'value', key2: ..., ... }).then(jwt => {\n*      ...\n*  })\n*\n*  @param    {Object}            payload            payload object\n*  @param    {Object}            [options]           an unsigned credential object\n*  @param    {String}            options.issuer      The DID of the issuer (signer) of JWT\n*  @param    {String}            options.alg         The JWT signing algorithm to use. Supports: [ES256K, ES256K-R, Ed25519], Defaults to: ES256K\n*  @param    {SimpleSigner}      options.signer      a signer, reference our SimpleSigner.js\n*  @return   {Promise<Object, Error>}               a promise which resolves with a signed JSON Web Token or rejects with an error\n*/\n\n\nfunction createJWT(_x, _x2) {\n  return _createJWT.apply(this, arguments);\n}\n/**\n*  Verifies given JWT. If the JWT is valid, the promise returns an object including the JWT, the payload of the JWT,\n*  and the did doc of the issuer of the JWT.\n*\n*  @example\n*  verifyJWT('did:uport:eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....', {audience: '5A8bRWU3F7j3REx3vkJ...', callbackUrl: 'https://...'}).then(obj => {\n*      const did = obj.did // DID of signer\n*      const payload = obj.payload\n*      const doc = obj.doc // DID Document of signer\n*      const jwt = obj.jwt\n*      const signerKeyId = obj.signerKeyId // ID of key in DID document that signed JWT\n*      ...\n*  })\n*\n*  @param    {String}            jwt                a JSON Web Token to verify\n*  @param    {Object}            [options]           an unsigned credential object\n*  @param    {Boolean}           options.auth        Require signer to be listed in the authentication section of the DID document (for Authentication purposes)\n*  @param    {String}            options.audience    DID of the recipient of the JWT\n*  @param    {String}            options.callbackUrl callback url in JWT\n*  @return   {Promise<Object, Error>}               a promise which resolves with a response object or rejects with an error\n*/\n\n\nfunction _createJWT() {\n  _createJWT = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(payload, _ref) {\n    var issuer, signer, alg, expiresIn, header, timestamps, signingInput, jwtSigner, signature;\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            issuer = _ref.issuer, signer = _ref.signer, alg = _ref.alg, expiresIn = _ref.expiresIn;\n\n            if (signer) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('No Signer functionality has been configured');\n\n          case 3:\n            if (issuer) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error('No issuing DID has been configured');\n\n          case 5:\n            header = (0, _objectSpread2.default)({}, JOSE_HEADER, {\n              alg: alg || defaultAlg\n            });\n            timestamps = {\n              iat: Math.floor(Date.now() / 1000)\n            };\n\n            if (!expiresIn) {\n              _context.next = 13;\n              break;\n            }\n\n            if (!(typeof expiresIn === 'number')) {\n              _context.next = 12;\n              break;\n            }\n\n            timestamps.exp = timestamps.iat + Math.floor(expiresIn);\n            _context.next = 13;\n            break;\n\n          case 12:\n            throw new Error('JWT expiresIn is not a number');\n\n          case 13:\n            signingInput = [encodeSection(header), encodeSection((0, _objectSpread2.default)({}, timestamps, payload, {\n              iss: issuer\n            }))].join('.');\n            jwtSigner = (0, _SignerAlgorithm.default)(header.alg);\n            _context.next = 17;\n            return jwtSigner(signingInput, signer);\n\n          case 17:\n            signature = _context.sent;\n            return _context.abrupt(\"return\", [signingInput, signature].join('.'));\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _createJWT.apply(this, arguments);\n}\n\nfunction verifyJWT(_x3) {\n  return _verifyJWT.apply(this, arguments);\n}\n/**\n* Resolves relevant public keys or other authenticating material used to verify signature from the DID document of provided DID\n*\n*  @example\n*  resolveAuthenticator('ES256K', 'did:uport:2nQtiQG6Cgm1GYTBaaKAgr76uY7iSexUkqX').then(obj => {\n*      const payload = obj.payload\n*      const profile = obj.profile\n*      const jwt = obj.jwt\n*      ...\n*  })\n*\n*  @param    {String}            alg                a JWT algorithm\n*  @param    {String}            did                a Decentralized IDentifier (DID) to lookup\n*  @param    {Boolean}           auth               Restrict public keys to ones specifically listed in the 'authentication' section of DID document\n*  @return   {Promise<Object, Error>}               a promise which resolves with a response object containing an array of authenticators or if non exist rejects with an error\n*/\n\n\nfunction _verifyJWT() {\n  _verifyJWT = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(jwt) {\n    var options,\n        aud,\n        _decodeJWT,\n        payload,\n        header,\n        signature,\n        data,\n        _ref2,\n        doc,\n        authenticators,\n        issuer,\n        signer,\n        now,\n        _args2 = arguments;\n\n    return _regenerator.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n            aud = options.audience ? normalizeDID(options.audience) : undefined;\n            _decodeJWT = decodeJWT(jwt), payload = _decodeJWT.payload, header = _decodeJWT.header, signature = _decodeJWT.signature, data = _decodeJWT.data;\n            _context2.next = 5;\n            return resolveAuthenticator(header.alg, payload.iss, options.auth);\n\n          case 5:\n            _ref2 = _context2.sent;\n            doc = _ref2.doc;\n            authenticators = _ref2.authenticators;\n            issuer = _ref2.issuer;\n            signer = (0, _VerifierAlgorithm.default)(header.alg)(data, signature, authenticators);\n            now = Math.floor(Date.now() / 1000);\n\n            if (!signer) {\n              _context2.next = 31;\n              break;\n            }\n\n            if (!(payload.iat && payload.iat > now + IAT_SKEW)) {\n              _context2.next = 14;\n              break;\n            }\n\n            throw new Error(\"JWT not valid yet (issued in the future): iat: \".concat(payload.iat, \" > now: \").concat(now));\n\n          case 14:\n            if (!(payload.exp && payload.exp <= now - IAT_SKEW)) {\n              _context2.next = 16;\n              break;\n            }\n\n            throw new Error(\"JWT has expired: exp: \".concat(payload.exp, \" < now: \").concat(now));\n\n          case 16:\n            if (!payload.aud) {\n              _context2.next = 28;\n              break;\n            }\n\n            if (!isDIDOrMNID(payload.aud)) {\n              _context2.next = 24;\n              break;\n            }\n\n            if (aud) {\n              _context2.next = 20;\n              break;\n            }\n\n            throw new Error('JWT audience is required but your app address has not been configured');\n\n          case 20:\n            if (!(aud !== normalizeDID(payload.aud))) {\n              _context2.next = 22;\n              break;\n            }\n\n            throw new Error(\"JWT audience does not match your DID: aud: \".concat(payload.aud, \" !== yours: \").concat(aud));\n\n          case 22:\n            _context2.next = 28;\n            break;\n\n          case 24:\n            if (options.callbackUrl) {\n              _context2.next = 26;\n              break;\n            }\n\n            throw new Error('JWT audience matching your callback url is required but one wasn\\'t passed in');\n\n          case 26:\n            if (!(payload.aud !== options.callbackUrl)) {\n              _context2.next = 28;\n              break;\n            }\n\n            throw new Error(\"JWT audience does not match the callback url: aud: \".concat(payload.aud, \" !== url: \").concat(options.callbackUrl));\n\n          case 28:\n            return _context2.abrupt(\"return\", {\n              payload: payload,\n              doc: doc,\n              issuer: issuer,\n              signer: signer,\n              jwt: jwt\n            });\n\n          case 31:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _verifyJWT.apply(this, arguments);\n}\n\nfunction resolveAuthenticator(_x4, _x5, _x6) {\n  return _resolveAuthenticator.apply(this, arguments);\n}\n\nfunction _resolveAuthenticator() {\n  _resolveAuthenticator = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(alg, mnidOrDid, auth) {\n    var types, issuer, doc, authenticationKeys, authenticators;\n    return _regenerator.default.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            types = SUPPORTED_PUBLIC_KEY_TYPES[alg];\n\n            if (!(!types || types.length === 0)) {\n              _context3.next = 3;\n              break;\n            }\n\n            throw new Error(\"No supported signature types for algorithm \".concat(alg));\n\n          case 3:\n            issuer = normalizeDID(mnidOrDid);\n            _context3.next = 6;\n            return (0, _didResolver.default)(issuer);\n\n          case 6:\n            doc = _context3.sent;\n\n            if (doc) {\n              _context3.next = 9;\n              break;\n            }\n\n            throw new Error(\"Unable to resolve DID document for \".concat(issuer));\n\n          case 9:\n            authenticationKeys = auth ? (doc.authentication || []).map(function (_ref3) {\n              var publicKey = _ref3.publicKey;\n              return publicKey;\n            }) : true;\n            authenticators = (doc.publicKey || []).filter(function (_ref4) {\n              var type = _ref4.type,\n                  id = _ref4.id;\n              return types.find(function (supported) {\n                return supported === type && (!auth || authenticationKeys.indexOf(id) >= 0);\n              });\n            });\n\n            if (!(auth && (!authenticators || authenticators.length === 0))) {\n              _context3.next = 13;\n              break;\n            }\n\n            throw new Error(\"DID document for \".concat(issuer, \" does not have public keys suitable for authenticationg user\"));\n\n          case 13:\n            if (!(!authenticators || authenticators.length === 0)) {\n              _context3.next = 15;\n              break;\n            }\n\n            throw new Error(\"DID document for \".concat(issuer, \" does not have public keys for \").concat(alg));\n\n          case 15:\n            return _context3.abrupt(\"return\", {\n              authenticators: authenticators,\n              issuer: issuer,\n              doc: doc\n            });\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n  return _resolveAuthenticator.apply(this, arguments);\n}\n\nvar _default = {\n  decodeJWT: decodeJWT,\n  createJWT: createJWT,\n  verifyJWT: verifyJWT,\n  resolveAuthenticator: resolveAuthenticator\n};\nexports.default = _default;","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/node_modules/did-jwt/lib/JWT.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","normalizeDID","decodeJWT","createJWT","verifyJWT","resolveAuthenticator","default","IAT_SKEW","_regenerator","_objectSpread2","_asyncToGenerator2","_VerifierAlgorithm","_SignerAlgorithm","_base64url","_didResolver","SUPPORTED_PUBLIC_KEY_TYPES","ES256K","JOSE_HEADER","typ","defaultAlg","encodeSection","data","encode","JSON","stringify","isMNID","id","match","isDIDOrMNID","mnidOrDid","concat","Error","jwt","parts","header","parse","decode","payload","signature","_x","_x2","_createJWT","apply","arguments","mark","_callee","_ref","issuer","signer","alg","expiresIn","timestamps","signingInput","jwtSigner","wrap","_callee$","_context","prev","next","iat","Math","floor","Date","now","exp","iss","join","sent","abrupt","stop","_x3","_verifyJWT","_callee2","options","aud","_decodeJWT","_ref2","doc","authenticators","_args2","_callee2$","_context2","length","undefined","audience","auth","callbackUrl","_x4","_x5","_x6","_resolveAuthenticator","_callee3","types","authenticationKeys","_callee3$","_context3","authentication","map","_ref3","publicKey","filter","_ref4","type","find","supported","indexOf","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeDID = normalizeDID;\nexports.decodeJWT = decodeJWT;\nexports.createJWT = createJWT;\nexports.verifyJWT = verifyJWT;\nexports.resolveAuthenticator = resolveAuthenticator;\nexports.default = exports.IAT_SKEW = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _VerifierAlgorithm = _interopRequireDefault(require(\"./VerifierAlgorithm\"));\n\nvar _SignerAlgorithm = _interopRequireDefault(require(\"./SignerAlgorithm\"));\n\nvar _base64url = _interopRequireDefault(require(\"base64url\"));\n\nvar _didResolver = _interopRequireDefault(require(\"did-resolver\"));\n\nvar SUPPORTED_PUBLIC_KEY_TYPES = {\n  ES256K: ['Secp256k1VerificationKey2018', 'Secp256k1SignatureVerificationKey2018', 'EcdsaPublicKeySecp256k1'],\n  'ES256K-R': ['Secp256k1VerificationKey2018', 'Secp256k1SignatureVerificationKey2018', 'EcdsaPublicKeySecp256k1'],\n  'Ed25519': ['ED25519SignatureVerification']\n};\nvar JOSE_HEADER = {\n  typ: 'JWT'\n};\nvar defaultAlg = 'ES256K';\n\nfunction encodeSection(data) {\n  return _base64url.default.encode(JSON.stringify(data));\n}\n\nvar IAT_SKEW = 300;\n/**  @module did-jwt/JWT */\n\nexports.IAT_SKEW = IAT_SKEW;\n\nfunction isMNID(id) {\n  return id.match(/^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$/);\n}\n\nfunction isDIDOrMNID(mnidOrDid) {\n  return mnidOrDid && (mnidOrDid.match(/^did:/) || isMNID(mnidOrDid));\n}\n\nfunction normalizeDID(mnidOrDid) {\n  if (mnidOrDid.match(/^did:/)) return mnidOrDid; // Backwards compatibility\n\n  if (isMNID(mnidOrDid)) return \"did:uport:\".concat(mnidOrDid);\n  throw new Error(\"Not a valid DID '\".concat(mnidOrDid, \"'\"));\n}\n/**\n*  Decodes a JWT and returns an object representing the payload\n*\n*  @example\n*  decodeJWT('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJpYXQiOjE1MjU5Mjc1MTcsImF1ZCI6ImRpZDp1cG9ydDoyb3NuZko0V3k3TEJBbTJuUEJYaXJlMVdmUW43NVJyVjZUcyIsImV4cCI6MTU1NzQ2MzQyMSwibmFtZSI6InVQb3J0IERldmVsb3BlciIsImlzcyI6ImRpZDp1cG9ydDoyb3NuZko0V3k3TEJBbTJuUEJYaXJlMVdmUW43NVJyVjZUcyJ9.R7owbvNZoL4ti5ec-Kpktb0datw9Y-FshHsF5R7cXuKaiGlQz1dcOOXbXTOb-wg7-30CDfchFERR6Yc8F61ymw')\n*\n*  @param    {String}            jwt                a JSON Web Token to verify\n*  @return   {Object}                               a JS object representing the decoded JWT\n*/\n\n\nfunction decodeJWT(jwt) {\n  if (!jwt) throw new Error('no JWT passed into decodeJWT');\n  var parts = jwt.match(/^([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)$/);\n\n  if (parts) {\n    return {\n      header: JSON.parse(_base64url.default.decode(parts[1])),\n      payload: JSON.parse(_base64url.default.decode(parts[2])),\n      signature: parts[3],\n      data: \"\".concat(parts[1], \".\").concat(parts[2])\n    };\n  }\n\n  throw new Error('Incorrect format JWT');\n}\n/**\n*  Creates a signed JWT given an address which becomes the issuer, a signer, and a payload for which the signature is over.\n*\n*  @example\n*  const signer = SimpleSigner(process.env.PRIVATE_KEY)\n*  createJWT({address: '5A8bRWU3F7j3REx3vkJ...', signer}, {key1: 'value', key2: ..., ... }).then(jwt => {\n*      ...\n*  })\n*\n*  @param    {Object}            payload            payload object\n*  @param    {Object}            [options]           an unsigned credential object\n*  @param    {String}            options.issuer      The DID of the issuer (signer) of JWT\n*  @param    {String}            options.alg         The JWT signing algorithm to use. Supports: [ES256K, ES256K-R, Ed25519], Defaults to: ES256K\n*  @param    {SimpleSigner}      options.signer      a signer, reference our SimpleSigner.js\n*  @return   {Promise<Object, Error>}               a promise which resolves with a signed JSON Web Token or rejects with an error\n*/\n\n\nfunction createJWT(_x, _x2) {\n  return _createJWT.apply(this, arguments);\n}\n/**\n*  Verifies given JWT. If the JWT is valid, the promise returns an object including the JWT, the payload of the JWT,\n*  and the did doc of the issuer of the JWT.\n*\n*  @example\n*  verifyJWT('did:uport:eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....', {audience: '5A8bRWU3F7j3REx3vkJ...', callbackUrl: 'https://...'}).then(obj => {\n*      const did = obj.did // DID of signer\n*      const payload = obj.payload\n*      const doc = obj.doc // DID Document of signer\n*      const jwt = obj.jwt\n*      const signerKeyId = obj.signerKeyId // ID of key in DID document that signed JWT\n*      ...\n*  })\n*\n*  @param    {String}            jwt                a JSON Web Token to verify\n*  @param    {Object}            [options]           an unsigned credential object\n*  @param    {Boolean}           options.auth        Require signer to be listed in the authentication section of the DID document (for Authentication purposes)\n*  @param    {String}            options.audience    DID of the recipient of the JWT\n*  @param    {String}            options.callbackUrl callback url in JWT\n*  @return   {Promise<Object, Error>}               a promise which resolves with a response object or rejects with an error\n*/\n\n\nfunction _createJWT() {\n  _createJWT = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  _regenerator.default.mark(function _callee(payload, _ref) {\n    var issuer, signer, alg, expiresIn, header, timestamps, signingInput, jwtSigner, signature;\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            issuer = _ref.issuer, signer = _ref.signer, alg = _ref.alg, expiresIn = _ref.expiresIn;\n\n            if (signer) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('No Signer functionality has been configured');\n\n          case 3:\n            if (issuer) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error('No issuing DID has been configured');\n\n          case 5:\n            header = (0, _objectSpread2.default)({}, JOSE_HEADER, {\n              alg: alg || defaultAlg\n            });\n            timestamps = {\n              iat: Math.floor(Date.now() / 1000)\n            };\n\n            if (!expiresIn) {\n              _context.next = 13;\n              break;\n            }\n\n            if (!(typeof expiresIn === 'number')) {\n              _context.next = 12;\n              break;\n            }\n\n            timestamps.exp = timestamps.iat + Math.floor(expiresIn);\n            _context.next = 13;\n            break;\n\n          case 12:\n            throw new Error('JWT expiresIn is not a number');\n\n          case 13:\n            signingInput = [encodeSection(header), encodeSection((0, _objectSpread2.default)({}, timestamps, payload, {\n              iss: issuer\n            }))].join('.');\n            jwtSigner = (0, _SignerAlgorithm.default)(header.alg);\n            _context.next = 17;\n            return jwtSigner(signingInput, signer);\n\n          case 17:\n            signature = _context.sent;\n            return _context.abrupt(\"return\", [signingInput, signature].join('.'));\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _createJWT.apply(this, arguments);\n}\n\nfunction verifyJWT(_x3) {\n  return _verifyJWT.apply(this, arguments);\n}\n/**\n* Resolves relevant public keys or other authenticating material used to verify signature from the DID document of provided DID\n*\n*  @example\n*  resolveAuthenticator('ES256K', 'did:uport:2nQtiQG6Cgm1GYTBaaKAgr76uY7iSexUkqX').then(obj => {\n*      const payload = obj.payload\n*      const profile = obj.profile\n*      const jwt = obj.jwt\n*      ...\n*  })\n*\n*  @param    {String}            alg                a JWT algorithm\n*  @param    {String}            did                a Decentralized IDentifier (DID) to lookup\n*  @param    {Boolean}           auth               Restrict public keys to ones specifically listed in the 'authentication' section of DID document\n*  @return   {Promise<Object, Error>}               a promise which resolves with a response object containing an array of authenticators or if non exist rejects with an error\n*/\n\n\nfunction _verifyJWT() {\n  _verifyJWT = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  _regenerator.default.mark(function _callee2(jwt) {\n    var options,\n        aud,\n        _decodeJWT,\n        payload,\n        header,\n        signature,\n        data,\n        _ref2,\n        doc,\n        authenticators,\n        issuer,\n        signer,\n        now,\n        _args2 = arguments;\n\n    return _regenerator.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n            aud = options.audience ? normalizeDID(options.audience) : undefined;\n            _decodeJWT = decodeJWT(jwt), payload = _decodeJWT.payload, header = _decodeJWT.header, signature = _decodeJWT.signature, data = _decodeJWT.data;\n            _context2.next = 5;\n            return resolveAuthenticator(header.alg, payload.iss, options.auth);\n\n          case 5:\n            _ref2 = _context2.sent;\n            doc = _ref2.doc;\n            authenticators = _ref2.authenticators;\n            issuer = _ref2.issuer;\n            signer = (0, _VerifierAlgorithm.default)(header.alg)(data, signature, authenticators);\n            now = Math.floor(Date.now() / 1000);\n\n            if (!signer) {\n              _context2.next = 31;\n              break;\n            }\n\n            if (!(payload.iat && payload.iat > now + IAT_SKEW)) {\n              _context2.next = 14;\n              break;\n            }\n\n            throw new Error(\"JWT not valid yet (issued in the future): iat: \".concat(payload.iat, \" > now: \").concat(now));\n\n          case 14:\n            if (!(payload.exp && payload.exp <= now - IAT_SKEW)) {\n              _context2.next = 16;\n              break;\n            }\n\n            throw new Error(\"JWT has expired: exp: \".concat(payload.exp, \" < now: \").concat(now));\n\n          case 16:\n            if (!payload.aud) {\n              _context2.next = 28;\n              break;\n            }\n\n            if (!isDIDOrMNID(payload.aud)) {\n              _context2.next = 24;\n              break;\n            }\n\n            if (aud) {\n              _context2.next = 20;\n              break;\n            }\n\n            throw new Error('JWT audience is required but your app address has not been configured');\n\n          case 20:\n            if (!(aud !== normalizeDID(payload.aud))) {\n              _context2.next = 22;\n              break;\n            }\n\n            throw new Error(\"JWT audience does not match your DID: aud: \".concat(payload.aud, \" !== yours: \").concat(aud));\n\n          case 22:\n            _context2.next = 28;\n            break;\n\n          case 24:\n            if (options.callbackUrl) {\n              _context2.next = 26;\n              break;\n            }\n\n            throw new Error('JWT audience matching your callback url is required but one wasn\\'t passed in');\n\n          case 26:\n            if (!(payload.aud !== options.callbackUrl)) {\n              _context2.next = 28;\n              break;\n            }\n\n            throw new Error(\"JWT audience does not match the callback url: aud: \".concat(payload.aud, \" !== url: \").concat(options.callbackUrl));\n\n          case 28:\n            return _context2.abrupt(\"return\", {\n              payload: payload,\n              doc: doc,\n              issuer: issuer,\n              signer: signer,\n              jwt: jwt\n            });\n\n          case 31:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _verifyJWT.apply(this, arguments);\n}\n\nfunction resolveAuthenticator(_x4, _x5, _x6) {\n  return _resolveAuthenticator.apply(this, arguments);\n}\n\nfunction _resolveAuthenticator() {\n  _resolveAuthenticator = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  _regenerator.default.mark(function _callee3(alg, mnidOrDid, auth) {\n    var types, issuer, doc, authenticationKeys, authenticators;\n    return _regenerator.default.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            types = SUPPORTED_PUBLIC_KEY_TYPES[alg];\n\n            if (!(!types || types.length === 0)) {\n              _context3.next = 3;\n              break;\n            }\n\n            throw new Error(\"No supported signature types for algorithm \".concat(alg));\n\n          case 3:\n            issuer = normalizeDID(mnidOrDid);\n            _context3.next = 6;\n            return (0, _didResolver.default)(issuer);\n\n          case 6:\n            doc = _context3.sent;\n\n            if (doc) {\n              _context3.next = 9;\n              break;\n            }\n\n            throw new Error(\"Unable to resolve DID document for \".concat(issuer));\n\n          case 9:\n            authenticationKeys = auth ? (doc.authentication || []).map(function (_ref3) {\n              var publicKey = _ref3.publicKey;\n              return publicKey;\n            }) : true;\n            authenticators = (doc.publicKey || []).filter(function (_ref4) {\n              var type = _ref4.type,\n                  id = _ref4.id;\n              return types.find(function (supported) {\n                return supported === type && (!auth || authenticationKeys.indexOf(id) >= 0);\n              });\n            });\n\n            if (!(auth && (!authenticators || authenticators.length === 0))) {\n              _context3.next = 13;\n              break;\n            }\n\n            throw new Error(\"DID document for \".concat(issuer, \" does not have public keys suitable for authenticationg user\"));\n\n          case 13:\n            if (!(!authenticators || authenticators.length === 0)) {\n              _context3.next = 15;\n              break;\n            }\n\n            throw new Error(\"DID document for \".concat(issuer, \" does not have public keys for \").concat(alg));\n\n          case 15:\n            return _context3.abrupt(\"return\", {\n              authenticators: authenticators,\n              issuer: issuer,\n              doc: doc\n            });\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n  return _resolveAuthenticator.apply(this, arguments);\n}\n\nvar _default = {\n  decodeJWT: decodeJWT,\n  createJWT: createJWT,\n  verifyJWT: verifyJWT,\n  resolveAuthenticator: resolveAuthenticator\n};\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var ready = require('./ready');\n/**\n  ### `sink(socket, opts?)`\n\n  Create a pull-stream `Sink` that will write data to the `socket`.\n\n  <<< examples/write.js\n\n**/\n\n\nvar nextTick = typeof setImmediate !== 'undefined' ? setImmediate : process.nextTick;\n\nmodule.exports = function (socket, opts) {\n  return function (read) {\n    opts = opts || {};\n    var closeOnEnd = opts.closeOnEnd !== false;\n    var onClose = 'function' === typeof opts ? opts : opts.onClose;\n\n    function next(end, data) {\n      // if the stream has ended, simply return\n      if (end) {\n        if (closeOnEnd && socket.readyState <= 1) {\n          if (onClose) socket.addEventListener('close', function (ev) {\n            if (ev.wasClean || ev.code === 1006) onClose();else {\n              var err = new Error('ws error');\n              err.event = ev;\n              onClose(err);\n            }\n          });\n          socket.close();\n        }\n\n        return;\n      } // socket ready?\n\n\n      ready(socket, function (end) {\n        if (end) {\n          return read(end, function () {});\n        }\n\n        socket.send(data);\n        nextTick(function () {\n          read(null, next);\n        });\n      });\n    }\n\n    read(null, next);\n  };\n};","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/moloch/moloch-dao-badges/node_modules/pull-ws/sink.js"],"names":["ready","require","nextTick","setImmediate","process","module","exports","socket","opts","read","closeOnEnd","onClose","next","end","data","readyState","addEventListener","ev","wasClean","code","err","Error","event","close","send"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAEA;;;;;;;;;;AASA,IAAIC,QAAQ,GAAG,OAAOC,YAAP,KAAwB,WAAxB,GAAsCA,YAAtC,GAAqDC,OAAO,CAACF,QAA5E;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAASC,MAAT,EAAiBC,IAAjB,EAAuB;AACtC,SAAO,UAAUC,IAAV,EAAgB;AACrBD,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,QAAIE,UAAU,GAAGF,IAAI,CAACE,UAAL,KAAoB,KAArC;AACA,QAAIC,OAAO,GAAG,eAAe,OAAOH,IAAtB,GAA6BA,IAA7B,GAAoCA,IAAI,CAACG,OAAvD;;AAEA,aAASC,IAAT,CAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvB;AACA,UAAID,GAAJ,EAAS;AACP,YAAIH,UAAU,IAAIH,MAAM,CAACQ,UAAP,IAAqB,CAAvC,EAA0C;AACxC,cAAGJ,OAAH,EACEJ,MAAM,CAACS,gBAAP,CAAwB,OAAxB,EAAiC,UAAUC,EAAV,EAAc;AAC7C,gBAAGA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACE,IAAH,KAAY,IAA9B,EAAoCR,OAAO,GAA3C,KACK;AACH,kBAAIS,GAAG,GAAG,IAAIC,KAAJ,CAAU,UAAV,CAAV;AACAD,cAAAA,GAAG,CAACE,KAAJ,GAAYL,EAAZ;AACAN,cAAAA,OAAO,CAACS,GAAD,CAAP;AACD;AACF,WAPD;AASFb,UAAAA,MAAM,CAACgB,KAAP;AACD;;AAED;AACD,OAlBsB,CAoBvB;;;AACAvB,MAAAA,KAAK,CAACO,MAAD,EAAS,UAASM,GAAT,EAAc;AAC1B,YAAIA,GAAJ,EAAS;AACP,iBAAOJ,IAAI,CAACI,GAAD,EAAM,YAAY,CAAE,CAApB,CAAX;AACD;;AACDN,QAAAA,MAAM,CAACiB,IAAP,CAAYV,IAAZ;AACAZ,QAAAA,QAAQ,CAAC,YAAW;AAClBO,UAAAA,IAAI,CAAC,IAAD,EAAOG,IAAP,CAAJ;AACD,SAFO,CAAR;AAGD,OARI,CAAL;AASD;;AAEDH,IAAAA,IAAI,CAAC,IAAD,EAAOG,IAAP,CAAJ;AACD,GAtCD;AAuCD,CAxCD","sourcesContent":["var ready = require('./ready');\n\n/**\n  ### `sink(socket, opts?)`\n\n  Create a pull-stream `Sink` that will write data to the `socket`.\n\n  <<< examples/write.js\n\n**/\n\nvar nextTick = typeof setImmediate !== 'undefined' ? setImmediate : process.nextTick\n\nmodule.exports = function(socket, opts) {\n  return function (read) {\n    opts = opts || {}\n    var closeOnEnd = opts.closeOnEnd !== false;\n    var onClose = 'function' === typeof opts ? opts : opts.onClose;\n\n    function next(end, data) {\n      // if the stream has ended, simply return\n      if (end) {\n        if (closeOnEnd && socket.readyState <= 1) {\n          if(onClose)\n            socket.addEventListener('close', function (ev) {\n              if(ev.wasClean || ev.code === 1006) onClose()\n              else {\n                var err = new Error('ws error')\n                err.event = ev\n                onClose(err)\n              }\n            });\n\n          socket.close()\n        }\n\n        return;\n      }\n\n      // socket ready?\n      ready(socket, function(end) {\n        if (end) {\n          return read(end, function () {});\n        }\n        socket.send(data);\n        nextTick(function() {\n          read(null, next);\n        });\n      });\n    }\n\n    read(null, next);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"/home/dekan/Projects/raid-guild/dao-badges-web/packages/react-app/src/components/badges/BadgeList.js\";\nimport React, { useEffect, useContext } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Flex, Heading, Text, Box } from \"rebass\";\nimport { GET_BADGES } from \"../../utils/Queries\";\nimport { hydrateBadgeData } from \"../../utils/Helpers\";\nimport BadgeRegistry from \"../../assets/data/badges.json\";\nimport BadgeItem from \"./BadgeItem\";\nimport { Web3ModalContext } from \"../../contexts/Store\";\nimport { addresses, abis } from \"@project/contracts\";\n\nconst BadgeList = ({\n  playerAddr\n}) => {\n  const [badges, setBadges] = React.useState([]);\n  const [web3Modal] = useContext(Web3ModalContext);\n  console.log('web3', web3Modal);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_BADGES, {\n    variables: {\n      addr: `${playerAddr}`\n    }\n  });\n  useEffect(() => {\n    if (!loading && !error && data) {\n      const hydratedBadgeData = hydrateBadgeData(BadgeRegistry, data.badges);\n      setBadges(hydratedBadgeData);\n    }\n  }, [loading, error, data]);\n\n  const mintNFT = async () => {\n    const contract = new web3Modal.web3.eth.Contract(abis.NFT, addresses.badgeNFT);\n    console.log('contract', contract);\n  };\n\n  const renderBadges = () => {\n    return badges.map((badge, idx) => {\n      return /*#__PURE__*/React.createElement(Box, {\n        mb: 5,\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        fontSize: 5,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, badge.title), /*#__PURE__*/React.createElement(Text, {\n        fontSize: 3,\n        fontWeight: \"bold\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, badge.description), /*#__PURE__*/React.createElement(Flex, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, renderBadgeItems(badge)));\n    });\n  };\n\n  const renderBadgeItems = badge => {\n    return badge.thresholds.map((step, idx) => {\n      return /*#__PURE__*/React.createElement(BadgeItem, {\n        mintNFT: mintNFT,\n        badge: badge,\n        step: step,\n        idx: idx,\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }, badges.length && renderBadges());\n};\n\nexport default BadgeList;","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/packages/react-app/src/components/badges/BadgeList.js"],"names":["React","useEffect","useContext","useQuery","Flex","Heading","Text","Box","GET_BADGES","hydrateBadgeData","BadgeRegistry","BadgeItem","Web3ModalContext","addresses","abis","BadgeList","playerAddr","badges","setBadges","useState","web3Modal","console","log","loading","error","data","variables","addr","hydratedBadgeData","mintNFT","contract","web3","eth","Contract","NFT","badgeNFT","renderBadges","map","badge","idx","title","description","renderBadgeItems","thresholds","step","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Flex, Heading, Text, Box } from \"rebass\";\n\nimport { GET_BADGES } from \"../../utils/Queries\";\nimport { hydrateBadgeData } from \"../../utils/Helpers\";\nimport BadgeRegistry from \"../../assets/data/badges.json\";\nimport BadgeItem from \"./BadgeItem\";\nimport { Web3ModalContext } from \"../../contexts/Store\";\nimport { addresses, abis } from \"@project/contracts\";\n\nconst BadgeList = ({ playerAddr }) => {\n  const [badges, setBadges] = React.useState([]);\n  const [web3Modal] = useContext(Web3ModalContext)\n  console.log('web3', web3Modal);\n\n  const { loading, error, data } = useQuery(GET_BADGES, {\n    variables: {\n      addr: `${playerAddr}`,\n    },\n  });\n\n  useEffect(() => {\n    if (!loading && !error && data) {\n      const hydratedBadgeData = hydrateBadgeData(BadgeRegistry, data.badges);\n      setBadges(hydratedBadgeData);\n    }\n  }, [loading, error, data]);\n\n  const mintNFT = async() => {\n    const contract = new web3Modal.web3.eth.Contract(abis.NFT, addresses.badgeNFT); \n    console.log('contract', contract);\n  }\n\n  const renderBadges = () => {\n    return badges.map((badge, idx) => {\n      return (\n        <Box mb={5} key={idx}>\n          <Heading fontSize={5} color=\"primary\">\n            {badge.title}\n          </Heading>\n          <Text fontSize={3} fontWeight=\"bold\" color=\"primary\">\n            {badge.description}\n          </Text>\n          <Flex>{renderBadgeItems(badge)}</Flex>\n        </Box>\n      );\n    });\n  };\n\n  const renderBadgeItems = (badge) => {\n    return badge.thresholds.map((step, idx) => {\n      return <BadgeItem mintNFT={mintNFT} badge={badge} step={step} idx={idx} key={idx} />;\n    });\n  };\n\n  return <div>{badges.length && renderBadges()}</div>;\n};\n\nexport default BadgeList;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nvar State = require('./state');\n\nfunction isInteger(i) {\n  return Number.isFinite(i);\n}\n\nfunction isFunction(f) {\n  return 'function' === typeof f;\n}\n\nfunction maxDelay(fn, delay) {\n  if (!delay) return fn;\n  return function (a, cb) {\n    var timer = setTimeout(function () {\n      fn(new Error('pull-reader: read exceeded timeout'), cb);\n    }, delay);\n    fn(a, function (err, value) {\n      clearTimeout(timer);\n      cb(err, value);\n    });\n  };\n}\n\nmodule.exports = function (timeout) {\n  var queue = [],\n      read,\n      readTimed,\n      reading = false;\n  var state = State(),\n      ended,\n      streaming,\n      abort;\n\n  function drain() {\n    while (queue.length) {\n      if (null == queue[0].length && state.has(1)) {\n        queue.shift().cb(null, state.get());\n      } else if (state.has(queue[0].length)) {\n        var next = queue.shift();\n        next.cb(null, state.get(next.length));\n      } else if (ended == true && queue[0].length && state.length < queue[0].length) {\n        var msg = 'stream ended with:' + state.length + ' but wanted:' + queue[0].length;\n        queue.shift().cb(new Error(msg));\n      } else if (ended) queue.shift().cb(ended);else return !!queue.length;\n    } //always read a little data\n\n\n    return queue.length || !state.has(1) || abort;\n  }\n\n  function more() {\n    var d = drain();\n    if (d && !reading) if (read && !reading && !streaming) {\n      reading = true;\n      readTimed(null, function (err, data) {\n        reading = false;\n\n        if (err) {\n          ended = err;\n          return drain();\n        }\n\n        state.add(data);\n        more();\n      });\n    }\n  }\n\n  function reader(_read) {\n    if (abort) {\n      while (queue.length) queue.shift().cb(abort);\n\n      return cb && cb(abort);\n    }\n\n    readTimed = maxDelay(_read, timeout);\n    read = _read;\n    more();\n  }\n\n  reader.abort = function (err, cb) {\n    abort = err || true;\n\n    if (read) {\n      reading = true;\n      read(abort, function () {\n        while (queue.length) queue.shift().cb(abort);\n\n        cb && cb(abort);\n      });\n    } else cb();\n  };\n\n  reader.read = function (len, _timeout, cb) {\n    if (isFunction(_timeout)) cb = _timeout, _timeout = timeout;\n\n    if (isFunction(cb)) {\n      queue.push({\n        length: isInteger(len) ? len : null,\n        cb: cb\n      });\n      more();\n    } else {\n      //switch into streaming mode for the rest of the stream.\n      streaming = true; //wait for the current read to complete\n\n      return function (abort, cb) {\n        //if there is anything still in the queue,\n        if (reading || state.has(1)) {\n          if (abort) return read(abort, cb);\n          queue.push({\n            length: null,\n            cb: cb\n          });\n          more();\n        } else maxDelay(read, _timeout)(abort, function (err, data) {\n          cb(err, data);\n        });\n      };\n    }\n  };\n\n  return reader;\n};","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/pull-reader/index.js"],"names":["State","require","isInteger","i","Number","isFinite","isFunction","f","maxDelay","fn","delay","a","cb","timer","setTimeout","Error","err","value","clearTimeout","module","exports","timeout","queue","read","readTimed","reading","state","ended","streaming","abort","drain","length","has","shift","get","next","msg","more","d","data","add","reader","_read","len","_timeout","push"],"mappings":"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","sourcesContent":["'use strict'\nvar State = require('./state')\n\nfunction isInteger (i) {\n  return Number.isFinite(i)\n}\n\nfunction isFunction (f) {\n  return 'function' === typeof f\n}\n\nfunction maxDelay(fn, delay) {\n  if(!delay) return fn\n  return function (a, cb) {\n    var timer = setTimeout(function () {\n      fn(new Error('pull-reader: read exceeded timeout'), cb)\n    }, delay)\n    fn(a, function (err, value) {\n      clearTimeout(timer)\n      cb(err, value)\n    })\n\n  }\n\n}\n\nmodule.exports = function (timeout) {\n\n  var queue = [], read, readTimed, reading = false\n  var state = State(), ended, streaming, abort\n\n  function drain () {\n    while (queue.length) {\n      if(null == queue[0].length && state.has(1)) {\n        queue.shift().cb(null, state.get())\n      }\n      else if(state.has(queue[0].length)) {\n        var next = queue.shift()\n        next.cb(null, state.get(next.length))\n      }\n      else if(ended == true && queue[0].length && state.length < queue[0].length) {\n        var msg = 'stream ended with:'+state.length+' but wanted:'+queue[0].length\n        queue.shift().cb(new Error(msg))\n      }\n      else if(ended)\n        queue.shift().cb(ended)\n      else\n        return !!queue.length\n    }\n    //always read a little data\n    return queue.length || !state.has(1) || abort\n  }\n\n  function more () {\n    var d = drain()\n    if(d && !reading)\n    if(read && !reading && !streaming) {\n      reading = true\n      readTimed (null, function (err, data) {\n        reading = false\n        if(err) {\n          ended = err\n          return drain()\n        }\n        state.add(data)\n        more()\n      })\n    }\n  }\n\n  function reader (_read) {\n    if(abort) {\n      while(queue.length) queue.shift().cb(abort)\n      return cb && cb(abort)\n    }\n    readTimed = maxDelay(_read, timeout)\n    read = _read\n    more()\n  }\n\n  reader.abort = function (err, cb) {\n    abort = err || true\n    if(read) {\n      reading = true\n      read(abort, function () {\n        while(queue.length) queue.shift().cb(abort)\n        cb && cb(abort)\n      })\n    }\n    else\n      cb()\n  }\n\n  reader.read = function (len, _timeout, cb) {\n    if(isFunction(_timeout))\n      cb = _timeout, _timeout = timeout\n    if(isFunction(cb)) {\n      queue.push({length: isInteger(len) ? len : null, cb: cb})\n      more()\n    }\n    else {\n      //switch into streaming mode for the rest of the stream.\n      streaming = true\n      //wait for the current read to complete\n      return function (abort, cb) {\n        //if there is anything still in the queue,\n        if(reading || state.has(1)) {\n          if(abort) return read(abort, cb)\n          queue.push({length: null, cb: cb})\n          more()\n        }\n        else\n          maxDelay(read, _timeout)(abort, function (err, data) {\n            cb(err, data)\n          })\n      }\n    }\n  }\n\n  return reader\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"script"}
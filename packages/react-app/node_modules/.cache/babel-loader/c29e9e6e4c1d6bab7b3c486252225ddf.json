{"ast":null,"code":"var xtend = require('xtend');\n\nvar supports = require('level-supports');\n\nvar AbstractIterator = require('./abstract-iterator');\n\nvar AbstractChainedBatch = require('./abstract-chained-batch');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar rangeOptions = 'start end gt gte lt lte'.split(' ');\n\nfunction AbstractLevelDOWN(manifest) {\n  this.status = 'new'; // TODO (next major): make this mandatory\n\n  this.supports = supports(manifest, {\n    status: true\n  });\n}\n\nAbstractLevelDOWN.prototype.open = function (options, callback) {\n  var self = this;\n  var oldStatus = this.status;\n  if (typeof options === 'function') callback = options;\n\n  if (typeof callback !== 'function') {\n    throw new Error('open() requires a callback argument');\n  }\n\n  if (typeof options !== 'object' || options === null) options = {};\n  options.createIfMissing = options.createIfMissing !== false;\n  options.errorIfExists = !!options.errorIfExists;\n  this.status = 'opening';\n\n  this._open(options, function (err) {\n    if (err) {\n      self.status = oldStatus;\n      return callback(err);\n    }\n\n    self.status = 'open';\n    callback();\n  });\n};\n\nAbstractLevelDOWN.prototype._open = function (options, callback) {\n  process.nextTick(callback);\n};\n\nAbstractLevelDOWN.prototype.close = function (callback) {\n  var self = this;\n  var oldStatus = this.status;\n\n  if (typeof callback !== 'function') {\n    throw new Error('close() requires a callback argument');\n  }\n\n  this.status = 'closing';\n\n  this._close(function (err) {\n    if (err) {\n      self.status = oldStatus;\n      return callback(err);\n    }\n\n    self.status = 'closed';\n    callback();\n  });\n};\n\nAbstractLevelDOWN.prototype._close = function (callback) {\n  process.nextTick(callback);\n};\n\nAbstractLevelDOWN.prototype.get = function (key, options, callback) {\n  if (typeof options === 'function') callback = options;\n\n  if (typeof callback !== 'function') {\n    throw new Error('get() requires a callback argument');\n  }\n\n  var err = this._checkKey(key);\n\n  if (err) return process.nextTick(callback, err);\n  key = this._serializeKey(key);\n  if (typeof options !== 'object' || options === null) options = {};\n  options.asBuffer = options.asBuffer !== false;\n\n  this._get(key, options, callback);\n};\n\nAbstractLevelDOWN.prototype._get = function (key, options, callback) {\n  process.nextTick(function () {\n    callback(new Error('NotFound'));\n  });\n};\n\nAbstractLevelDOWN.prototype.put = function (key, value, options, callback) {\n  if (typeof options === 'function') callback = options;\n\n  if (typeof callback !== 'function') {\n    throw new Error('put() requires a callback argument');\n  }\n\n  var err = this._checkKey(key) || this._checkValue(value);\n\n  if (err) return process.nextTick(callback, err);\n  key = this._serializeKey(key);\n  value = this._serializeValue(value);\n  if (typeof options !== 'object' || options === null) options = {};\n\n  this._put(key, value, options, callback);\n};\n\nAbstractLevelDOWN.prototype._put = function (key, value, options, callback) {\n  process.nextTick(callback);\n};\n\nAbstractLevelDOWN.prototype.del = function (key, options, callback) {\n  if (typeof options === 'function') callback = options;\n\n  if (typeof callback !== 'function') {\n    throw new Error('del() requires a callback argument');\n  }\n\n  var err = this._checkKey(key);\n\n  if (err) return process.nextTick(callback, err);\n  key = this._serializeKey(key);\n  if (typeof options !== 'object' || options === null) options = {};\n\n  this._del(key, options, callback);\n};\n\nAbstractLevelDOWN.prototype._del = function (key, options, callback) {\n  process.nextTick(callback);\n};\n\nAbstractLevelDOWN.prototype.batch = function (array, options, callback) {\n  if (!arguments.length) return this._chainedBatch();\n  if (typeof options === 'function') callback = options;\n  if (typeof array === 'function') callback = array;\n\n  if (typeof callback !== 'function') {\n    throw new Error('batch(array) requires a callback argument');\n  }\n\n  if (!Array.isArray(array)) {\n    return process.nextTick(callback, new Error('batch(array) requires an array argument'));\n  }\n\n  if (array.length === 0) {\n    return process.nextTick(callback);\n  }\n\n  if (typeof options !== 'object' || options === null) options = {};\n  var serialized = new Array(array.length);\n\n  for (var i = 0; i < array.length; i++) {\n    if (typeof array[i] !== 'object' || array[i] === null) {\n      return process.nextTick(callback, new Error('batch(array) element must be an object and not `null`'));\n    }\n\n    var e = xtend(array[i]);\n\n    if (e.type !== 'put' && e.type !== 'del') {\n      return process.nextTick(callback, new Error(\"`type` must be 'put' or 'del'\"));\n    }\n\n    var err = this._checkKey(e.key);\n\n    if (err) return process.nextTick(callback, err);\n    e.key = this._serializeKey(e.key);\n\n    if (e.type === 'put') {\n      var valueErr = this._checkValue(e.value);\n\n      if (valueErr) return process.nextTick(callback, valueErr);\n      e.value = this._serializeValue(e.value);\n    }\n\n    serialized[i] = e;\n  }\n\n  this._batch(serialized, options, callback);\n};\n\nAbstractLevelDOWN.prototype._batch = function (array, options, callback) {\n  process.nextTick(callback);\n};\n\nAbstractLevelDOWN.prototype.clear = function (options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (typeof callback !== 'function') {\n    throw new Error('clear() requires a callback argument');\n  }\n\n  options = cleanRangeOptions(this, options);\n  options.reverse = !!options.reverse;\n  options.limit = 'limit' in options ? options.limit : -1;\n\n  this._clear(options, callback);\n};\n\nAbstractLevelDOWN.prototype._clear = function (options, callback) {\n  // Avoid setupIteratorOptions, would serialize range options a second time.\n  options.keys = true;\n  options.values = false;\n  options.keyAsBuffer = true;\n  options.valueAsBuffer = true;\n\n  var iterator = this._iterator(options);\n\n  var emptyOptions = {};\n  var self = this;\n\n  var next = function (err) {\n    if (err) {\n      return iterator.end(function () {\n        callback(err);\n      });\n    }\n\n    iterator.next(function (err, key) {\n      if (err) return next(err);\n      if (key === undefined) return iterator.end(callback); // This could be optimized by using a batch, but the default _clear\n      // is not meant to be fast. Implementations have more room to optimize\n      // if they override _clear. Note: using _del bypasses key serialization.\n\n      self._del(key, emptyOptions, next);\n    });\n  };\n\n  next();\n};\n\nAbstractLevelDOWN.prototype._setupIteratorOptions = function (options) {\n  options = cleanRangeOptions(this, options);\n  options.reverse = !!options.reverse;\n  options.keys = options.keys !== false;\n  options.values = options.values !== false;\n  options.limit = 'limit' in options ? options.limit : -1;\n  options.keyAsBuffer = options.keyAsBuffer !== false;\n  options.valueAsBuffer = options.valueAsBuffer !== false;\n  return options;\n};\n\nfunction cleanRangeOptions(db, options) {\n  var result = {};\n\n  for (var k in options) {\n    if (!hasOwnProperty.call(options, k)) continue;\n    var opt = options[k];\n\n    if (isRangeOption(k)) {\n      // Note that we don't reject nullish and empty options here. While\n      // those types are invalid as keys, they are valid as range options.\n      opt = db._serializeKey(opt);\n    }\n\n    result[k] = opt;\n  }\n\n  return result;\n}\n\nfunction isRangeOption(k) {\n  return rangeOptions.indexOf(k) !== -1;\n}\n\nAbstractLevelDOWN.prototype.iterator = function (options) {\n  if (typeof options !== 'object' || options === null) options = {};\n  options = this._setupIteratorOptions(options);\n  return this._iterator(options);\n};\n\nAbstractLevelDOWN.prototype._iterator = function (options) {\n  return new AbstractIterator(this);\n};\n\nAbstractLevelDOWN.prototype._chainedBatch = function () {\n  return new AbstractChainedBatch(this);\n};\n\nAbstractLevelDOWN.prototype._serializeKey = function (key) {\n  return key;\n};\n\nAbstractLevelDOWN.prototype._serializeValue = function (value) {\n  return value;\n};\n\nAbstractLevelDOWN.prototype._checkKey = function (key) {\n  if (key === null || key === undefined) {\n    return new Error('key cannot be `null` or `undefined`');\n  } else if (Buffer.isBuffer(key) && key.length === 0) {\n    return new Error('key cannot be an empty Buffer');\n  } else if (key === '') {\n    return new Error('key cannot be an empty String');\n  } else if (Array.isArray(key) && key.length === 0) {\n    return new Error('key cannot be an empty Array');\n  }\n};\n\nAbstractLevelDOWN.prototype._checkValue = function (value) {\n  if (value === null || value === undefined) {\n    return new Error('value cannot be `null` or `undefined`');\n  }\n};\n\nmodule.exports = AbstractLevelDOWN;","map":{"version":3,"sources":["/home/dekan/Projects/raid-guild/dao-badges-web/node_modules/encoding-down/node_modules/abstract-leveldown/abstract-leveldown.js"],"names":["xtend","require","supports","AbstractIterator","AbstractChainedBatch","hasOwnProperty","Object","prototype","rangeOptions","split","AbstractLevelDOWN","manifest","status","open","options","callback","self","oldStatus","Error","createIfMissing","errorIfExists","_open","err","process","nextTick","close","_close","get","key","_checkKey","_serializeKey","asBuffer","_get","put","value","_checkValue","_serializeValue","_put","del","_del","batch","array","arguments","length","_chainedBatch","Array","isArray","serialized","i","e","type","valueErr","_batch","clear","cleanRangeOptions","reverse","limit","_clear","keys","values","keyAsBuffer","valueAsBuffer","iterator","_iterator","emptyOptions","next","end","undefined","_setupIteratorOptions","db","result","k","call","opt","isRangeOption","indexOf","Buffer","isBuffer","module","exports"],"mappings":"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","sourcesContent":["var xtend = require('xtend')\nvar supports = require('level-supports')\nvar AbstractIterator = require('./abstract-iterator')\nvar AbstractChainedBatch = require('./abstract-chained-batch')\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar rangeOptions = 'start end gt gte lt lte'.split(' ')\n\nfunction AbstractLevelDOWN (manifest) {\n  this.status = 'new'\n\n  // TODO (next major): make this mandatory\n  this.supports = supports(manifest, {\n    status: true\n  })\n}\n\nAbstractLevelDOWN.prototype.open = function (options, callback) {\n  var self = this\n  var oldStatus = this.status\n\n  if (typeof options === 'function') callback = options\n\n  if (typeof callback !== 'function') {\n    throw new Error('open() requires a callback argument')\n  }\n\n  if (typeof options !== 'object' || options === null) options = {}\n\n  options.createIfMissing = options.createIfMissing !== false\n  options.errorIfExists = !!options.errorIfExists\n\n  this.status = 'opening'\n  this._open(options, function (err) {\n    if (err) {\n      self.status = oldStatus\n      return callback(err)\n    }\n    self.status = 'open'\n    callback()\n  })\n}\n\nAbstractLevelDOWN.prototype._open = function (options, callback) {\n  process.nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.close = function (callback) {\n  var self = this\n  var oldStatus = this.status\n\n  if (typeof callback !== 'function') {\n    throw new Error('close() requires a callback argument')\n  }\n\n  this.status = 'closing'\n  this._close(function (err) {\n    if (err) {\n      self.status = oldStatus\n      return callback(err)\n    }\n    self.status = 'closed'\n    callback()\n  })\n}\n\nAbstractLevelDOWN.prototype._close = function (callback) {\n  process.nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.get = function (key, options, callback) {\n  if (typeof options === 'function') callback = options\n\n  if (typeof callback !== 'function') {\n    throw new Error('get() requires a callback argument')\n  }\n\n  var err = this._checkKey(key)\n  if (err) return process.nextTick(callback, err)\n\n  key = this._serializeKey(key)\n\n  if (typeof options !== 'object' || options === null) options = {}\n\n  options.asBuffer = options.asBuffer !== false\n\n  this._get(key, options, callback)\n}\n\nAbstractLevelDOWN.prototype._get = function (key, options, callback) {\n  process.nextTick(function () { callback(new Error('NotFound')) })\n}\n\nAbstractLevelDOWN.prototype.put = function (key, value, options, callback) {\n  if (typeof options === 'function') callback = options\n\n  if (typeof callback !== 'function') {\n    throw new Error('put() requires a callback argument')\n  }\n\n  var err = this._checkKey(key) || this._checkValue(value)\n  if (err) return process.nextTick(callback, err)\n\n  key = this._serializeKey(key)\n  value = this._serializeValue(value)\n\n  if (typeof options !== 'object' || options === null) options = {}\n\n  this._put(key, value, options, callback)\n}\n\nAbstractLevelDOWN.prototype._put = function (key, value, options, callback) {\n  process.nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.del = function (key, options, callback) {\n  if (typeof options === 'function') callback = options\n\n  if (typeof callback !== 'function') {\n    throw new Error('del() requires a callback argument')\n  }\n\n  var err = this._checkKey(key)\n  if (err) return process.nextTick(callback, err)\n\n  key = this._serializeKey(key)\n\n  if (typeof options !== 'object' || options === null) options = {}\n\n  this._del(key, options, callback)\n}\n\nAbstractLevelDOWN.prototype._del = function (key, options, callback) {\n  process.nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.batch = function (array, options, callback) {\n  if (!arguments.length) return this._chainedBatch()\n\n  if (typeof options === 'function') callback = options\n\n  if (typeof array === 'function') callback = array\n\n  if (typeof callback !== 'function') {\n    throw new Error('batch(array) requires a callback argument')\n  }\n\n  if (!Array.isArray(array)) {\n    return process.nextTick(callback, new Error('batch(array) requires an array argument'))\n  }\n\n  if (array.length === 0) {\n    return process.nextTick(callback)\n  }\n\n  if (typeof options !== 'object' || options === null) options = {}\n\n  var serialized = new Array(array.length)\n\n  for (var i = 0; i < array.length; i++) {\n    if (typeof array[i] !== 'object' || array[i] === null) {\n      return process.nextTick(callback, new Error('batch(array) element must be an object and not `null`'))\n    }\n\n    var e = xtend(array[i])\n\n    if (e.type !== 'put' && e.type !== 'del') {\n      return process.nextTick(callback, new Error(\"`type` must be 'put' or 'del'\"))\n    }\n\n    var err = this._checkKey(e.key)\n    if (err) return process.nextTick(callback, err)\n\n    e.key = this._serializeKey(e.key)\n\n    if (e.type === 'put') {\n      var valueErr = this._checkValue(e.value)\n      if (valueErr) return process.nextTick(callback, valueErr)\n\n      e.value = this._serializeValue(e.value)\n    }\n\n    serialized[i] = e\n  }\n\n  this._batch(serialized, options, callback)\n}\n\nAbstractLevelDOWN.prototype._batch = function (array, options, callback) {\n  process.nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.clear = function (options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n  } else if (typeof callback !== 'function') {\n    throw new Error('clear() requires a callback argument')\n  }\n\n  options = cleanRangeOptions(this, options)\n  options.reverse = !!options.reverse\n  options.limit = 'limit' in options ? options.limit : -1\n\n  this._clear(options, callback)\n}\n\nAbstractLevelDOWN.prototype._clear = function (options, callback) {\n  // Avoid setupIteratorOptions, would serialize range options a second time.\n  options.keys = true\n  options.values = false\n  options.keyAsBuffer = true\n  options.valueAsBuffer = true\n\n  var iterator = this._iterator(options)\n  var emptyOptions = {}\n  var self = this\n\n  var next = function (err) {\n    if (err) {\n      return iterator.end(function () {\n        callback(err)\n      })\n    }\n\n    iterator.next(function (err, key) {\n      if (err) return next(err)\n      if (key === undefined) return iterator.end(callback)\n\n      // This could be optimized by using a batch, but the default _clear\n      // is not meant to be fast. Implementations have more room to optimize\n      // if they override _clear. Note: using _del bypasses key serialization.\n      self._del(key, emptyOptions, next)\n    })\n  }\n\n  next()\n}\n\nAbstractLevelDOWN.prototype._setupIteratorOptions = function (options) {\n  options = cleanRangeOptions(this, options)\n\n  options.reverse = !!options.reverse\n  options.keys = options.keys !== false\n  options.values = options.values !== false\n  options.limit = 'limit' in options ? options.limit : -1\n  options.keyAsBuffer = options.keyAsBuffer !== false\n  options.valueAsBuffer = options.valueAsBuffer !== false\n\n  return options\n}\n\nfunction cleanRangeOptions (db, options) {\n  var result = {}\n\n  for (var k in options) {\n    if (!hasOwnProperty.call(options, k)) continue\n\n    var opt = options[k]\n\n    if (isRangeOption(k)) {\n      // Note that we don't reject nullish and empty options here. While\n      // those types are invalid as keys, they are valid as range options.\n      opt = db._serializeKey(opt)\n    }\n\n    result[k] = opt\n  }\n\n  return result\n}\n\nfunction isRangeOption (k) {\n  return rangeOptions.indexOf(k) !== -1\n}\n\nAbstractLevelDOWN.prototype.iterator = function (options) {\n  if (typeof options !== 'object' || options === null) options = {}\n  options = this._setupIteratorOptions(options)\n  return this._iterator(options)\n}\n\nAbstractLevelDOWN.prototype._iterator = function (options) {\n  return new AbstractIterator(this)\n}\n\nAbstractLevelDOWN.prototype._chainedBatch = function () {\n  return new AbstractChainedBatch(this)\n}\n\nAbstractLevelDOWN.prototype._serializeKey = function (key) {\n  return key\n}\n\nAbstractLevelDOWN.prototype._serializeValue = function (value) {\n  return value\n}\n\nAbstractLevelDOWN.prototype._checkKey = function (key) {\n  if (key === null || key === undefined) {\n    return new Error('key cannot be `null` or `undefined`')\n  } else if (Buffer.isBuffer(key) && key.length === 0) {\n    return new Error('key cannot be an empty Buffer')\n  } else if (key === '') {\n    return new Error('key cannot be an empty String')\n  } else if (Array.isArray(key) && key.length === 0) {\n    return new Error('key cannot be an empty Array')\n  }\n}\n\nAbstractLevelDOWN.prototype._checkValue = function (value) {\n  if (value === null || value === undefined) {\n    return new Error('value cannot be `null` or `undefined`')\n  }\n}\n\nmodule.exports = AbstractLevelDOWN\n"]},"metadata":{},"sourceType":"script"}